{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8","program":"C:\\Users\\utibe\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=afa00e48bd09b45b","-C","extra-filename=-afa00e48bd09b45b","--out-dir","c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_task\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_task\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_task\\target\\rls\\debug\\deps\\libbytes-ee4bd5fae17c2159.rmeta","--extern","futures_core=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_task\\target\\rls\\debug\\deps\\libfutures_core-32e474f6038fda73.rmeta","--extern","futures_sink=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_task\\target\\rls\\debug\\deps\\libfutures_sink-e42795d774f63913.rmeta","--extern","log=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_task\\target\\rls\\debug\\deps\\liblog-5301ae822fe4e7bc.rmeta","--extern","pin_project_lite=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_task\\target\\rls\\debug\\deps\\libpin_project_lite-47e63c757fc795d6.rmeta","--extern","tokio=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_task\\target\\rls\\debug\\deps\\libtokio-97ab7b60fe8822f0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\utibe\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_task\\target\\rls\\debug\\deps\\libtokio_util-afa00e48bd09b45b.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[16211804404603008250,0]},"crate_root":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src","external_crates":[{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10193565062885309191,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[11670460313399248794,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8277854152057768692,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6312854529260013001,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11828252632451478976,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12374244740244276079,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10571265039882681484,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[417492704836984899,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7421411805122234607,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14357827127085763175,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7547149687459966599,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[3948222140130536591,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11460324065167655691,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":14,"id":{"name":"futures_core","disambiguator":[12775834467394043879,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":15,"id":{"name":"futures_sink","disambiguator":[17039386993996999424,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":16,"id":{"name":"tokio","disambiguator":[1331630905138191672,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":17,"id":{"name":"parking_lot","disambiguator":[15228530689223226655,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":18,"id":{"name":"instant","disambiguator":[13014861427012287482,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":19,"id":{"name":"cfg_if","disambiguator":[7548206254662694973,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":20,"id":{"name":"lock_api","disambiguator":[13611533371847563367,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":21,"id":{"name":"scopeguard","disambiguator":[1151845157251864566,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":22,"id":{"name":"parking_lot_core","disambiguator":[9166167449362190084,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":23,"id":{"name":"smallvec","disambiguator":[8876159010802709217,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":24,"id":{"name":"winapi","disambiguator":[10079024324585481289,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","num":25,"id":{"name":"pin_project_lite","disambiguator":[12708516026183657026,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":26,"id":{"name":"mio","disambiguator":[8554988267208324410,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","num":27,"id":{"name":"log","disambiguator":[9168290620402381,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":28,"id":{"name":"ntapi","disambiguator":[11630017826207880186,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":29,"id":{"name":"miow","disambiguator":[3560751403801395640,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","num":30,"id":{"name":"bytes","disambiguator":[2402397634358231219,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":31,"id":{"name":"once_cell","disambiguator":[4098761119963579161,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":32,"id":{"name":"tokio_macros","disambiguator":[7739058792503646556,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":33,"id":{"name":"memchr","disambiguator":[4003614346197858903,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","num":34,"id":{"name":"num_cpus","disambiguator":[3444143266640124110,0]}}],"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127477,"byte_end":14127487,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127526,"byte_end":14127533,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127572,"byte_end":14127579,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127741,"byte_end":14127747,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127749,"byte_end":14127760,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127808,"byte_end":14127818,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1423},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127867,"byte_end":14127878,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127940,"byte_end":14127960,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127962,"byte_end":14127987,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1261},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14128036,"byte_end":14128046,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14128048,"byte_end":14128063,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14128128,"byte_end":14128145,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14128147,"byte_end":14128169,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mod.rs","byte_start":6717,"byte_end":6726,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mod.rs","byte_start":6728,"byte_end":6745,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mod.rs","byte_start":6747,"byte_end":6772,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1398},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mod.rs","byte_start":6835,"byte_end":6845,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mod.rs","byte_start":6892,"byte_end":6905,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mod.rs","byte_start":6948,"byte_end":6965,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":511},{"krate":0,"index":14},{"krate":0,"index":393},{"krate":0,"index":462}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","byte_start":365,"byte_end":402,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","byte_start":403,"byte_end":406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","byte_start":407,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","byte_start":465,"byte_end":529,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","byte_start":530,"byte_end":605,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","byte_start":606,"byte_end":609,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","byte_start":610,"byte_end":646,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1189}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\cfg.rs","byte_start":5454,"byte_end":5479,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14117205,"byte_end":14117258,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14117259,"byte_end":14117262,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14117263,"byte_end":14117338,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14117339,"byte_end":14117404,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14117405,"byte_end":14117408,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14117409,"byte_end":14117489,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14117490,"byte_end":14117565,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14117566,"byte_end":14117614,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14117615,"byte_end":14117618,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14117619,"byte_end":14117642,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14117643,"byte_end":14117646,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14117647,"byte_end":14117726,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14117727,"byte_end":14117806,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14117807,"byte_end":14117878,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14117879,"byte_end":14117949,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14117950,"byte_end":14118028,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118029,"byte_end":14118105,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118106,"byte_end":14118139,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118140,"byte_end":14118143,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118144,"byte_end":14118224,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118225,"byte_end":14118305,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118306,"byte_end":14118356,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118357,"byte_end":14118360,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118361,"byte_end":14118412,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118413,"byte_end":14118462,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118463,"byte_end":14118514,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118515,"byte_end":14118518,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118519,"byte_end":14118584,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118585,"byte_end":14118588,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118589,"byte_end":14118666,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118667,"byte_end":14118708,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118709,"byte_end":14118712,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118713,"byte_end":14118793,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118794,"byte_end":14118873,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118874,"byte_end":14118952,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14118953,"byte_end":14119032,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119033,"byte_end":14119047,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119048,"byte_end":14119051,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119052,"byte_end":14119131,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119132,"byte_end":14119211,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119212,"byte_end":14119229,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119230,"byte_end":14119233,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119234,"byte_end":14119311,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119312,"byte_end":14119391,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119392,"byte_end":14119469,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119470,"byte_end":14119540,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119541,"byte_end":14119590,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119591,"byte_end":14119594,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119595,"byte_end":14119608,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119609,"byte_end":14119641,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119642,"byte_end":14119709,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119710,"byte_end":14119824,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119825,"byte_end":14119862,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119863,"byte_end":14119924,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119925,"byte_end":14119974,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119975,"byte_end":14119978,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14119979,"byte_end":14120020,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120021,"byte_end":14120031,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120032,"byte_end":14120116,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120117,"byte_end":14120173,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120174,"byte_end":14120177,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120178,"byte_end":14120199,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120200,"byte_end":14120267,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120268,"byte_end":14120296,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120297,"byte_end":14120310,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120311,"byte_end":14120329,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120330,"byte_end":14120339,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120340,"byte_end":14120343,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120344,"byte_end":14120403,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120404,"byte_end":14120428,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120429,"byte_end":14120438,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120439,"byte_end":14120444,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120445,"byte_end":14120453,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120454,"byte_end":14120461,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120462,"byte_end":14120536,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120537,"byte_end":14120540,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120541,"byte_end":14120563,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120564,"byte_end":14120567,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120568,"byte_end":14120645,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120646,"byte_end":14120722,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120723,"byte_end":14120802,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120803,"byte_end":14120857,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120858,"byte_end":14120861,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120862,"byte_end":14120906,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120907,"byte_end":14120914,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120915,"byte_end":14120950,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120951,"byte_end":14120982,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120983,"byte_end":14120986,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14120987,"byte_end":14121016,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121017,"byte_end":14121020,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121021,"byte_end":14121060,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121061,"byte_end":14121064,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121065,"byte_end":14121103,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121104,"byte_end":14121131,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121132,"byte_end":14121168,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121169,"byte_end":14121172,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121173,"byte_end":14121191,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121192,"byte_end":14121214,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121215,"byte_end":14121245,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121246,"byte_end":14121300,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121301,"byte_end":14121331,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121332,"byte_end":14121389,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121390,"byte_end":14121422,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121423,"byte_end":14121436,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121437,"byte_end":14121440,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121441,"byte_end":14121475,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121476,"byte_end":14121520,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121521,"byte_end":14121573,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121574,"byte_end":14121641,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121642,"byte_end":14121645,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121646,"byte_end":14121720,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121721,"byte_end":14121787,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121788,"byte_end":14121817,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121818,"byte_end":14121865,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121866,"byte_end":14121918,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121919,"byte_end":14121990,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14121991,"byte_end":14122010,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122011,"byte_end":14122024,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122025,"byte_end":14122028,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122029,"byte_end":14122068,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122069,"byte_end":14122124,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122125,"byte_end":14122143,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122144,"byte_end":14122220,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122221,"byte_end":14122287,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122288,"byte_end":14122340,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122341,"byte_end":14122344,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122345,"byte_end":14122425,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122426,"byte_end":14122451,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122452,"byte_end":14122484,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122485,"byte_end":14122498,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122499,"byte_end":14122502,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122503,"byte_end":14122575,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122576,"byte_end":14122602,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122603,"byte_end":14122654,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122655,"byte_end":14122691,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122692,"byte_end":14122695,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122696,"byte_end":14122774,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122775,"byte_end":14122818,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122819,"byte_end":14122866,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122867,"byte_end":14122903,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122904,"byte_end":14122948,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14122949,"byte_end":14123005,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123006,"byte_end":14123054,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123055,"byte_end":14123077,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123078,"byte_end":14123096,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123097,"byte_end":14123110,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123111,"byte_end":14123120,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123121,"byte_end":14123126,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123127,"byte_end":14123134,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123135,"byte_end":14123138,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123139,"byte_end":14123162,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123163,"byte_end":14123166,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123167,"byte_end":14123245,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123246,"byte_end":14123319,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123320,"byte_end":14123396,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123397,"byte_end":14123477,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123478,"byte_end":14123494,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123495,"byte_end":14123498,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123499,"byte_end":14123579,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123580,"byte_end":14123659,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123660,"byte_end":14123740,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123741,"byte_end":14123813,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123814,"byte_end":14123817,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123818,"byte_end":14123895,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123896,"byte_end":14123974,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14123975,"byte_end":14124048,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124049,"byte_end":14124115,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124116,"byte_end":14124119,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124120,"byte_end":14124133,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124134,"byte_end":14124167,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124168,"byte_end":14124202,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124203,"byte_end":14124240,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124241,"byte_end":14124308,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124309,"byte_end":14124344,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124345,"byte_end":14124406,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124407,"byte_end":14124453,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124454,"byte_end":14124515,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124516,"byte_end":14124519,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124520,"byte_end":14124548,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124549,"byte_end":14124552,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124553,"byte_end":14124594,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124595,"byte_end":14124605,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124606,"byte_end":14124630,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124631,"byte_end":14124705,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124706,"byte_end":14124748,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124749,"byte_end":14124763,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124764,"byte_end":14124821,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124822,"byte_end":14124871,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124872,"byte_end":14124886,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124887,"byte_end":14124924,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124925,"byte_end":14124976,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14124977,"byte_end":14125023,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125024,"byte_end":14125054,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125055,"byte_end":14125069,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125070,"byte_end":14125079,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125080,"byte_end":14125085,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125086,"byte_end":14125093,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125094,"byte_end":14125101,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125102,"byte_end":14125177,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125178,"byte_end":14125251,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125252,"byte_end":14125294,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125295,"byte_end":14125298,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125299,"byte_end":14125321,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125322,"byte_end":14125325,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125326,"byte_end":14125403,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125404,"byte_end":14125480,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125481,"byte_end":14125557,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125558,"byte_end":14125581,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125582,"byte_end":14125585,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125586,"byte_end":14125631,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125632,"byte_end":14125639,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125640,"byte_end":14125675,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125676,"byte_end":14125700,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125701,"byte_end":14125704,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125705,"byte_end":14125734,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125735,"byte_end":14125738,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125739,"byte_end":14125778,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125779,"byte_end":14125782,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125783,"byte_end":14125829,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125830,"byte_end":14125866,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125867,"byte_end":14125870,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125871,"byte_end":14125962,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14125963,"byte_end":14126037,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126038,"byte_end":14126060,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126061,"byte_end":14126094,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126095,"byte_end":14126142,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126143,"byte_end":14126195,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126196,"byte_end":14126271,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126272,"byte_end":14126291,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126292,"byte_end":14126305,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126306,"byte_end":14126309,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126310,"byte_end":14126362,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126363,"byte_end":14126440,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126441,"byte_end":14126505,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126506,"byte_end":14126509,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126510,"byte_end":14126553,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126554,"byte_end":14126594,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126595,"byte_end":14126598,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126599,"byte_end":14126656,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126657,"byte_end":14126703,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126704,"byte_end":14126755,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126756,"byte_end":14126774,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126775,"byte_end":14126784,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126785,"byte_end":14126790,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126791,"byte_end":14126798,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126799,"byte_end":14126802,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126803,"byte_end":14126842,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126843,"byte_end":14126884,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126885,"byte_end":14126921,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126922,"byte_end":14126954,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14126955,"byte_end":14127051,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127052,"byte_end":14127103,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127104,"byte_end":14127157,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127158,"byte_end":14127201,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127202,"byte_end":14127246,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127247,"byte_end":14127295,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127296,"byte_end":14127344,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127345,"byte_end":14127391,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127392,"byte_end":14127431,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129455,"byte_end":14129465,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128298,"byte_end":14128383,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128384,"byte_end":14128387,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128388,"byte_end":14128426,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128427,"byte_end":14128465,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128466,"byte_end":14128469,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128470,"byte_end":14128483,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128484,"byte_end":14128487,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128488,"byte_end":14128569,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128570,"byte_end":14128573,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128574,"byte_end":14128613,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128614,"byte_end":14128647,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128648,"byte_end":14128677,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128678,"byte_end":14128681,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128682,"byte_end":14128689,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128690,"byte_end":14128708,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128709,"byte_end":14128739,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128740,"byte_end":14128764,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128765,"byte_end":14128772,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128773,"byte_end":14128802,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128803,"byte_end":14128855,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128856,"byte_end":14128859,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128860,"byte_end":14128878,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128879,"byte_end":14128896,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128897,"byte_end":14128977,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14128978,"byte_end":14129012,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129013,"byte_end":14129066,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129067,"byte_end":14129078,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129079,"byte_end":14129086,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129087,"byte_end":14129092,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129093,"byte_end":14129140,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129141,"byte_end":14129194,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129195,"byte_end":14129253,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129254,"byte_end":14129333,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129334,"byte_end":14129346,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129347,"byte_end":14129354,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129355,"byte_end":14129362,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129363,"byte_end":14129366,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129567,"byte_end":14129570,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129494,"byte_end":14129555,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131571,"byte_end":14131578,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14130285,"byte_end":14130320,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14130321,"byte_end":14130324,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14130325,"byte_end":14130394,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14130395,"byte_end":14130474,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14130475,"byte_end":14130547,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14130548,"byte_end":14130572,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14130573,"byte_end":14130576,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14130577,"byte_end":14130645,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14130646,"byte_end":14130723,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14130724,"byte_end":14130785,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14130786,"byte_end":14130789,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14130790,"byte_end":14130851,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14130852,"byte_end":14130914,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14130915,"byte_end":14130918,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14130919,"byte_end":14130982,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14130983,"byte_end":14131046,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131047,"byte_end":14131126,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131127,"byte_end":14131201,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131202,"byte_end":14131221,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131222,"byte_end":14131225,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131226,"byte_end":14131294,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131295,"byte_end":14131357,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131358,"byte_end":14131433,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131434,"byte_end":14131474,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131475,"byte_end":14131478,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131479,"byte_end":14131515,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131516,"byte_end":14131560,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131626,"byte_end":14131630,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131585,"byte_end":14131616,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132396,"byte_end":14132401,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131637,"byte_end":14131689,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131694,"byte_end":14131697,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131702,"byte_end":14131771,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131776,"byte_end":14131846,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131851,"byte_end":14131897,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131902,"byte_end":14131905,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131910,"byte_end":14131986,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14131991,"byte_end":14132066,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132071,"byte_end":14132146,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132151,"byte_end":14132191,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132196,"byte_end":14132199,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132204,"byte_end":14132278,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132283,"byte_end":14132329,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132334,"byte_end":14132337,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132342,"byte_end":14132386,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135337,"byte_end":14135343,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132425,"byte_end":14132490,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132495,"byte_end":14132498,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132503,"byte_end":14132577,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132582,"byte_end":14132654,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132659,"byte_end":14132732,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132737,"byte_end":14132780,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132785,"byte_end":14132788,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132793,"byte_end":14132866,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132871,"byte_end":14132934,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14132939,"byte_end":14133014,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133019,"byte_end":14133094,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133099,"byte_end":14133122,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133127,"byte_end":14133130,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133135,"byte_end":14133207,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133212,"byte_end":14133286,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133291,"byte_end":14133361,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133366,"byte_end":14133369,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133374,"byte_end":14133442,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133447,"byte_end":14133518,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133523,"byte_end":14133603,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133608,"byte_end":14133620,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133625,"byte_end":14133628,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133633,"byte_end":14133703,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133708,"byte_end":14133783,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133788,"byte_end":14133825,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133830,"byte_end":14133833,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133838,"byte_end":14133874,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133879,"byte_end":14133923,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133928,"byte_end":14133931,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133936,"byte_end":14133959,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133964,"byte_end":14133967,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14133972,"byte_end":14134046,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134051,"byte_end":14134125,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134130,"byte_end":14134183,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134188,"byte_end":14134191,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134196,"byte_end":14134267,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134272,"byte_end":14134342,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134347,"byte_end":14134363,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134368,"byte_end":14134371,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134376,"byte_end":14134389,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134394,"byte_end":14134412,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134417,"byte_end":14134422,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134427,"byte_end":14134453,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134458,"byte_end":14134495,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134500,"byte_end":14134505,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134510,"byte_end":14134531,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134536,"byte_end":14134541,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134546,"byte_end":14134576,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134581,"byte_end":14134595,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134600,"byte_end":14134631,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134636,"byte_end":14134669,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134674,"byte_end":14134677,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134682,"byte_end":14134775,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134780,"byte_end":14134798,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134803,"byte_end":14134806,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134811,"byte_end":14134883,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134888,"byte_end":14134948,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14134953,"byte_end":14135005,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135010,"byte_end":14135072,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135077,"byte_end":14135144,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135149,"byte_end":14135152,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135157,"byte_end":14135185,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135190,"byte_end":14135199,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135204,"byte_end":14135209,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135214,"byte_end":14135221,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135226,"byte_end":14135229,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135234,"byte_end":14135303,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135308,"byte_end":14135329,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14136509,"byte_end":14136519,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135424,"byte_end":14135496,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135501,"byte_end":14135550,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135555,"byte_end":14135558,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135563,"byte_end":14135631,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135636,"byte_end":14135703,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135708,"byte_end":14135776,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135781,"byte_end":14135857,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135862,"byte_end":14135928,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135933,"byte_end":14135936,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14135941,"byte_end":14136009,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14136014,"byte_end":14136089,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14136094,"byte_end":14136169,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14136174,"byte_end":14136246,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14136251,"byte_end":14136293,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14136298,"byte_end":14136301,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14136306,"byte_end":14136381,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14136386,"byte_end":14136464,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14136469,"byte_end":14136501,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14138127,"byte_end":14138133,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14136937,"byte_end":14137017,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14137022,"byte_end":14137098,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14137103,"byte_end":14137106,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14137111,"byte_end":14137186,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14137191,"byte_end":14137261,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14137266,"byte_end":14137337,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14137342,"byte_end":14137414,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14137419,"byte_end":14137477,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14137482,"byte_end":14137485,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14137490,"byte_end":14137559,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14137564,"byte_end":14137639,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14137644,"byte_end":14137720,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14137725,"byte_end":14137747,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14137752,"byte_end":14137755,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14137760,"byte_end":14137833,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14137838,"byte_end":14137911,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14137916,"byte_end":14137992,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14137997,"byte_end":14138000,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14138005,"byte_end":14138041,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14138046,"byte_end":14138078,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\decoder.rs","byte_start":14138083,"byte_end":14138119,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14138467,"byte_end":14138474,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14138312,"byte_end":14138384,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14138385,"byte_end":14138405,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14138406,"byte_end":14138409,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14138410,"byte_end":14138456,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14138739,"byte_end":14138744,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14138487,"byte_end":14138519,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14138524,"byte_end":14138527,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14138532,"byte_end":14138609,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14138614,"byte_end":14138670,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14138675,"byte_end":14138678,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14138683,"byte_end":14138729,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14139095,"byte_end":14139101,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14138768,"byte_end":14138813,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14138818,"byte_end":14138821,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14138826,"byte_end":14138900,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14138905,"byte_end":14138985,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14138990,"byte_end":14139028,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14139033,"byte_end":14139036,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\encoder.rs","byte_start":14139041,"byte_end":14139087,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14149918,"byte_end":14149924,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1508}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14151697,"byte_end":14151700,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150066,"byte_end":14150146,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150151,"byte_end":14150232,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150237,"byte_end":14150240,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150245,"byte_end":14150320,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150325,"byte_end":14150395,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150400,"byte_end":14150469,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150474,"byte_end":14150546,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150551,"byte_end":14150609,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150614,"byte_end":14150617,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150622,"byte_end":14150693,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150698,"byte_end":14150775,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150780,"byte_end":14150856,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150861,"byte_end":14150883,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150888,"byte_end":14150891,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150896,"byte_end":14150969,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150974,"byte_end":14151047,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14151052,"byte_end":14151128,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14151133,"byte_end":14151136,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14151141,"byte_end":14151217,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14151222,"byte_end":14151298,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14151303,"byte_end":14151378,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14151383,"byte_end":14151418,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14151423,"byte_end":14151426,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14151431,"byte_end":14151467,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14151472,"byte_end":14151504,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14151509,"byte_end":14151546,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14151551,"byte_end":14151589,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14151594,"byte_end":14151685,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14153308,"byte_end":14153321,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14151913,"byte_end":14151993,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14151998,"byte_end":14152079,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14152084,"byte_end":14152133,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14152138,"byte_end":14152141,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14152146,"byte_end":14152221,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14152226,"byte_end":14152296,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14152301,"byte_end":14152370,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14152375,"byte_end":14152447,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14152452,"byte_end":14152510,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14152515,"byte_end":14152518,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14152523,"byte_end":14152594,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14152599,"byte_end":14152676,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14152681,"byte_end":14152757,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14152762,"byte_end":14152784,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14152789,"byte_end":14152792,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14152797,"byte_end":14152870,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14152875,"byte_end":14152948,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14152953,"byte_end":14153029,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14153034,"byte_end":14153037,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14153042,"byte_end":14153078,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14153083,"byte_end":14153115,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14153120,"byte_end":14153157,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14153162,"byte_end":14153200,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14153205,"byte_end":14153296,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14155424,"byte_end":14155434,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14153847,"byte_end":14153927,"line_start":118,"line_end":118,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14153932,"byte_end":14154013,"line_start":119,"line_end":119,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14154018,"byte_end":14154021,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14154026,"byte_end":14154101,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14154106,"byte_end":14154176,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14154181,"byte_end":14154252,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14154257,"byte_end":14154329,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14154334,"byte_end":14154392,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14154397,"byte_end":14154400,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14154405,"byte_end":14154476,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14154481,"byte_end":14154558,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14154563,"byte_end":14154639,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14154644,"byte_end":14154666,"line_start":130,"line_end":130,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14154671,"byte_end":14154674,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14154679,"byte_end":14154758,"line_start":132,"line_end":132,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14154763,"byte_end":14154840,"line_start":133,"line_end":133,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14154845,"byte_end":14154848,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14154853,"byte_end":14154926,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14154931,"byte_end":14155004,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14155009,"byte_end":14155085,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14155090,"byte_end":14155093,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14155098,"byte_end":14155134,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14155139,"byte_end":14155171,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14155176,"byte_end":14155214,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14155219,"byte_end":14155257,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14155262,"byte_end":14155316,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14155321,"byte_end":14155412,"line_start":144,"line_end":144,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156069,"byte_end":14156076,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14155786,"byte_end":14155849,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14155854,"byte_end":14155867,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14155872,"byte_end":14155875,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14155880,"byte_end":14155955,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14155960,"byte_end":14156030,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156035,"byte_end":14156057,"line_start":163,"line_end":163,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156420,"byte_end":14156427,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156129,"byte_end":14156200,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156205,"byte_end":14156218,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156223,"byte_end":14156226,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156231,"byte_end":14156306,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156311,"byte_end":14156381,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156386,"byte_end":14156408,"line_start":173,"line_end":173,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156790,"byte_end":14156801,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156492,"byte_end":14156570,"line_start":178,"line_end":178,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156575,"byte_end":14156588,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156593,"byte_end":14156596,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156601,"byte_end":14156676,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156681,"byte_end":14156751,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156756,"byte_end":14156778,"line_start":183,"line_end":183,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14157148,"byte_end":14157153,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156897,"byte_end":14156955,"line_start":188,"line_end":188,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156960,"byte_end":14156973,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156978,"byte_end":14156981,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14156986,"byte_end":14157060,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14157065,"byte_end":14157136,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14157465,"byte_end":14157474,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14157206,"byte_end":14157272,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14157277,"byte_end":14157290,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14157295,"byte_end":14157298,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14157303,"byte_end":14157377,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14157382,"byte_end":14157453,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14157594,"byte_end":14157605,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14157539,"byte_end":14157582,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14157740,"byte_end":14157755,"line_start":212,"line_end":212,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14157677,"byte_end":14157728,"line_start":211,"line_end":211,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14157895,"byte_end":14157907,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14157839,"byte_end":14157883,"line_start":216,"line_end":216,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14158044,"byte_end":14158060,"line_start":222,"line_end":222,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14157980,"byte_end":14158032,"line_start":221,"line_end":221,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14158410,"byte_end":14158420,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14158145,"byte_end":14158208,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14158213,"byte_end":14158216,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14158221,"byte_end":14158296,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14158301,"byte_end":14158371,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14158376,"byte_end":14158398,"line_start":230,"line_end":230,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14158792,"byte_end":14158802,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14158470,"byte_end":14158544,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14158549,"byte_end":14158590,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14158595,"byte_end":14158598,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14158603,"byte_end":14158678,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14158683,"byte_end":14158753,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14158758,"byte_end":14158780,"line_start":240,"line_end":240,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14160776,"byte_end":14160787,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14160461,"byte_end":14160532,"line_start":304,"line_end":304,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14160533,"byte_end":14160605,"line_start":305,"line_end":305,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14160606,"byte_end":14160666,"line_start":306,"line_end":306,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14160667,"byte_end":14160670,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14160671,"byte_end":14160707,"line_start":308,"line_end":308,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14160725,"byte_end":14160764,"line_start":310,"line_end":310,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1224},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14160873,"byte_end":14160875,"line_start":313,"line_end":313,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14160800,"byte_end":14160864,"line_start":312,"line_end":312,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14160907,"byte_end":14160912,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14160885,"byte_end":14160898,"line_start":315,"line_end":315,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14160977,"byte_end":14160985,"line_start":319,"line_end":319,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14160922,"byte_end":14160968,"line_start":318,"line_end":318,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14161072,"byte_end":14161081,"line_start":322,"line_end":322,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14161002,"byte_end":14161063,"line_start":321,"line_end":321,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14161314,"byte_end":14161317,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14161262,"byte_end":14161302,"line_start":330,"line_end":330,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14162046,"byte_end":14162056,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1467}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14162307,"byte_end":14162310,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14162239,"byte_end":14162295,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14162658,"byte_end":14162671,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14162542,"byte_end":14162624,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14162629,"byte_end":14162646,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163385,"byte_end":14163392,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163098,"byte_end":14163161,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163166,"byte_end":14163183,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163188,"byte_end":14163191,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163196,"byte_end":14163271,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163276,"byte_end":14163346,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163351,"byte_end":14163373,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163740,"byte_end":14163747,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163445,"byte_end":14163516,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163521,"byte_end":14163538,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163543,"byte_end":14163546,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163551,"byte_end":14163626,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163631,"byte_end":14163701,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163706,"byte_end":14163728,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14164114,"byte_end":14164125,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163812,"byte_end":14163890,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163895,"byte_end":14163912,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163917,"byte_end":14163920,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163925,"byte_end":14164000,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14164005,"byte_end":14164075,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14164080,"byte_end":14164102,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14164490,"byte_end":14164500,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14164221,"byte_end":14164288,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14164293,"byte_end":14164296,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14164301,"byte_end":14164376,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14164381,"byte_end":14164451,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14164456,"byte_end":14164478,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14164612,"byte_end":14164619,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14164550,"byte_end":14164600,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14164742,"byte_end":14164753,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14164672,"byte_end":14164730,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14164873,"byte_end":14164884,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14164818,"byte_end":14164861,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14165014,"byte_end":14165029,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14164951,"byte_end":14165002,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1423},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14167130,"byte_end":14167141,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1426}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14167348,"byte_end":14167351,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14167279,"byte_end":14167336,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14167909,"byte_end":14167916,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14167621,"byte_end":14167684,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14167689,"byte_end":14167707,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14167712,"byte_end":14167715,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14167720,"byte_end":14167795,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14167800,"byte_end":14167870,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14167875,"byte_end":14167897,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168265,"byte_end":14168272,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14167969,"byte_end":14168040,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168045,"byte_end":14168063,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168068,"byte_end":14168071,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168076,"byte_end":14168151,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168156,"byte_end":14168226,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168231,"byte_end":14168253,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168640,"byte_end":14168651,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168337,"byte_end":14168415,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168420,"byte_end":14168438,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168443,"byte_end":14168446,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168451,"byte_end":14168526,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168531,"byte_end":14168601,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168606,"byte_end":14168628,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14169017,"byte_end":14169027,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168747,"byte_end":14168815,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168820,"byte_end":14168823,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168828,"byte_end":14168903,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168908,"byte_end":14168978,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14168983,"byte_end":14169005,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14169139,"byte_end":14169146,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14169077,"byte_end":14169127,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14169269,"byte_end":14169280,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14169199,"byte_end":14169257,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14169401,"byte_end":14169413,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14169345,"byte_end":14169389,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14169544,"byte_end":14169560,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14169480,"byte_end":14169532,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":955},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1233},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1009},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1011},{"krate":0,"index":1018},{"krate":0,"index":1022},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1053}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171087,"byte_end":14171139,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171140,"byte_end":14171143,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171144,"byte_end":14171214,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171215,"byte_end":14171273,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171274,"byte_end":14171346,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171347,"byte_end":14171417,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171418,"byte_end":14171485,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171486,"byte_end":14171489,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171490,"byte_end":14171511,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171512,"byte_end":14171515,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171516,"byte_end":14171591,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171592,"byte_end":14171663,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171664,"byte_end":14171735,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171736,"byte_end":14171806,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171807,"byte_end":14171847,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171848,"byte_end":14171851,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171852,"byte_end":14171859,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171860,"byte_end":14171903,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171904,"byte_end":14171962,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171963,"byte_end":14171966,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14171967,"byte_end":14172022,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172023,"byte_end":14172065,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172066,"byte_end":14172071,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172072,"byte_end":14172124,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172125,"byte_end":14172130,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172131,"byte_end":14172153,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172154,"byte_end":14172161,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172162,"byte_end":14172165,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172166,"byte_end":14172238,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172239,"byte_end":14172310,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172311,"byte_end":14172330,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172331,"byte_end":14172334,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172335,"byte_end":14172346,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172347,"byte_end":14172396,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172397,"byte_end":14172446,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172447,"byte_end":14172496,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172497,"byte_end":14172504,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172505,"byte_end":14172508,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172509,"byte_end":14172547,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172548,"byte_end":14172551,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172552,"byte_end":14172559,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172560,"byte_end":14172603,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172604,"byte_end":14172662,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172663,"byte_end":14172666,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172667,"byte_end":14172692,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172693,"byte_end":14172714,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172715,"byte_end":14172718,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172719,"byte_end":14172795,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172796,"byte_end":14172805,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172806,"byte_end":14172848,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172849,"byte_end":14172854,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172855,"byte_end":14172928,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172929,"byte_end":14172976,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172977,"byte_end":14172980,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14172981,"byte_end":14173018,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173019,"byte_end":14173033,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173034,"byte_end":14173039,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173040,"byte_end":14173047,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173048,"byte_end":14173051,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173052,"byte_end":14173094,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173095,"byte_end":14173098,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173099,"byte_end":14173110,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173111,"byte_end":14173150,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173151,"byte_end":14173190,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173191,"byte_end":14173230,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173231,"byte_end":14173238,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173239,"byte_end":14173242,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173243,"byte_end":14173257,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173258,"byte_end":14173261,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173262,"byte_end":14173337,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173338,"byte_end":14173411,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173412,"byte_end":14173478,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173479,"byte_end":14173548,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173549,"byte_end":14173614,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173615,"byte_end":14173618,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173619,"byte_end":14173635,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173636,"byte_end":14173639,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173640,"byte_end":14173716,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173717,"byte_end":14173758,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173759,"byte_end":14173762,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173763,"byte_end":14173770,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173771,"byte_end":14173802,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173803,"byte_end":14173853,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173854,"byte_end":14173895,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173896,"byte_end":14173931,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173932,"byte_end":14173980,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14173981,"byte_end":14174012,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174013,"byte_end":14174061,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174062,"byte_end":14174111,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174112,"byte_end":14174134,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174135,"byte_end":14174142,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174143,"byte_end":14174165,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174166,"byte_end":14174173,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174174,"byte_end":14174177,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174178,"byte_end":14174226,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174227,"byte_end":14174230,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174231,"byte_end":14174242,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174243,"byte_end":14174295,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174296,"byte_end":14174361,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174362,"byte_end":14174427,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174428,"byte_end":14174493,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174494,"byte_end":14174501,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174502,"byte_end":14174505,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174506,"byte_end":14174582,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174583,"byte_end":14174657,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174658,"byte_end":14174730,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174731,"byte_end":14174807,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174808,"byte_end":14174850,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174851,"byte_end":14174854,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174855,"byte_end":14174871,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174872,"byte_end":14174875,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174876,"byte_end":14174951,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174952,"byte_end":14174993,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174994,"byte_end":14174997,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14174998,"byte_end":14175005,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175006,"byte_end":14175037,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175038,"byte_end":14175088,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175089,"byte_end":14175130,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175131,"byte_end":14175166,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175167,"byte_end":14175215,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175216,"byte_end":14175247,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175248,"byte_end":14175296,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175297,"byte_end":14175356,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175357,"byte_end":14175379,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175380,"byte_end":14175387,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175388,"byte_end":14175410,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175411,"byte_end":14175418,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175419,"byte_end":14175422,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175423,"byte_end":14175471,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175472,"byte_end":14175475,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175476,"byte_end":14175487,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175488,"byte_end":14175537,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175538,"byte_end":14175592,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175593,"byte_end":14175647,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175648,"byte_end":14175702,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175703,"byte_end":14175710,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175711,"byte_end":14175714,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175715,"byte_end":14175788,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175789,"byte_end":14175856,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175857,"byte_end":14175860,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175861,"byte_end":14175877,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175878,"byte_end":14175881,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175882,"byte_end":14175958,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14175959,"byte_end":14176031,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176032,"byte_end":14176071,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176072,"byte_end":14176075,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176076,"byte_end":14176083,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176084,"byte_end":14176115,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176116,"byte_end":14176166,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176167,"byte_end":14176208,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176209,"byte_end":14176244,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176245,"byte_end":14176293,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176294,"byte_end":14176325,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176326,"byte_end":14176373,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176374,"byte_end":14176394,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176395,"byte_end":14176417,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176418,"byte_end":14176425,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176426,"byte_end":14176448,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176449,"byte_end":14176456,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176457,"byte_end":14176460,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176461,"byte_end":14176509,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176510,"byte_end":14176513,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176514,"byte_end":14176525,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176526,"byte_end":14176578,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176579,"byte_end":14176644,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176645,"byte_end":14176710,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176711,"byte_end":14176776,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176777,"byte_end":14176784,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176785,"byte_end":14176788,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176789,"byte_end":14176861,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176862,"byte_end":14176937,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14176938,"byte_end":14177010,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177011,"byte_end":14177087,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177088,"byte_end":14177161,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177162,"byte_end":14177165,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177166,"byte_end":14177182,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177183,"byte_end":14177186,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177187,"byte_end":14177261,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177262,"byte_end":14177329,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177330,"byte_end":14177333,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177334,"byte_end":14177341,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177342,"byte_end":14177373,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177374,"byte_end":14177424,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177425,"byte_end":14177466,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177467,"byte_end":14177502,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177503,"byte_end":14177551,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177552,"byte_end":14177583,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177584,"byte_end":14177632,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177633,"byte_end":14177653,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177654,"byte_end":14177676,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177677,"byte_end":14177684,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177685,"byte_end":14177707,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177708,"byte_end":14177715,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177716,"byte_end":14177719,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177720,"byte_end":14177768,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177769,"byte_end":14177772,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177773,"byte_end":14177784,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177785,"byte_end":14177811,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177812,"byte_end":14177857,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177858,"byte_end":14177903,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177904,"byte_end":14177949,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177950,"byte_end":14177953,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177954,"byte_end":14177982,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14177983,"byte_end":14178028,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178029,"byte_end":14178074,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178075,"byte_end":14178120,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178121,"byte_end":14178128,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178129,"byte_end":14178132,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178133,"byte_end":14178205,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178206,"byte_end":14178282,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178283,"byte_end":14178353,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178354,"byte_end":14178423,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178424,"byte_end":14178461,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178462,"byte_end":14178465,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178466,"byte_end":14178540,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178541,"byte_end":14178595,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178596,"byte_end":14178599,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178600,"byte_end":14178616,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178617,"byte_end":14178620,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178621,"byte_end":14178694,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178695,"byte_end":14178771,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178772,"byte_end":14178846,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178847,"byte_end":14178860,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178861,"byte_end":14178864,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178865,"byte_end":14178872,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178873,"byte_end":14178904,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178905,"byte_end":14178955,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178956,"byte_end":14178997,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14178998,"byte_end":14179033,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179034,"byte_end":14179083,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179084,"byte_end":14179115,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179116,"byte_end":14179164,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179165,"byte_end":14179209,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179210,"byte_end":14179232,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179233,"byte_end":14179240,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179241,"byte_end":14179263,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179264,"byte_end":14179271,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179272,"byte_end":14179275,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179276,"byte_end":14179324,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179325,"byte_end":14179328,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179329,"byte_end":14179340,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179341,"byte_end":14179367,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179368,"byte_end":14179418,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179419,"byte_end":14179469,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179470,"byte_end":14179520,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179521,"byte_end":14179524,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179525,"byte_end":14179545,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179546,"byte_end":14179576,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179577,"byte_end":14179607,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179608,"byte_end":14179638,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179639,"byte_end":14179646,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179647,"byte_end":14179650,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179651,"byte_end":14179724,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179725,"byte_end":14179800,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179801,"byte_end":14179873,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179874,"byte_end":14179912,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179913,"byte_end":14179916,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179917,"byte_end":14179991,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14179992,"byte_end":14180068,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180069,"byte_end":14180142,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180143,"byte_end":14180171,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180172,"byte_end":14180175,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180176,"byte_end":14180192,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180193,"byte_end":14180196,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180197,"byte_end":14180270,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180271,"byte_end":14180347,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180348,"byte_end":14180422,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180423,"byte_end":14180495,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180496,"byte_end":14180507,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180508,"byte_end":14180511,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180512,"byte_end":14180519,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180520,"byte_end":14180551,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180552,"byte_end":14180602,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180603,"byte_end":14180644,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180645,"byte_end":14180680,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180681,"byte_end":14180730,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180731,"byte_end":14180762,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180763,"byte_end":14180828,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180829,"byte_end":14180849,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180850,"byte_end":14180872,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180873,"byte_end":14180880,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180881,"byte_end":14180888,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180889,"byte_end":14180892,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180893,"byte_end":14180941,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180942,"byte_end":14180945,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180946,"byte_end":14180957,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180958,"byte_end":14180984,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14180985,"byte_end":14181035,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181036,"byte_end":14181086,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181087,"byte_end":14181137,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181138,"byte_end":14181141,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181142,"byte_end":14181162,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181163,"byte_end":14181193,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181194,"byte_end":14181224,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181225,"byte_end":14181255,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181256,"byte_end":14181263,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181264,"byte_end":14181267,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181268,"byte_end":14181341,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181342,"byte_end":14181416,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181417,"byte_end":14181491,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181492,"byte_end":14181565,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181566,"byte_end":14181642,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181643,"byte_end":14181676,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181677,"byte_end":14181680,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181681,"byte_end":14181697,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181698,"byte_end":14181701,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181702,"byte_end":14181776,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181777,"byte_end":14181844,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181845,"byte_end":14181848,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181849,"byte_end":14181856,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181857,"byte_end":14181888,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181889,"byte_end":14181939,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181940,"byte_end":14181981,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14181982,"byte_end":14182017,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182018,"byte_end":14182066,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182067,"byte_end":14182098,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182099,"byte_end":14182146,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182147,"byte_end":14182193,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182194,"byte_end":14182216,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182217,"byte_end":14182224,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182225,"byte_end":14182247,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182248,"byte_end":14182255,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182256,"byte_end":14182259,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182260,"byte_end":14182308,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182309,"byte_end":14182312,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182313,"byte_end":14182324,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182325,"byte_end":14182381,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182382,"byte_end":14182443,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182444,"byte_end":14182505,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182506,"byte_end":14182567,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182568,"byte_end":14182575,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182576,"byte_end":14182579,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182580,"byte_end":14182654,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182655,"byte_end":14182675,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182676,"byte_end":14182679,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182680,"byte_end":14182694,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182695,"byte_end":14182698,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182699,"byte_end":14182774,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182775,"byte_end":14182847,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182848,"byte_end":14182916,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182917,"byte_end":14182993,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14182994,"byte_end":14183035,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183036,"byte_end":14183039,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183040,"byte_end":14183110,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183111,"byte_end":14183129,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183130,"byte_end":14183133,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183134,"byte_end":14183141,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183142,"byte_end":14183174,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183175,"byte_end":14183225,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183226,"byte_end":14183270,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183271,"byte_end":14183284,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183285,"byte_end":14183320,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183321,"byte_end":14183352,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183353,"byte_end":14183376,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183377,"byte_end":14183384,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183385,"byte_end":14183407,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183408,"byte_end":14183415,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183416,"byte_end":14183419,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183420,"byte_end":14183470,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183471,"byte_end":14183474,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183475,"byte_end":14183486,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183487,"byte_end":14183520,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183521,"byte_end":14183554,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183555,"byte_end":14183588,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183589,"byte_end":14183596,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183597,"byte_end":14183600,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183601,"byte_end":14183670,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183671,"byte_end":14183708,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183709,"byte_end":14183748,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183749,"byte_end":14183794,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183795,"byte_end":14183842,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183843,"byte_end":14183873,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14183874,"byte_end":14183907,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14184469,"byte_end":14184476,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14184151,"byte_end":14184206,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14184207,"byte_end":14184210,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14184211,"byte_end":14184286,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14184287,"byte_end":14184367,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14184368,"byte_end":14184427,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14185147,"byte_end":14185172,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":1010}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14185062,"byte_end":14185135,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14185517,"byte_end":14185537,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14185193,"byte_end":14185267,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14185268,"byte_end":14185271,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14185272,"byte_end":14185351,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14185352,"byte_end":14185395,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14185396,"byte_end":14185399,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14185400,"byte_end":14185453,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14185454,"byte_end":14185457,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14185458,"byte_end":14185488,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14185881,"byte_end":14185884,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14185790,"byte_end":14185869,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14186111,"byte_end":14186118,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14186008,"byte_end":14186083,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14186088,"byte_end":14186099,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14186340,"byte_end":14186356,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14186168,"byte_end":14186209,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14186214,"byte_end":14186217,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14186222,"byte_end":14186295,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14186300,"byte_end":14186328,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14186777,"byte_end":14186797,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14186421,"byte_end":14186455,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14186460,"byte_end":14186463,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14186468,"byte_end":14186538,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14186543,"byte_end":14186618,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14186623,"byte_end":14186695,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14186700,"byte_end":14186765,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14192053,"byte_end":14192056,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191511,"byte_end":14191586,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191591,"byte_end":14191602,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191607,"byte_end":14191610,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191615,"byte_end":14191629,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191634,"byte_end":14191637,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191642,"byte_end":14191649,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191654,"byte_end":14191685,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191690,"byte_end":14191738,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191743,"byte_end":14191746,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191751,"byte_end":14191792,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191797,"byte_end":14191832,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191837,"byte_end":14191868,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191873,"byte_end":14191904,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191909,"byte_end":14191938,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191943,"byte_end":14191963,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191968,"byte_end":14191990,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191995,"byte_end":14192002,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14192007,"byte_end":14192029,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14192034,"byte_end":14192041,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193241,"byte_end":14193251,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14192720,"byte_end":14192769,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14192774,"byte_end":14192777,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14192782,"byte_end":14192814,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14192819,"byte_end":14192822,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14192827,"byte_end":14192895,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14192900,"byte_end":14192903,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14192908,"byte_end":14192922,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14192927,"byte_end":14192930,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14192935,"byte_end":14192942,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14192947,"byte_end":14192978,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14192983,"byte_end":14193031,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193036,"byte_end":14193039,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193044,"byte_end":14193085,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193090,"byte_end":14193125,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193130,"byte_end":14193151,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193156,"byte_end":14193178,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193183,"byte_end":14193190,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193195,"byte_end":14193217,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193222,"byte_end":14193229,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193883,"byte_end":14193896,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193350,"byte_end":14193402,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193407,"byte_end":14193410,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193415,"byte_end":14193453,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193458,"byte_end":14193461,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193466,"byte_end":14193534,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193539,"byte_end":14193542,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193547,"byte_end":14193561,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193566,"byte_end":14193569,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193574,"byte_end":14193581,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193586,"byte_end":14193617,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193622,"byte_end":14193670,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193675,"byte_end":14193678,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193683,"byte_end":14193724,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193729,"byte_end":14193764,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193769,"byte_end":14193793,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193798,"byte_end":14193820,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193825,"byte_end":14193832,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193837,"byte_end":14193859,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193864,"byte_end":14193871,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194529,"byte_end":14194542,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14193996,"byte_end":14194048,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194053,"byte_end":14194056,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194061,"byte_end":14194099,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194104,"byte_end":14194107,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194112,"byte_end":14194180,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194185,"byte_end":14194188,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194193,"byte_end":14194207,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194212,"byte_end":14194215,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194220,"byte_end":14194227,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194232,"byte_end":14194263,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194268,"byte_end":14194316,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194321,"byte_end":14194324,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194329,"byte_end":14194370,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194375,"byte_end":14194410,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194415,"byte_end":14194439,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194444,"byte_end":14194466,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194471,"byte_end":14194478,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194483,"byte_end":14194505,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194510,"byte_end":14194517,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195623,"byte_end":14195639,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194711,"byte_end":14194740,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194745,"byte_end":14194748,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194753,"byte_end":14194825,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194830,"byte_end":14194855,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194860,"byte_end":14194863,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194868,"byte_end":14194940,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14194945,"byte_end":14195014,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195019,"byte_end":14195092,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195097,"byte_end":14195109,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195114,"byte_end":14195117,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195122,"byte_end":14195197,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195202,"byte_end":14195263,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195268,"byte_end":14195271,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195276,"byte_end":14195290,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195295,"byte_end":14195298,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195303,"byte_end":14195310,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195315,"byte_end":14195346,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195351,"byte_end":14195399,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195404,"byte_end":14195407,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195412,"byte_end":14195453,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195458,"byte_end":14195493,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195498,"byte_end":14195533,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195538,"byte_end":14195560,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195565,"byte_end":14195572,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195577,"byte_end":14195599,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195604,"byte_end":14195611,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196300,"byte_end":14196319,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195736,"byte_end":14195799,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195804,"byte_end":14195807,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195812,"byte_end":14195863,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195868,"byte_end":14195871,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195876,"byte_end":14195944,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195949,"byte_end":14195952,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195957,"byte_end":14195971,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195976,"byte_end":14195979,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195984,"byte_end":14195991,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14195996,"byte_end":14196027,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196032,"byte_end":14196080,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196085,"byte_end":14196088,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196093,"byte_end":14196134,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196139,"byte_end":14196174,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196179,"byte_end":14196210,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196215,"byte_end":14196237,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196242,"byte_end":14196249,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196254,"byte_end":14196276,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196281,"byte_end":14196288,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196978,"byte_end":14196997,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196488,"byte_end":14196554,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196559,"byte_end":14196562,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196567,"byte_end":14196622,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196627,"byte_end":14196630,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196635,"byte_end":14196649,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196654,"byte_end":14196657,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196662,"byte_end":14196669,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196674,"byte_end":14196705,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196710,"byte_end":14196758,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196763,"byte_end":14196766,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196771,"byte_end":14196812,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196817,"byte_end":14196852,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196857,"byte_end":14196888,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196893,"byte_end":14196915,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196920,"byte_end":14196927,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196932,"byte_end":14196954,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14196959,"byte_end":14196966,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197551,"byte_end":14197568,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197100,"byte_end":14197173,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197178,"byte_end":14197196,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197201,"byte_end":14197204,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197209,"byte_end":14197223,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197228,"byte_end":14197231,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197236,"byte_end":14197243,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197248,"byte_end":14197279,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197284,"byte_end":14197332,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197337,"byte_end":14197340,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197345,"byte_end":14197386,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197391,"byte_end":14197426,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197431,"byte_end":14197461,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197466,"byte_end":14197488,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197493,"byte_end":14197500,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197505,"byte_end":14197527,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197532,"byte_end":14197539,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198218,"byte_end":14198226,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197669,"byte_end":14197732,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197737,"byte_end":14197740,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197745,"byte_end":14197806,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197811,"byte_end":14197814,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197819,"byte_end":14197873,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197878,"byte_end":14197881,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197886,"byte_end":14197900,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197905,"byte_end":14197908,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197913,"byte_end":14197920,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197925,"byte_end":14197956,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14197961,"byte_end":14198009,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198014,"byte_end":14198017,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198022,"byte_end":14198063,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198068,"byte_end":14198103,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198108,"byte_end":14198128,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198133,"byte_end":14198155,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198160,"byte_end":14198167,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198172,"byte_end":14198194,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198199,"byte_end":14198206,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198746,"byte_end":14198755,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198324,"byte_end":14198387,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198392,"byte_end":14198395,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198400,"byte_end":14198414,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198419,"byte_end":14198422,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198427,"byte_end":14198434,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198439,"byte_end":14198487,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198492,"byte_end":14198513,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198518,"byte_end":14198553,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198558,"byte_end":14198589,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198594,"byte_end":14198625,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198630,"byte_end":14198659,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198664,"byte_end":14198684,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198689,"byte_end":14198710,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198715,"byte_end":14198722,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198727,"byte_end":14198734,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199411,"byte_end":14199419,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198907,"byte_end":14198960,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198965,"byte_end":14198968,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198973,"byte_end":14198987,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14198992,"byte_end":14198995,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199000,"byte_end":14199007,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199012,"byte_end":14199043,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199048,"byte_end":14199096,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199101,"byte_end":14199104,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199109,"byte_end":14199150,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199155,"byte_end":14199190,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199195,"byte_end":14199226,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199231,"byte_end":14199262,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199267,"byte_end":14199296,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199301,"byte_end":14199321,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199326,"byte_end":14199348,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199353,"byte_end":14199360,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199365,"byte_end":14199387,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199392,"byte_end":14199399,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199992,"byte_end":14200001,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199583,"byte_end":14199637,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199642,"byte_end":14199645,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199650,"byte_end":14199664,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199669,"byte_end":14199672,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199677,"byte_end":14199684,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199689,"byte_end":14199721,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199726,"byte_end":14199776,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199781,"byte_end":14199825,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199830,"byte_end":14199865,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199870,"byte_end":14199901,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199906,"byte_end":14199929,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199934,"byte_end":14199941,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199946,"byte_end":14199968,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14199973,"byte_end":14199980,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14200610,"byte_end":14200620,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14200162,"byte_end":14200211,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14200216,"byte_end":14200219,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14200224,"byte_end":14200238,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14200243,"byte_end":14200246,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14200251,"byte_end":14200258,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14200263,"byte_end":14200308,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14200313,"byte_end":14200363,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14200368,"byte_end":14200424,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14200429,"byte_end":14200442,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14200447,"byte_end":14200482,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14200487,"byte_end":14200518,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14200523,"byte_end":14200547,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14200552,"byte_end":14200559,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14200564,"byte_end":14200586,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14200591,"byte_end":14200598,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1261},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14201999,"byte_end":14202009,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14201756,"byte_end":14201843,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14201844,"byte_end":14201847,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14201848,"byte_end":14201886,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14201887,"byte_end":14201925,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14203109,"byte_end":14203112,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14202690,"byte_end":14202750,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14202755,"byte_end":14202758,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14202763,"byte_end":14202773,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14202778,"byte_end":14202781,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14202786,"byte_end":14202858,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14202863,"byte_end":14202936,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14202941,"byte_end":14203008,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14203013,"byte_end":14203016,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14203021,"byte_end":14203097,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204243,"byte_end":14204262,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14203270,"byte_end":14203330,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14203335,"byte_end":14203338,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14203343,"byte_end":14203406,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14203411,"byte_end":14203489,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14203494,"byte_end":14203561,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14203566,"byte_end":14203638,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14203643,"byte_end":14203713,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14203718,"byte_end":14203741,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14203746,"byte_end":14203749,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14203754,"byte_end":14203764,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14203769,"byte_end":14203772,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14203777,"byte_end":14203852,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14203857,"byte_end":14203930,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14203935,"byte_end":14204011,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204016,"byte_end":14204089,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204094,"byte_end":14204164,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204169,"byte_end":14204172,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204177,"byte_end":14204231,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204828,"byte_end":14204838,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204390,"byte_end":14204440,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204445,"byte_end":14204448,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204453,"byte_end":14204460,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204465,"byte_end":14204484,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204489,"byte_end":14204527,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204532,"byte_end":14204535,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204540,"byte_end":14204574,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204579,"byte_end":14204626,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204631,"byte_end":14204638,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204643,"byte_end":14204650,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204655,"byte_end":14204693,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204698,"byte_end":14204701,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204706,"byte_end":14204759,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204764,"byte_end":14204804,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14204809,"byte_end":14204816,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1284},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14209164,"byte_end":14209185,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14209118,"byte_end":14209159,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14209221,"byte_end":14209223,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14209191,"byte_end":14209216,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14209096,"byte_end":14209111,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1286}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14209013,"byte_end":14209069,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14211145,"byte_end":14211162,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14209959,"byte_end":14210100,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210101,"byte_end":14210104,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210105,"byte_end":14210143,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210144,"byte_end":14210182,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210183,"byte_end":14210186,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210187,"byte_end":14210200,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210201,"byte_end":14210268,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210269,"byte_end":14210272,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210273,"byte_end":14210306,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210307,"byte_end":14210336,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210337,"byte_end":14210340,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210341,"byte_end":14210348,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210349,"byte_end":14210405,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210406,"byte_end":14210440,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210441,"byte_end":14210444,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210445,"byte_end":14210450,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210451,"byte_end":14210498,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210499,"byte_end":14210552,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210553,"byte_end":14210630,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210631,"byte_end":14210666,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210667,"byte_end":14210688,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210689,"byte_end":14210739,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210740,"byte_end":14210803,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210804,"byte_end":14210867,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210868,"byte_end":14210931,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210932,"byte_end":14210988,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14210989,"byte_end":14211038,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14211039,"byte_end":14211051,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14211052,"byte_end":14211059,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14211060,"byte_end":14211067,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14211068,"byte_end":14211071,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14212497,"byte_end":14212500,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14212055,"byte_end":14212123,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14212128,"byte_end":14212131,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14212136,"byte_end":14212146,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14212151,"byte_end":14212154,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14212159,"byte_end":14212238,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14212243,"byte_end":14212317,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14212322,"byte_end":14212389,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14212394,"byte_end":14212397,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14212402,"byte_end":14212485,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14213811,"byte_end":14213830,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14212780,"byte_end":14212848,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14212853,"byte_end":14212856,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14212861,"byte_end":14212931,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14212936,"byte_end":14213022,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14213027,"byte_end":14213097,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14213102,"byte_end":14213179,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14213184,"byte_end":14213254,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14213259,"byte_end":14213282,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14213287,"byte_end":14213290,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14213295,"byte_end":14213305,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14213310,"byte_end":14213313,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14213318,"byte_end":14213400,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14213405,"byte_end":14213478,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14213483,"byte_end":14213560,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14213565,"byte_end":14213638,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14213643,"byte_end":14213718,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14213723,"byte_end":14213726,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14213731,"byte_end":14213799,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214618,"byte_end":14214628,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214087,"byte_end":14214138,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214143,"byte_end":14214146,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214151,"byte_end":14214158,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214163,"byte_end":14214182,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214187,"byte_end":14214232,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214237,"byte_end":14214240,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214245,"byte_end":14214317,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214322,"byte_end":14214369,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214374,"byte_end":14214381,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214386,"byte_end":14214393,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214398,"byte_end":14214443,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214448,"byte_end":14214451,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214456,"byte_end":14214549,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214554,"byte_end":14214594,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214599,"byte_end":14214606,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1316},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14218724,"byte_end":14218746,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14218677,"byte_end":14218719,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1318},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14218782,"byte_end":14218784,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14218752,"byte_end":14218777,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14218648,"byte_end":14218670,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1318}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14218564,"byte_end":14218621,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":201},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":390}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mod.rs","byte_start":6625,"byte_end":6655,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token\\guard.rs","byte_start":40554,"byte_end":40563,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1324}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token\\guard.rs","byte_start":40377,"byte_end":40441,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token\\guard.rs","byte_start":40442,"byte_end":40525,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token\\guard.rs","byte_start":40826,"byte_end":40832,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token\\guard.rs","byte_start":40639,"byte_end":40713,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token\\guard.rs","byte_start":40718,"byte_end":40788,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token\\guard.rs","byte_start":40793,"byte_end":40814,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8652,"byte_end":8669,"line_start":57,"line_end":57,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7434,"byte_end":7511,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7512,"byte_end":7522,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7523,"byte_end":7526,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7527,"byte_end":7592,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7593,"byte_end":7667,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7668,"byte_end":7671,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7672,"byte_end":7755,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7756,"byte_end":7759,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7760,"byte_end":7774,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7775,"byte_end":7778,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7779,"byte_end":7792,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7793,"byte_end":7815,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7816,"byte_end":7856,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7857,"byte_end":7860,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7861,"byte_end":7879,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7880,"byte_end":7901,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7902,"byte_end":7947,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7948,"byte_end":7989,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7990,"byte_end":7993,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":7994,"byte_end":8045,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8046,"byte_end":8109,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8110,"byte_end":8131,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8132,"byte_end":8181,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8182,"byte_end":8228,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8229,"byte_end":8250,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8251,"byte_end":8268,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8269,"byte_end":8350,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8351,"byte_end":8373,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8374,"byte_end":8391,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8392,"byte_end":8405,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8406,"byte_end":8417,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8418,"byte_end":8421,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8422,"byte_end":8455,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8456,"byte_end":8531,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8532,"byte_end":8559,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8560,"byte_end":8571,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8572,"byte_end":8575,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8576,"byte_end":8626,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8627,"byte_end":8632,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8633,"byte_end":8640,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":9089,"byte_end":9114,"line_start":69,"line_end":69,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8936,"byte_end":9010,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":9011,"byte_end":9028,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":9029,"byte_end":9077,"line_start":68,"line_end":68,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":11622,"byte_end":11625,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":11547,"byte_end":11610,"line_start":142,"line_end":142,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13678,"byte_end":13689,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12415,"byte_end":12486,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12491,"byte_end":12524,"line_start":168,"line_end":168,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12529,"byte_end":12532,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12537,"byte_end":12608,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12613,"byte_end":12645,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12650,"byte_end":12653,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12658,"byte_end":12672,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12677,"byte_end":12680,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12685,"byte_end":12698,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12703,"byte_end":12725,"line_start":176,"line_end":176,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12730,"byte_end":12770,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12775,"byte_end":12778,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12783,"byte_end":12801,"line_start":179,"line_end":179,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12806,"byte_end":12827,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12832,"byte_end":12877,"line_start":181,"line_end":181,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12882,"byte_end":12928,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12933,"byte_end":12936,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12941,"byte_end":12992,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":12997,"byte_end":13060,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13065,"byte_end":13086,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13091,"byte_end":13139,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13144,"byte_end":13190,"line_start":188,"line_end":188,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13195,"byte_end":13216,"line_start":189,"line_end":189,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13221,"byte_end":13238,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13243,"byte_end":13324,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13329,"byte_end":13351,"line_start":192,"line_end":192,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13356,"byte_end":13373,"line_start":193,"line_end":193,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13378,"byte_end":13391,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13396,"byte_end":13407,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13412,"byte_end":13415,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13420,"byte_end":13453,"line_start":197,"line_end":197,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13458,"byte_end":13533,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13538,"byte_end":13565,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13570,"byte_end":13581,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13586,"byte_end":13589,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13594,"byte_end":13644,"line_start":202,"line_end":202,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13649,"byte_end":13654,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":13659,"byte_end":13666,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":16264,"byte_end":16270,"line_start":263,"line_end":263,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":16075,"byte_end":16147,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":16152,"byte_end":16172,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":16177,"byte_end":16180,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":16185,"byte_end":16252,"line_start":262,"line_end":262,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":16398,"byte_end":16410,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":16322,"byte_end":16386,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":16561,"byte_end":16570,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":16475,"byte_end":16549,"line_start":272,"line_end":272,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":16972,"byte_end":16982,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":16809,"byte_end":16850,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":16855,"byte_end":16858,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":16863,"byte_end":16935,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":16940,"byte_end":16960,"line_start":284,"line_end":284,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1398},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":71142,"byte_end":71152,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":71004,"byte_end":71061,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":71062,"byte_end":71065,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":71066,"byte_end":71113,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":71875,"byte_end":71878,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":71833,"byte_end":71863,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":72593,"byte_end":72603,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":72081,"byte_end":72110,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":72115,"byte_end":72118,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":72123,"byte_end":72199,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":72204,"byte_end":72273,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":72278,"byte_end":72296,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":72301,"byte_end":72304,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":72309,"byte_end":72380,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":72385,"byte_end":72458,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":72463,"byte_end":72537,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":72542,"byte_end":72581,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":74124,"byte_end":74138,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":73027,"byte_end":73108,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":73113,"byte_end":73159,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":73164,"byte_end":73167,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":73172,"byte_end":73220,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":73225,"byte_end":73228,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":73233,"byte_end":73317,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":73322,"byte_end":73381,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":73386,"byte_end":73471,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":73476,"byte_end":73495,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":73500,"byte_end":73579,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":73584,"byte_end":73587,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":73592,"byte_end":73667,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":73672,"byte_end":73748,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":73753,"byte_end":73808,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":73813,"byte_end":73887,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":73892,"byte_end":73965,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":73970,"byte_end":74004,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":74009,"byte_end":74012,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":74017,"byte_end":74093,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":74098,"byte_end":74112,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":74772,"byte_end":74780,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":74524,"byte_end":74589,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":74594,"byte_end":74597,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":74602,"byte_end":74675,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":74680,"byte_end":74690,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":74695,"byte_end":74698,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":74703,"byte_end":74760,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":74892,"byte_end":74901,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":74834,"byte_end":74880,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":75242,"byte_end":75253,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":75043,"byte_end":75077,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":75082,"byte_end":75085,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":75090,"byte_end":75163,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":75168,"byte_end":75230,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":75558,"byte_end":75567,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":75358,"byte_end":75393,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":75398,"byte_end":75401,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":75406,"byte_end":75479,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":75484,"byte_end":75546,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":76267,"byte_end":76284,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":75718,"byte_end":75787,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":75792,"byte_end":75795,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":75800,"byte_end":75870,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":75875,"byte_end":75948,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":75953,"byte_end":75999,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":76004,"byte_end":76007,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":76012,"byte_end":76087,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":76092,"byte_end":76166,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":76171,"byte_end":76197,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":76202,"byte_end":76205,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":76210,"byte_end":76255,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":76450,"byte_end":76460,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":76337,"byte_end":76384,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":76389,"byte_end":76392,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":76397,"byte_end":76438,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":78972,"byte_end":78985,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":78841,"byte_end":78914,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":78915,"byte_end":78918,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":78919,"byte_end":78960,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79179,"byte_end":79182,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79134,"byte_end":79167,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79346,"byte_end":79351,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79309,"byte_end":79334,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79457,"byte_end":79468,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79403,"byte_end":79445,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79583,"byte_end":79593,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79538,"byte_end":79571,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":80327,"byte_end":80339,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79654,"byte_end":79702,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79707,"byte_end":79710,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79715,"byte_end":79756,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79761,"byte_end":79764,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79769,"byte_end":79831,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79836,"byte_end":79896,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79901,"byte_end":79961,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79966,"byte_end":79969,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79974,"byte_end":80049,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":80054,"byte_end":80122,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":80127,"byte_end":80203,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":80208,"byte_end":80276,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":80281,"byte_end":80315,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":81767,"byte_end":81784,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":81483,"byte_end":81535,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":81540,"byte_end":81543,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":81548,"byte_end":81624,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":81629,"byte_end":81663,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":81668,"byte_end":81671,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":81676,"byte_end":81755,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":82244,"byte_end":82255,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":81857,"byte_end":81899,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":81904,"byte_end":81907,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":81912,"byte_end":81985,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":81990,"byte_end":82030,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":82035,"byte_end":82038,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":82043,"byte_end":82113,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":82118,"byte_end":82152,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":82157,"byte_end":82160,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":82165,"byte_end":82232,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":83398,"byte_end":83415,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":360}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":83198,"byte_end":83255,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":83256,"byte_end":83259,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":83260,"byte_end":83327,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":83328,"byte_end":83386,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":83593,"byte_end":83596,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":83510,"byte_end":83581,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":84177,"byte_end":84180,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":83962,"byte_end":84014,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":84019,"byte_end":84022,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":84027,"byte_end":84099,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":84104,"byte_end":84165,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":84623,"byte_end":84630,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":84382,"byte_end":84434,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":84439,"byte_end":84442,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":84447,"byte_end":84520,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":84525,"byte_end":84595,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":84600,"byte_end":84611,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":86470,"byte_end":86477,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":86406,"byte_end":86458,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":86763,"byte_end":86767,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":86708,"byte_end":86751,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":1406},{"krate":0,"index":1415},{"krate":0,"index":1419},{"krate":0,"index":431},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":446},{"krate":0,"index":451},{"krate":0,"index":457}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":87880,"byte_end":87915,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89862,"byte_end":89866,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1412},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89875,"byte_end":89880,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1406},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89843,"byte_end":89849,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1412}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88092,"byte_end":88198,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88199,"byte_end":88202,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88203,"byte_end":88293,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88294,"byte_end":88297,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88298,"byte_end":88333,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88334,"byte_end":88337,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88338,"byte_end":88351,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88352,"byte_end":88355,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88356,"byte_end":88393,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88394,"byte_end":88397,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88398,"byte_end":88417,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88418,"byte_end":88460,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88461,"byte_end":88511,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88512,"byte_end":88563,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88564,"byte_end":88582,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88583,"byte_end":88604,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88605,"byte_end":88647,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88648,"byte_end":88681,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88682,"byte_end":88698,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88699,"byte_end":88793,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88794,"byte_end":88804,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88805,"byte_end":88808,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88809,"byte_end":88856,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88857,"byte_end":88862,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88863,"byte_end":88870,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":88871,"byte_end":88874,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89075,"byte_end":89078,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89079,"byte_end":89165,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89166,"byte_end":89176,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89177,"byte_end":89180,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89181,"byte_end":89188,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89189,"byte_end":89224,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89225,"byte_end":89267,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89268,"byte_end":89318,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89319,"byte_end":89370,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89371,"byte_end":89374,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89375,"byte_end":89393,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89394,"byte_end":89415,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89416,"byte_end":89458,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89459,"byte_end":89506,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89507,"byte_end":89523,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89524,"byte_end":89573,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89574,"byte_end":89584,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89585,"byte_end":89588,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89589,"byte_end":89622,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89623,"byte_end":89663,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89664,"byte_end":89696,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89697,"byte_end":89702,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89703,"byte_end":89710,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":89711,"byte_end":89733,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129477,"byte_end":14129487,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129638,"byte_end":14129648,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129975,"byte_end":14129985,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14140164,"byte_end":14140173,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14140373,"byte_end":14140383,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14140534,"byte_end":14140543,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14140866,"byte_end":14140876,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14141122,"byte_end":14141130,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14141227,"byte_end":14141235,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14141346,"byte_end":14141354,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14141454,"byte_end":14141462,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14141572,"byte_end":14141582,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14147164,"byte_end":14147174,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150010,"byte_end":14150016,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14153828,"byte_end":14153834,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14159149,"byte_end":14159155,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14159471,"byte_end":14159477,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14160192,"byte_end":14160198,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14161238,"byte_end":14161249,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14162176,"byte_end":14162186,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163075,"byte_end":14163085,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14165182,"byte_end":14165192,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14165505,"byte_end":14165515,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14166241,"byte_end":14166251,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14167230,"byte_end":14167241,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14167597,"byte_end":14167608,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14169717,"byte_end":14169728,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14170492,"byte_end":14170503,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14170744,"byte_end":14170755,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14185763,"byte_end":14185783,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14189117,"byte_end":14189137,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14190023,"byte_end":14190043,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191384,"byte_end":14191404,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191497,"byte_end":14191504,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14201103,"byte_end":14201110,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14201236,"byte_end":14201261,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14201419,"byte_end":14201444,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14201579,"byte_end":14201604,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14202673,"byte_end":14202683,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14205225,"byte_end":14205235,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14208611,"byte_end":14208621,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14208944,"byte_end":14208954,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14209261,"byte_end":14209276,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14209558,"byte_end":14209573,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14209690,"byte_end":14209705,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14212031,"byte_end":14212048,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214697,"byte_end":14214714,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14218006,"byte_end":14218023,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14218387,"byte_end":14218404,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14218822,"byte_end":14218844,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14219173,"byte_end":14219195,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14219326,"byte_end":14219348,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token\\guard.rs","byte_start":40623,"byte_end":40632,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token\\guard.rs","byte_start":40992,"byte_end":41001,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8872,"byte_end":8889,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8914,"byte_end":8931,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":9665,"byte_end":9690,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":9764,"byte_end":9781,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":10006,"byte_end":10023,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":10429,"byte_end":10446,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":11416,"byte_end":11433,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":11523,"byte_end":11540,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":17652,"byte_end":17677,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":17849,"byte_end":17874,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":19309,"byte_end":19334,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":20522,"byte_end":20536,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":20870,"byte_end":20887,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":21487,"byte_end":21504,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":22362,"byte_end":22375,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":23560,"byte_end":23582,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41882,"byte_end":41890,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\intrusive_double_linked_list.rs","byte_start":42140,"byte_end":42148,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\intrusive_double_linked_list.rs","byte_start":42253,"byte_end":42261,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\intrusive_double_linked_list.rs","byte_start":42570,"byte_end":42580,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":71813,"byte_end":71823,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":76684,"byte_end":76694,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":77098,"byte_end":77108,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79114,"byte_end":79127,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":82339,"byte_end":82352,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":82566,"byte_end":82579,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":82697,"byte_end":82710,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":82922,"byte_end":82935,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":83483,"byte_end":83500,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":86874,"byte_end":86891,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":87181,"byte_end":87198,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":87416,"byte_end":87433,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":87529,"byte_end":87546,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":87571,"byte_end":87588,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":87732,"byte_end":87749,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":90486,"byte_end":90492,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":90735,"byte_end":90741,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":91014,"byte_end":91020,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":91348,"byte_end":91354,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":91708,"byte_end":91714,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":92266,"byte_end":92272,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","byte_start":707,"byte_end":712,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":511}},{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\mod.rs","byte_start":14127889,"byte_end":14127905,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":955}},{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","byte_start":889,"byte_end":893,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\lib.rs","byte_start":904,"byte_end":910,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":393}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129477,"byte_end":14129487,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129638,"byte_end":14129648,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1192},"to":{"krate":0,"index":561}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\bytes_codec.rs","byte_start":14129975,"byte_end":14129985,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1192},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14140164,"byte_end":14140173,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14140373,"byte_end":14140383,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14140534,"byte_end":14140543,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14140866,"byte_end":14140876,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14141122,"byte_end":14141130,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2479}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14141227,"byte_end":14141235,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2482}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14141346,"byte_end":14141354,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2479}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14141454,"byte_end":14141462,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2482}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14141572,"byte_end":14141582,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1555},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_impl.rs","byte_start":14147164,"byte_end":14147174,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1555},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14150010,"byte_end":14150016,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14153828,"byte_end":14153834,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14159149,"byte_end":14159155,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1505},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14159471,"byte_end":14159477,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1505},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14160192,"byte_end":14160198,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1505},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed.rs","byte_start":14161238,"byte_end":14161249,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14162176,"byte_end":14162186,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14163075,"byte_end":14163085,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14165182,"byte_end":14165192,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1464},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14165505,"byte_end":14165515,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1464},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_read.rs","byte_start":14166241,"byte_end":14166251,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1464},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14167230,"byte_end":14167241,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14167597,"byte_end":14167608,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14169717,"byte_end":14169728,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1423},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14170492,"byte_end":14170503,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1423},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\framed_write.rs","byte_start":14170744,"byte_end":14170755,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1423},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14185763,"byte_end":14185783,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14189117,"byte_end":14189137,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1245},"to":{"krate":0,"index":561}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14190023,"byte_end":14190043,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1245},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191384,"byte_end":14191404,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1245},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14191497,"byte_end":14191504,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14201103,"byte_end":14201110,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1233},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14201236,"byte_end":14201261,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14201419,"byte_end":14201444,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\length_delimited.rs","byte_start":14201579,"byte_end":14201604,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1009},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14202673,"byte_end":14202683,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14205225,"byte_end":14205235,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1261},"to":{"krate":0,"index":561}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14208611,"byte_end":14208621,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1261},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14208944,"byte_end":14208954,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14209261,"byte_end":14209276,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1283},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14209558,"byte_end":14209573,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1283},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\lines_codec.rs","byte_start":14209690,"byte_end":14209705,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1283},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14212031,"byte_end":14212048,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14214697,"byte_end":14214714,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1291},"to":{"krate":0,"index":561}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14218006,"byte_end":14218023,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1291},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14218387,"byte_end":14218404,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14218822,"byte_end":14218844,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14219173,"byte_end":14219195,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\codec\\any_delimiter_codec.rs","byte_start":14219326,"byte_end":14219348,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1315},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token\\guard.rs","byte_start":40623,"byte_end":40632,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token\\guard.rs","byte_start":40992,"byte_end":41001,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8872,"byte_end":8889,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":8914,"byte_end":8931,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":9665,"byte_end":9690,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":9764,"byte_end":9781,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":10006,"byte_end":10023,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":10429,"byte_end":10446,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":11416,"byte_end":11433,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":11523,"byte_end":11540,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":17652,"byte_end":17677,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":17849,"byte_end":17874,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":19309,"byte_end":19334,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":20522,"byte_end":20536,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":20870,"byte_end":20887,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":21487,"byte_end":21504,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":22362,"byte_end":22375,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\cancellation_token.rs","byte_start":23560,"byte_end":23582,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41882,"byte_end":41890,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\intrusive_double_linked_list.rs","byte_start":42140,"byte_end":42148,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\intrusive_double_linked_list.rs","byte_start":42253,"byte_end":42261,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":3104}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\intrusive_double_linked_list.rs","byte_start":42570,"byte_end":42580,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":71813,"byte_end":71823,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":76684,"byte_end":76694,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\mpsc.rs","byte_start":77098,"byte_end":77108,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1398},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":79114,"byte_end":79127,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":82339,"byte_end":82352,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":301},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":82566,"byte_end":82579,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":82697,"byte_end":82710,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\poll_semaphore.rs","byte_start":82922,"byte_end":82935,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2777}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":83483,"byte_end":83500,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":86874,"byte_end":86891,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":87181,"byte_end":87198,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":87416,"byte_end":87433,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":87529,"byte_end":87546,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":87571,"byte_end":87588,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\sync\\reusable_box.rs","byte_start":87732,"byte_end":87749,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":90486,"byte_end":90492,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1406},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":90735,"byte_end":90741,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1406},"to":{"krate":16,"index":227}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":91014,"byte_end":91020,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1406},"to":{"krate":16,"index":185}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":91348,"byte_end":91354,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1406},"to":{"krate":16,"index":266}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":91708,"byte_end":91714,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1406},"to":{"krate":16,"index":306}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.8\\src\\either.rs","byte_start":92266,"byte_end":92272,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1406},"to":{"krate":14,"index":96}}]}