{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6","program":"C:\\Users\\utibe\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=a1c1339e1105a442","-C","extra-filename=-a1c1339e1105a442","--out-dir","c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\libbytes-407e9a62ab876e29.rmeta","--extern","futures_core=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\libfutures_core-f698ac8f1c542c9b.rmeta","--extern","futures_sink=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\libfutures_sink-04621fdbe893bcb2.rmeta","--extern","log=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\liblog-5301ae822fe4e7bc.rmeta","--extern","pin_project_lite=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\libpin_project_lite-d9dcd34295f098da.rmeta","--extern","tokio=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\libtokio-7166f27cbc4769b2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\utibe\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\libtokio_util-a1c1339e1105a442.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[2749619810914742534,0]},"crate_root":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src","external_crates":[{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10193565062885309191,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[11670460313399248794,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8277854152057768692,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6312854529260013001,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11828252632451478976,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12374244740244276079,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10571265039882681484,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[417492704836984899,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7421411805122234607,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14357827127085763175,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7547149687459966599,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[3948222140130536591,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11460324065167655691,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":14,"id":{"name":"futures_core","disambiguator":[585976681511982262,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":15,"id":{"name":"futures_sink","disambiguator":[2307001958800902556,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":16,"id":{"name":"tokio","disambiguator":[7478633898963674581,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":17,"id":{"name":"mio","disambiguator":[15163790320390230257,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","num":18,"id":{"name":"log","disambiguator":[9168290620402381,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":19,"id":{"name":"cfg_if","disambiguator":[7548206254662694973,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":20,"id":{"name":"ntapi","disambiguator":[2375642893821050035,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":21,"id":{"name":"winapi","disambiguator":[14084942300408863061,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":22,"id":{"name":"miow","disambiguator":[10185536831729662007,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","num":23,"id":{"name":"pin_project_lite","disambiguator":[4701710614950086196,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":24,"id":{"name":"bytes","disambiguator":[1461891054971835337,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":25,"id":{"name":"memchr","disambiguator":[3204635659421184808,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":26,"id":{"name":"num_cpus","disambiguator":[16305795003631790142,0]}}],"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13644080,"byte_end":13644090,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13644129,"byte_end":13644136,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13644175,"byte_end":13644182,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13644344,"byte_end":13644350,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13644352,"byte_end":13644363,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13644411,"byte_end":13644421,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1404},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13644470,"byte_end":13644481,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13644543,"byte_end":13644563,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13644565,"byte_end":13644590,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13644639,"byte_end":13644649,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13644651,"byte_end":13644666,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13644731,"byte_end":13644748,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13644750,"byte_end":13644772,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6701,"byte_end":6718,"line_start":4,"line_end":4,"column_start":30,"column_end":47},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6720,"byte_end":6745,"line_start":4,"line_end":4,"column_start":49,"column_end":74},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6808,"byte_end":6818,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6865,"byte_end":6878,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6921,"byte_end":6938,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":496},{"krate":0,"index":14},{"krate":0,"index":378},{"krate":0,"index":447}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":356,"byte_end":393,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":394,"byte_end":397,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":398,"byte_end":455,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":456,"byte_end":520,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":521,"byte_end":596,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":597,"byte_end":600,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":601,"byte_end":637,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1110},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1174}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\cfg.rs","byte_start":5445,"byte_end":5470,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13633808,"byte_end":13633861,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13633862,"byte_end":13633865,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13633866,"byte_end":13633941,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13633942,"byte_end":13634007,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634008,"byte_end":13634011,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634012,"byte_end":13634092,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634093,"byte_end":13634168,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634169,"byte_end":13634217,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634218,"byte_end":13634221,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634222,"byte_end":13634245,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634246,"byte_end":13634249,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634250,"byte_end":13634329,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634330,"byte_end":13634409,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634410,"byte_end":13634481,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634482,"byte_end":13634552,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634553,"byte_end":13634631,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634632,"byte_end":13634708,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634709,"byte_end":13634742,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634743,"byte_end":13634746,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634747,"byte_end":13634827,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634828,"byte_end":13634908,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634909,"byte_end":13634959,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634960,"byte_end":13634963,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13634964,"byte_end":13635015,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635016,"byte_end":13635065,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635066,"byte_end":13635117,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635118,"byte_end":13635121,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635122,"byte_end":13635187,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635188,"byte_end":13635191,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635192,"byte_end":13635269,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635270,"byte_end":13635311,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635312,"byte_end":13635315,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635316,"byte_end":13635396,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635397,"byte_end":13635476,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635477,"byte_end":13635555,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635556,"byte_end":13635635,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635636,"byte_end":13635650,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635651,"byte_end":13635654,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635655,"byte_end":13635734,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635735,"byte_end":13635814,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635815,"byte_end":13635832,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635833,"byte_end":13635836,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635837,"byte_end":13635914,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635915,"byte_end":13635994,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13635995,"byte_end":13636072,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636073,"byte_end":13636143,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636144,"byte_end":13636193,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636194,"byte_end":13636197,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636198,"byte_end":13636211,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636212,"byte_end":13636244,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636245,"byte_end":13636312,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636313,"byte_end":13636427,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636428,"byte_end":13636465,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636466,"byte_end":13636527,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636528,"byte_end":13636577,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636578,"byte_end":13636581,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636582,"byte_end":13636623,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636624,"byte_end":13636634,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636635,"byte_end":13636719,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636720,"byte_end":13636776,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636777,"byte_end":13636780,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636781,"byte_end":13636802,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636803,"byte_end":13636870,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636871,"byte_end":13636899,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636900,"byte_end":13636913,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636914,"byte_end":13636932,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636933,"byte_end":13636942,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636943,"byte_end":13636946,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13636947,"byte_end":13637006,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637007,"byte_end":13637031,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637032,"byte_end":13637041,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637042,"byte_end":13637047,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637048,"byte_end":13637056,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637057,"byte_end":13637064,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637065,"byte_end":13637139,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637140,"byte_end":13637143,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637144,"byte_end":13637166,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637167,"byte_end":13637170,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637171,"byte_end":13637248,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637249,"byte_end":13637325,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637326,"byte_end":13637405,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637406,"byte_end":13637460,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637461,"byte_end":13637464,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637465,"byte_end":13637509,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637510,"byte_end":13637517,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637518,"byte_end":13637553,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637554,"byte_end":13637585,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637586,"byte_end":13637589,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637590,"byte_end":13637619,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637620,"byte_end":13637623,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637624,"byte_end":13637663,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637664,"byte_end":13637667,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637668,"byte_end":13637706,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637707,"byte_end":13637734,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637735,"byte_end":13637771,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637772,"byte_end":13637775,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637776,"byte_end":13637794,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637795,"byte_end":13637817,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637818,"byte_end":13637848,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637849,"byte_end":13637903,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637904,"byte_end":13637934,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637935,"byte_end":13637992,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13637993,"byte_end":13638025,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638026,"byte_end":13638039,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638040,"byte_end":13638043,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638044,"byte_end":13638078,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638079,"byte_end":13638123,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638124,"byte_end":13638176,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638177,"byte_end":13638244,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638245,"byte_end":13638248,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638249,"byte_end":13638323,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638324,"byte_end":13638390,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638391,"byte_end":13638420,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638421,"byte_end":13638468,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638469,"byte_end":13638521,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638522,"byte_end":13638593,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638594,"byte_end":13638613,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638614,"byte_end":13638627,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638628,"byte_end":13638631,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638632,"byte_end":13638671,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638672,"byte_end":13638727,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638728,"byte_end":13638746,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638747,"byte_end":13638823,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638824,"byte_end":13638890,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638891,"byte_end":13638943,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638944,"byte_end":13638947,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13638948,"byte_end":13639028,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639029,"byte_end":13639054,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639055,"byte_end":13639087,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639088,"byte_end":13639101,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639102,"byte_end":13639105,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639106,"byte_end":13639178,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639179,"byte_end":13639205,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639206,"byte_end":13639257,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639258,"byte_end":13639294,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639295,"byte_end":13639298,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639299,"byte_end":13639377,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639378,"byte_end":13639421,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639422,"byte_end":13639469,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639470,"byte_end":13639506,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639507,"byte_end":13639551,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639552,"byte_end":13639608,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639609,"byte_end":13639657,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639658,"byte_end":13639680,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639681,"byte_end":13639699,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639700,"byte_end":13639713,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639714,"byte_end":13639723,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639724,"byte_end":13639729,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639730,"byte_end":13639737,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639738,"byte_end":13639741,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639742,"byte_end":13639765,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639766,"byte_end":13639769,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639770,"byte_end":13639848,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639849,"byte_end":13639922,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13639923,"byte_end":13639999,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640000,"byte_end":13640080,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640081,"byte_end":13640097,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640098,"byte_end":13640101,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640102,"byte_end":13640182,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640183,"byte_end":13640262,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640263,"byte_end":13640343,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640344,"byte_end":13640416,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640417,"byte_end":13640420,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640421,"byte_end":13640498,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640499,"byte_end":13640577,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640578,"byte_end":13640651,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640652,"byte_end":13640718,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640719,"byte_end":13640722,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640723,"byte_end":13640736,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640737,"byte_end":13640770,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640771,"byte_end":13640805,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640806,"byte_end":13640843,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640844,"byte_end":13640911,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640912,"byte_end":13640947,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13640948,"byte_end":13641009,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641010,"byte_end":13641056,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641057,"byte_end":13641118,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641119,"byte_end":13641122,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641123,"byte_end":13641151,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641152,"byte_end":13641155,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641156,"byte_end":13641197,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641198,"byte_end":13641208,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641209,"byte_end":13641233,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641234,"byte_end":13641308,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641309,"byte_end":13641351,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641352,"byte_end":13641366,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641367,"byte_end":13641424,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641425,"byte_end":13641474,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641475,"byte_end":13641489,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641490,"byte_end":13641527,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641528,"byte_end":13641579,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641580,"byte_end":13641626,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641627,"byte_end":13641657,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641658,"byte_end":13641672,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641673,"byte_end":13641682,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641683,"byte_end":13641688,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641689,"byte_end":13641696,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641697,"byte_end":13641704,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641705,"byte_end":13641780,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641781,"byte_end":13641854,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641855,"byte_end":13641897,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641898,"byte_end":13641901,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641902,"byte_end":13641924,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641925,"byte_end":13641928,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13641929,"byte_end":13642006,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642007,"byte_end":13642083,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642084,"byte_end":13642160,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642161,"byte_end":13642184,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642185,"byte_end":13642188,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642189,"byte_end":13642234,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642235,"byte_end":13642242,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642243,"byte_end":13642278,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642279,"byte_end":13642303,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642304,"byte_end":13642307,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642308,"byte_end":13642337,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642338,"byte_end":13642341,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642342,"byte_end":13642381,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642382,"byte_end":13642385,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642386,"byte_end":13642432,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642433,"byte_end":13642469,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642470,"byte_end":13642473,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642474,"byte_end":13642565,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642566,"byte_end":13642640,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642641,"byte_end":13642663,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642664,"byte_end":13642697,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642698,"byte_end":13642745,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642746,"byte_end":13642798,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642799,"byte_end":13642874,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642875,"byte_end":13642894,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642895,"byte_end":13642908,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642909,"byte_end":13642912,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642913,"byte_end":13642965,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13642966,"byte_end":13643043,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643044,"byte_end":13643108,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643109,"byte_end":13643112,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643113,"byte_end":13643156,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643157,"byte_end":13643197,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643198,"byte_end":13643201,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643202,"byte_end":13643259,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643260,"byte_end":13643306,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643307,"byte_end":13643358,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643359,"byte_end":13643377,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643378,"byte_end":13643387,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643388,"byte_end":13643393,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643394,"byte_end":13643401,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643402,"byte_end":13643405,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643406,"byte_end":13643445,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643446,"byte_end":13643487,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643488,"byte_end":13643524,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643525,"byte_end":13643557,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643558,"byte_end":13643654,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643655,"byte_end":13643706,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643707,"byte_end":13643760,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643761,"byte_end":13643804,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643805,"byte_end":13643849,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643850,"byte_end":13643898,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643899,"byte_end":13643947,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643948,"byte_end":13643994,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13643995,"byte_end":13644034,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13646058,"byte_end":13646068,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13644901,"byte_end":13644986,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13644987,"byte_end":13644990,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13644991,"byte_end":13645029,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645030,"byte_end":13645068,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645069,"byte_end":13645072,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645073,"byte_end":13645086,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645087,"byte_end":13645090,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645091,"byte_end":13645172,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645173,"byte_end":13645176,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645177,"byte_end":13645216,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645217,"byte_end":13645250,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645251,"byte_end":13645280,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645281,"byte_end":13645284,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645285,"byte_end":13645292,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645293,"byte_end":13645311,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645312,"byte_end":13645342,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645343,"byte_end":13645367,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645368,"byte_end":13645375,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645376,"byte_end":13645405,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645406,"byte_end":13645458,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645459,"byte_end":13645462,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645463,"byte_end":13645481,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645482,"byte_end":13645499,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645500,"byte_end":13645580,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645581,"byte_end":13645615,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645616,"byte_end":13645669,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645670,"byte_end":13645681,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645682,"byte_end":13645689,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645690,"byte_end":13645695,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645696,"byte_end":13645743,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645744,"byte_end":13645797,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645798,"byte_end":13645856,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645857,"byte_end":13645936,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645937,"byte_end":13645949,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645950,"byte_end":13645957,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645958,"byte_end":13645965,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13645966,"byte_end":13645969,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13646170,"byte_end":13646173,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13646097,"byte_end":13646158,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648173,"byte_end":13648180,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13646888,"byte_end":13646923,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13646924,"byte_end":13646927,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13646928,"byte_end":13646997,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13646998,"byte_end":13647077,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647078,"byte_end":13647150,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647151,"byte_end":13647175,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647176,"byte_end":13647179,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647180,"byte_end":13647248,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647249,"byte_end":13647326,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647327,"byte_end":13647388,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647389,"byte_end":13647392,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647393,"byte_end":13647454,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647455,"byte_end":13647517,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647518,"byte_end":13647521,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647522,"byte_end":13647585,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647586,"byte_end":13647649,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647650,"byte_end":13647729,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647730,"byte_end":13647804,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647805,"byte_end":13647824,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647825,"byte_end":13647828,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647829,"byte_end":13647897,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647898,"byte_end":13647960,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13647961,"byte_end":13648036,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ reseting the entire internal state.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648037,"byte_end":13648076,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648077,"byte_end":13648080,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648081,"byte_end":13648117,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648118,"byte_end":13648162,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648228,"byte_end":13648232,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648187,"byte_end":13648218,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648998,"byte_end":13649003,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648239,"byte_end":13648291,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648296,"byte_end":13648299,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648304,"byte_end":13648373,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648378,"byte_end":13648448,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648453,"byte_end":13648499,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648504,"byte_end":13648507,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648512,"byte_end":13648588,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648593,"byte_end":13648668,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648673,"byte_end":13648748,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648753,"byte_end":13648793,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648798,"byte_end":13648801,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648806,"byte_end":13648880,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648885,"byte_end":13648931,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648936,"byte_end":13648939,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13648944,"byte_end":13648988,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651939,"byte_end":13651945,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649027,"byte_end":13649092,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649097,"byte_end":13649100,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649105,"byte_end":13649179,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649184,"byte_end":13649256,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649261,"byte_end":13649334,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649339,"byte_end":13649382,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649387,"byte_end":13649390,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649395,"byte_end":13649468,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649473,"byte_end":13649536,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649541,"byte_end":13649616,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649621,"byte_end":13649696,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649701,"byte_end":13649724,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649729,"byte_end":13649732,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649737,"byte_end":13649809,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649814,"byte_end":13649888,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649893,"byte_end":13649963,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649968,"byte_end":13649971,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13649976,"byte_end":13650044,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650049,"byte_end":13650120,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650125,"byte_end":13650205,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650210,"byte_end":13650222,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650227,"byte_end":13650230,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650235,"byte_end":13650305,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650310,"byte_end":13650385,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650390,"byte_end":13650427,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650432,"byte_end":13650435,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650440,"byte_end":13650476,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650481,"byte_end":13650525,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650530,"byte_end":13650533,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650538,"byte_end":13650561,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650566,"byte_end":13650569,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650574,"byte_end":13650648,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650653,"byte_end":13650727,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650732,"byte_end":13650785,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650790,"byte_end":13650793,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650798,"byte_end":13650869,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650874,"byte_end":13650944,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650949,"byte_end":13650965,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650970,"byte_end":13650973,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650978,"byte_end":13650991,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13650996,"byte_end":13651014,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651019,"byte_end":13651024,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651029,"byte_end":13651055,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651060,"byte_end":13651097,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651102,"byte_end":13651107,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651112,"byte_end":13651133,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651138,"byte_end":13651143,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651148,"byte_end":13651178,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651183,"byte_end":13651197,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651202,"byte_end":13651233,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651238,"byte_end":13651271,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651276,"byte_end":13651279,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651284,"byte_end":13651377,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651382,"byte_end":13651400,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651405,"byte_end":13651408,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651413,"byte_end":13651485,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651490,"byte_end":13651550,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651555,"byte_end":13651607,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651612,"byte_end":13651674,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651679,"byte_end":13651746,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651751,"byte_end":13651754,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651759,"byte_end":13651787,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651792,"byte_end":13651801,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651806,"byte_end":13651811,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651816,"byte_end":13651823,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651828,"byte_end":13651831,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651836,"byte_end":13651905,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13651910,"byte_end":13651931,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13653111,"byte_end":13653121,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13652026,"byte_end":13652098,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13652103,"byte_end":13652152,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13652157,"byte_end":13652160,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13652165,"byte_end":13652233,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13652238,"byte_end":13652305,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13652310,"byte_end":13652378,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13652383,"byte_end":13652459,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13652464,"byte_end":13652530,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13652535,"byte_end":13652538,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13652543,"byte_end":13652611,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13652616,"byte_end":13652691,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13652696,"byte_end":13652771,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13652776,"byte_end":13652848,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13652853,"byte_end":13652895,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13652900,"byte_end":13652903,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13652908,"byte_end":13652983,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13652988,"byte_end":13653066,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13653071,"byte_end":13653103,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13654729,"byte_end":13654735,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13653539,"byte_end":13653619,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13653624,"byte_end":13653700,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13653705,"byte_end":13653708,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13653713,"byte_end":13653788,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13653793,"byte_end":13653863,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13653868,"byte_end":13653939,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13653944,"byte_end":13654016,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13654021,"byte_end":13654079,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13654084,"byte_end":13654087,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13654092,"byte_end":13654161,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13654166,"byte_end":13654241,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13654246,"byte_end":13654322,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13654327,"byte_end":13654349,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13654354,"byte_end":13654357,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13654362,"byte_end":13654435,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13654440,"byte_end":13654513,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13654518,"byte_end":13654594,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13654599,"byte_end":13654602,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13654607,"byte_end":13654643,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13654648,"byte_end":13654680,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13654685,"byte_end":13654721,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655069,"byte_end":13655076,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13654914,"byte_end":13654986,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13654987,"byte_end":13655007,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655008,"byte_end":13655011,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655012,"byte_end":13655058,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655341,"byte_end":13655346,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655089,"byte_end":13655121,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655126,"byte_end":13655129,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655134,"byte_end":13655211,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655216,"byte_end":13655272,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655277,"byte_end":13655280,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655285,"byte_end":13655331,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655697,"byte_end":13655703,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655370,"byte_end":13655415,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655420,"byte_end":13655423,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655428,"byte_end":13655502,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655507,"byte_end":13655587,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655592,"byte_end":13655630,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655635,"byte_end":13655638,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13655643,"byte_end":13655689,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13666520,"byte_end":13666526,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1489}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13668299,"byte_end":13668302,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13666668,"byte_end":13666748,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13666753,"byte_end":13666834,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13666839,"byte_end":13666842,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13666847,"byte_end":13666922,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13666927,"byte_end":13666997,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13667002,"byte_end":13667071,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13667076,"byte_end":13667148,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13667153,"byte_end":13667211,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13667216,"byte_end":13667219,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13667224,"byte_end":13667295,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13667300,"byte_end":13667377,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13667382,"byte_end":13667458,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13667463,"byte_end":13667485,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13667490,"byte_end":13667493,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13667498,"byte_end":13667571,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13667576,"byte_end":13667649,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13667654,"byte_end":13667730,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13667735,"byte_end":13667738,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13667743,"byte_end":13667819,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13667824,"byte_end":13667900,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13667905,"byte_end":13667980,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13667985,"byte_end":13668020,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13668025,"byte_end":13668028,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13668033,"byte_end":13668069,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13668074,"byte_end":13668106,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13668111,"byte_end":13668148,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13668153,"byte_end":13668191,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13668196,"byte_end":13668287,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13669910,"byte_end":13669923,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13668515,"byte_end":13668595,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13668600,"byte_end":13668681,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13668686,"byte_end":13668735,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13668740,"byte_end":13668743,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13668748,"byte_end":13668823,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13668828,"byte_end":13668898,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13668903,"byte_end":13668972,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13668977,"byte_end":13669049,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13669054,"byte_end":13669112,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13669117,"byte_end":13669120,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13669125,"byte_end":13669196,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13669201,"byte_end":13669278,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13669283,"byte_end":13669359,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13669364,"byte_end":13669386,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13669391,"byte_end":13669394,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13669399,"byte_end":13669472,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13669477,"byte_end":13669550,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13669555,"byte_end":13669631,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13669636,"byte_end":13669639,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13669644,"byte_end":13669680,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13669685,"byte_end":13669717,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13669722,"byte_end":13669759,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13669764,"byte_end":13669802,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13669807,"byte_end":13669898,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13672026,"byte_end":13672036,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13670449,"byte_end":13670529,"line_start":118,"line_end":118,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13670534,"byte_end":13670615,"line_start":119,"line_end":119,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13670620,"byte_end":13670623,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13670628,"byte_end":13670703,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13670708,"byte_end":13670778,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13670783,"byte_end":13670854,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13670859,"byte_end":13670931,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13670936,"byte_end":13670994,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13670999,"byte_end":13671002,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671007,"byte_end":13671078,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671083,"byte_end":13671160,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671165,"byte_end":13671241,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671246,"byte_end":13671268,"line_start":130,"line_end":130,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671273,"byte_end":13671276,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671281,"byte_end":13671360,"line_start":132,"line_end":132,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671365,"byte_end":13671442,"line_start":133,"line_end":133,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671447,"byte_end":13671450,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671455,"byte_end":13671528,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671533,"byte_end":13671606,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671611,"byte_end":13671687,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671692,"byte_end":13671695,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671700,"byte_end":13671736,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671741,"byte_end":13671773,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671778,"byte_end":13671816,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671821,"byte_end":13671859,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671864,"byte_end":13671918,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13671923,"byte_end":13672014,"line_start":144,"line_end":144,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13672671,"byte_end":13672678,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13672388,"byte_end":13672451,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13672456,"byte_end":13672469,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13672474,"byte_end":13672477,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13672482,"byte_end":13672557,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13672562,"byte_end":13672632,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13672637,"byte_end":13672659,"line_start":163,"line_end":163,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673022,"byte_end":13673029,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13672731,"byte_end":13672802,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13672807,"byte_end":13672820,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13672825,"byte_end":13672828,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13672833,"byte_end":13672908,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13672913,"byte_end":13672983,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13672988,"byte_end":13673010,"line_start":173,"line_end":173,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673392,"byte_end":13673403,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673094,"byte_end":13673172,"line_start":178,"line_end":178,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673177,"byte_end":13673190,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673195,"byte_end":13673198,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673203,"byte_end":13673278,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673283,"byte_end":13673353,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673358,"byte_end":13673380,"line_start":183,"line_end":183,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673750,"byte_end":13673755,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673499,"byte_end":13673557,"line_start":188,"line_end":188,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673562,"byte_end":13673575,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673580,"byte_end":13673583,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673588,"byte_end":13673662,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673667,"byte_end":13673738,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13674067,"byte_end":13674076,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673808,"byte_end":13673874,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673879,"byte_end":13673892,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673897,"byte_end":13673900,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673905,"byte_end":13673979,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13673984,"byte_end":13674055,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13674196,"byte_end":13674207,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13674141,"byte_end":13674184,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13674342,"byte_end":13674357,"line_start":212,"line_end":212,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13674279,"byte_end":13674330,"line_start":211,"line_end":211,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13674497,"byte_end":13674509,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13674441,"byte_end":13674485,"line_start":216,"line_end":216,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13674646,"byte_end":13674662,"line_start":222,"line_end":222,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13674582,"byte_end":13674634,"line_start":221,"line_end":221,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13675012,"byte_end":13675022,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13674747,"byte_end":13674810,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13674815,"byte_end":13674818,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13674823,"byte_end":13674898,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13674903,"byte_end":13674973,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13674978,"byte_end":13675000,"line_start":230,"line_end":230,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13675394,"byte_end":13675404,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13675072,"byte_end":13675146,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13675151,"byte_end":13675192,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13675197,"byte_end":13675200,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13675205,"byte_end":13675280,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13675285,"byte_end":13675355,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13675360,"byte_end":13675382,"line_start":240,"line_end":240,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677378,"byte_end":13677389,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677063,"byte_end":13677134,"line_start":304,"line_end":304,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677135,"byte_end":13677207,"line_start":305,"line_end":305,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677208,"byte_end":13677268,"line_start":306,"line_end":306,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677269,"byte_end":13677272,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677273,"byte_end":13677309,"line_start":308,"line_end":308,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677327,"byte_end":13677366,"line_start":310,"line_end":310,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677475,"byte_end":13677477,"line_start":313,"line_end":313,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677402,"byte_end":13677466,"line_start":312,"line_end":312,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677509,"byte_end":13677514,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677487,"byte_end":13677500,"line_start":315,"line_end":315,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677579,"byte_end":13677587,"line_start":319,"line_end":319,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677524,"byte_end":13677570,"line_start":318,"line_end":318,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1212},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677674,"byte_end":13677683,"line_start":322,"line_end":322,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677604,"byte_end":13677665,"line_start":321,"line_end":321,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677916,"byte_end":13677919,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677864,"byte_end":13677904,"line_start":330,"line_end":330,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13678648,"byte_end":13678658,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1448}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13678909,"byte_end":13678912,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13678841,"byte_end":13678897,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13679260,"byte_end":13679273,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13679144,"byte_end":13679226,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13679231,"byte_end":13679248,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13679987,"byte_end":13679994,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13679700,"byte_end":13679763,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13679768,"byte_end":13679785,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13679790,"byte_end":13679793,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13679798,"byte_end":13679873,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13679878,"byte_end":13679948,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13679953,"byte_end":13679975,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680342,"byte_end":13680349,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680047,"byte_end":13680118,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680123,"byte_end":13680140,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680145,"byte_end":13680148,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680153,"byte_end":13680228,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680233,"byte_end":13680303,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680308,"byte_end":13680330,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680716,"byte_end":13680727,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680414,"byte_end":13680492,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680497,"byte_end":13680514,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680519,"byte_end":13680522,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680527,"byte_end":13680602,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680607,"byte_end":13680677,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680682,"byte_end":13680704,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13681092,"byte_end":13681102,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680823,"byte_end":13680890,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680895,"byte_end":13680898,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680903,"byte_end":13680978,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13680983,"byte_end":13681053,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13681058,"byte_end":13681080,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13681214,"byte_end":13681221,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13681152,"byte_end":13681202,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13681344,"byte_end":13681355,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13681274,"byte_end":13681332,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13681475,"byte_end":13681486,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13681420,"byte_end":13681463,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13681616,"byte_end":13681631,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13681553,"byte_end":13681604,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1404},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13683732,"byte_end":13683743,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1407}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13683950,"byte_end":13683953,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13683881,"byte_end":13683938,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13684511,"byte_end":13684518,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13684223,"byte_end":13684286,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13684291,"byte_end":13684309,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13684314,"byte_end":13684317,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13684322,"byte_end":13684397,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13684402,"byte_end":13684472,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13684477,"byte_end":13684499,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13684867,"byte_end":13684874,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13684571,"byte_end":13684642,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13684647,"byte_end":13684665,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13684670,"byte_end":13684673,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13684678,"byte_end":13684753,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13684758,"byte_end":13684828,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13684833,"byte_end":13684855,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13685242,"byte_end":13685253,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13684939,"byte_end":13685017,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13685022,"byte_end":13685040,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13685045,"byte_end":13685048,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13685053,"byte_end":13685128,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13685133,"byte_end":13685203,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13685208,"byte_end":13685230,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13685619,"byte_end":13685629,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13685349,"byte_end":13685417,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13685422,"byte_end":13685425,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13685430,"byte_end":13685505,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13685510,"byte_end":13685580,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13685585,"byte_end":13685607,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13685741,"byte_end":13685748,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13685679,"byte_end":13685729,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13685871,"byte_end":13685882,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13685801,"byte_end":13685859,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13686003,"byte_end":13686015,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13685947,"byte_end":13685991,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13686146,"byte_end":13686162,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13686082,"byte_end":13686134,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":1218},{"krate":0,"index":1225},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":994},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":996},{"krate":0,"index":1003},{"krate":0,"index":1007},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13687689,"byte_end":13687741,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13687742,"byte_end":13687745,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13687746,"byte_end":13687816,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13687817,"byte_end":13687875,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13687876,"byte_end":13687948,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13687949,"byte_end":13688019,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688020,"byte_end":13688087,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688088,"byte_end":13688091,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688092,"byte_end":13688113,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688114,"byte_end":13688117,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688118,"byte_end":13688193,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688194,"byte_end":13688265,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688266,"byte_end":13688337,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688338,"byte_end":13688408,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688409,"byte_end":13688449,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688450,"byte_end":13688453,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688454,"byte_end":13688461,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688462,"byte_end":13688505,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688506,"byte_end":13688564,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688565,"byte_end":13688568,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688569,"byte_end":13688624,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688625,"byte_end":13688667,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688668,"byte_end":13688673,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688674,"byte_end":13688726,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688727,"byte_end":13688732,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688733,"byte_end":13688755,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688756,"byte_end":13688763,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688764,"byte_end":13688767,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688768,"byte_end":13688840,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688841,"byte_end":13688912,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688913,"byte_end":13688932,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688933,"byte_end":13688936,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688937,"byte_end":13688948,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688949,"byte_end":13688998,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13688999,"byte_end":13689048,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689049,"byte_end":13689098,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689099,"byte_end":13689106,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689107,"byte_end":13689110,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689111,"byte_end":13689149,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689150,"byte_end":13689153,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689154,"byte_end":13689161,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689162,"byte_end":13689205,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689206,"byte_end":13689264,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689265,"byte_end":13689268,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689269,"byte_end":13689294,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689295,"byte_end":13689316,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689317,"byte_end":13689320,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689321,"byte_end":13689397,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689398,"byte_end":13689407,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689408,"byte_end":13689450,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689451,"byte_end":13689456,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689457,"byte_end":13689530,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689531,"byte_end":13689578,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689579,"byte_end":13689582,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689583,"byte_end":13689620,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689621,"byte_end":13689635,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689636,"byte_end":13689641,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689642,"byte_end":13689649,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689650,"byte_end":13689653,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689654,"byte_end":13689696,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689697,"byte_end":13689700,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689701,"byte_end":13689712,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689713,"byte_end":13689752,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689753,"byte_end":13689792,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689793,"byte_end":13689832,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689833,"byte_end":13689840,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689841,"byte_end":13689844,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689845,"byte_end":13689859,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689860,"byte_end":13689863,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689864,"byte_end":13689939,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13689940,"byte_end":13690013,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690014,"byte_end":13690080,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690081,"byte_end":13690150,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690151,"byte_end":13690216,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690217,"byte_end":13690220,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690221,"byte_end":13690237,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690238,"byte_end":13690241,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690242,"byte_end":13690318,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690319,"byte_end":13690360,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690361,"byte_end":13690364,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690365,"byte_end":13690372,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690373,"byte_end":13690404,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690405,"byte_end":13690455,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690456,"byte_end":13690497,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690498,"byte_end":13690533,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690534,"byte_end":13690582,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690583,"byte_end":13690614,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690615,"byte_end":13690663,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690664,"byte_end":13690713,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690714,"byte_end":13690736,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690737,"byte_end":13690744,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690745,"byte_end":13690767,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690768,"byte_end":13690775,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690776,"byte_end":13690779,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690780,"byte_end":13690828,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690829,"byte_end":13690832,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690833,"byte_end":13690844,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690845,"byte_end":13690897,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690898,"byte_end":13690963,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13690964,"byte_end":13691029,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691030,"byte_end":13691095,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691096,"byte_end":13691103,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691104,"byte_end":13691107,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691108,"byte_end":13691184,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691185,"byte_end":13691259,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691260,"byte_end":13691332,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691333,"byte_end":13691409,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691410,"byte_end":13691452,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691453,"byte_end":13691456,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691457,"byte_end":13691473,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691474,"byte_end":13691477,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691478,"byte_end":13691553,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691554,"byte_end":13691595,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691596,"byte_end":13691599,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691600,"byte_end":13691607,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691608,"byte_end":13691639,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691640,"byte_end":13691690,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691691,"byte_end":13691732,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691733,"byte_end":13691768,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691769,"byte_end":13691817,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691818,"byte_end":13691849,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691850,"byte_end":13691898,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691899,"byte_end":13691958,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691959,"byte_end":13691981,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691982,"byte_end":13691989,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13691990,"byte_end":13692012,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692013,"byte_end":13692020,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692021,"byte_end":13692024,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692025,"byte_end":13692073,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692074,"byte_end":13692077,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692078,"byte_end":13692089,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692090,"byte_end":13692139,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692140,"byte_end":13692194,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692195,"byte_end":13692249,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692250,"byte_end":13692304,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692305,"byte_end":13692312,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692313,"byte_end":13692316,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692317,"byte_end":13692390,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692391,"byte_end":13692458,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692459,"byte_end":13692462,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692463,"byte_end":13692479,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692480,"byte_end":13692483,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692484,"byte_end":13692560,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692561,"byte_end":13692633,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692634,"byte_end":13692673,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692674,"byte_end":13692677,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692678,"byte_end":13692685,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692686,"byte_end":13692717,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692718,"byte_end":13692768,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692769,"byte_end":13692810,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692811,"byte_end":13692846,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692847,"byte_end":13692895,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692896,"byte_end":13692927,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692928,"byte_end":13692975,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692976,"byte_end":13692996,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13692997,"byte_end":13693019,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693020,"byte_end":13693027,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693028,"byte_end":13693050,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693051,"byte_end":13693058,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693059,"byte_end":13693062,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693063,"byte_end":13693111,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693112,"byte_end":13693115,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693116,"byte_end":13693127,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693128,"byte_end":13693180,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693181,"byte_end":13693246,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693247,"byte_end":13693312,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693313,"byte_end":13693378,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693379,"byte_end":13693386,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693387,"byte_end":13693390,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693391,"byte_end":13693463,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693464,"byte_end":13693539,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693540,"byte_end":13693612,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693613,"byte_end":13693689,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693690,"byte_end":13693763,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693764,"byte_end":13693767,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693768,"byte_end":13693784,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693785,"byte_end":13693788,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693789,"byte_end":13693863,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693864,"byte_end":13693931,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693932,"byte_end":13693935,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693936,"byte_end":13693943,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693944,"byte_end":13693975,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13693976,"byte_end":13694026,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694027,"byte_end":13694068,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694069,"byte_end":13694104,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694105,"byte_end":13694153,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694154,"byte_end":13694185,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694186,"byte_end":13694234,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694235,"byte_end":13694255,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694256,"byte_end":13694278,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694279,"byte_end":13694286,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694287,"byte_end":13694309,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694310,"byte_end":13694317,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694318,"byte_end":13694321,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694322,"byte_end":13694370,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694371,"byte_end":13694374,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694375,"byte_end":13694386,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694387,"byte_end":13694413,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694414,"byte_end":13694459,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694460,"byte_end":13694505,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694506,"byte_end":13694551,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694552,"byte_end":13694555,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694556,"byte_end":13694584,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694585,"byte_end":13694630,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694631,"byte_end":13694676,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694677,"byte_end":13694722,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694723,"byte_end":13694730,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694731,"byte_end":13694734,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694735,"byte_end":13694807,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694808,"byte_end":13694884,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694885,"byte_end":13694955,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13694956,"byte_end":13695025,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695026,"byte_end":13695063,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695064,"byte_end":13695067,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695068,"byte_end":13695142,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695143,"byte_end":13695197,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695198,"byte_end":13695201,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695202,"byte_end":13695218,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695219,"byte_end":13695222,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695223,"byte_end":13695296,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695297,"byte_end":13695373,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695374,"byte_end":13695448,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695449,"byte_end":13695462,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695463,"byte_end":13695466,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695467,"byte_end":13695474,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695475,"byte_end":13695506,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695507,"byte_end":13695557,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695558,"byte_end":13695599,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695600,"byte_end":13695635,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695636,"byte_end":13695685,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695686,"byte_end":13695717,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695718,"byte_end":13695766,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695767,"byte_end":13695811,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695812,"byte_end":13695834,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695835,"byte_end":13695842,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695843,"byte_end":13695865,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695866,"byte_end":13695873,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695874,"byte_end":13695877,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695878,"byte_end":13695926,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695927,"byte_end":13695930,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695931,"byte_end":13695942,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695943,"byte_end":13695969,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13695970,"byte_end":13696020,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696021,"byte_end":13696071,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696072,"byte_end":13696122,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696123,"byte_end":13696126,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696127,"byte_end":13696147,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696148,"byte_end":13696178,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696179,"byte_end":13696209,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696210,"byte_end":13696240,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696241,"byte_end":13696248,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696249,"byte_end":13696252,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696253,"byte_end":13696326,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696327,"byte_end":13696402,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696403,"byte_end":13696475,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696476,"byte_end":13696514,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696515,"byte_end":13696518,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696519,"byte_end":13696593,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696594,"byte_end":13696670,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696671,"byte_end":13696744,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696745,"byte_end":13696773,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696774,"byte_end":13696777,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696778,"byte_end":13696794,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696795,"byte_end":13696798,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696799,"byte_end":13696872,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696873,"byte_end":13696949,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13696950,"byte_end":13697024,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697025,"byte_end":13697097,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697098,"byte_end":13697109,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697110,"byte_end":13697113,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697114,"byte_end":13697121,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697122,"byte_end":13697153,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697154,"byte_end":13697204,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697205,"byte_end":13697246,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697247,"byte_end":13697282,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697283,"byte_end":13697332,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697333,"byte_end":13697364,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697365,"byte_end":13697430,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697431,"byte_end":13697451,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697452,"byte_end":13697474,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697475,"byte_end":13697482,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697483,"byte_end":13697490,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697491,"byte_end":13697494,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697495,"byte_end":13697543,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697544,"byte_end":13697547,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697548,"byte_end":13697559,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697560,"byte_end":13697586,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697587,"byte_end":13697637,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697638,"byte_end":13697688,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697689,"byte_end":13697739,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697740,"byte_end":13697743,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697744,"byte_end":13697764,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697765,"byte_end":13697795,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697796,"byte_end":13697826,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697827,"byte_end":13697857,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697858,"byte_end":13697865,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697866,"byte_end":13697869,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697870,"byte_end":13697943,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13697944,"byte_end":13698018,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698019,"byte_end":13698093,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698094,"byte_end":13698167,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698168,"byte_end":13698244,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698245,"byte_end":13698278,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698279,"byte_end":13698282,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698283,"byte_end":13698299,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698300,"byte_end":13698303,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698304,"byte_end":13698378,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698379,"byte_end":13698446,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698447,"byte_end":13698450,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698451,"byte_end":13698458,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698459,"byte_end":13698490,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698491,"byte_end":13698541,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698542,"byte_end":13698583,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698584,"byte_end":13698619,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698620,"byte_end":13698668,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698669,"byte_end":13698700,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698701,"byte_end":13698748,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698749,"byte_end":13698795,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698796,"byte_end":13698818,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698819,"byte_end":13698826,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698827,"byte_end":13698849,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698850,"byte_end":13698857,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698858,"byte_end":13698861,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698862,"byte_end":13698910,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698911,"byte_end":13698914,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698915,"byte_end":13698926,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698927,"byte_end":13698983,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13698984,"byte_end":13699045,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699046,"byte_end":13699107,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699108,"byte_end":13699169,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699170,"byte_end":13699177,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699178,"byte_end":13699181,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699182,"byte_end":13699256,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699257,"byte_end":13699277,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699278,"byte_end":13699281,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699282,"byte_end":13699296,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699297,"byte_end":13699300,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699301,"byte_end":13699376,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699377,"byte_end":13699449,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699450,"byte_end":13699518,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699519,"byte_end":13699595,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699596,"byte_end":13699637,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699638,"byte_end":13699641,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699642,"byte_end":13699712,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699713,"byte_end":13699731,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699732,"byte_end":13699735,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699736,"byte_end":13699743,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699744,"byte_end":13699776,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699777,"byte_end":13699827,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699828,"byte_end":13699872,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699873,"byte_end":13699886,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699887,"byte_end":13699922,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699923,"byte_end":13699954,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699955,"byte_end":13699978,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699979,"byte_end":13699986,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13699987,"byte_end":13700009,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700010,"byte_end":13700017,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700018,"byte_end":13700021,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700022,"byte_end":13700072,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700073,"byte_end":13700076,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700077,"byte_end":13700088,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700089,"byte_end":13700122,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700123,"byte_end":13700156,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700157,"byte_end":13700190,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700191,"byte_end":13700198,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700199,"byte_end":13700202,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700203,"byte_end":13700272,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700273,"byte_end":13700310,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700311,"byte_end":13700350,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700351,"byte_end":13700396,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700397,"byte_end":13700444,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700445,"byte_end":13700475,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700476,"byte_end":13700509,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13701071,"byte_end":13701078,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700753,"byte_end":13700808,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700809,"byte_end":13700812,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700813,"byte_end":13700888,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700889,"byte_end":13700969,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13700970,"byte_end":13701029,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13701749,"byte_end":13701774,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":995}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13701664,"byte_end":13701737,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13702119,"byte_end":13702139,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13701795,"byte_end":13701869,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13701870,"byte_end":13701873,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13701874,"byte_end":13701953,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13701954,"byte_end":13701997,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13701998,"byte_end":13702001,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13702002,"byte_end":13702055,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13702056,"byte_end":13702059,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13702060,"byte_end":13702090,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13702483,"byte_end":13702486,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13702392,"byte_end":13702471,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13702713,"byte_end":13702720,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13702610,"byte_end":13702685,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13702690,"byte_end":13702701,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13702942,"byte_end":13702958,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13702770,"byte_end":13702811,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13702816,"byte_end":13702819,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13702824,"byte_end":13702897,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13702902,"byte_end":13702930,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13703379,"byte_end":13703399,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13703023,"byte_end":13703057,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13703062,"byte_end":13703065,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13703070,"byte_end":13703140,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13703145,"byte_end":13703220,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13703225,"byte_end":13703297,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13703302,"byte_end":13703367,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708654,"byte_end":13708657,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708112,"byte_end":13708187,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708192,"byte_end":13708203,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708208,"byte_end":13708211,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708216,"byte_end":13708230,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708235,"byte_end":13708238,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708243,"byte_end":13708250,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708255,"byte_end":13708286,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708291,"byte_end":13708339,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708344,"byte_end":13708347,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708352,"byte_end":13708393,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708398,"byte_end":13708433,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708438,"byte_end":13708469,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708474,"byte_end":13708505,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708510,"byte_end":13708539,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708544,"byte_end":13708564,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708569,"byte_end":13708591,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708596,"byte_end":13708603,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708608,"byte_end":13708630,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708635,"byte_end":13708642,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709842,"byte_end":13709852,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709321,"byte_end":13709370,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709375,"byte_end":13709378,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709383,"byte_end":13709415,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709420,"byte_end":13709423,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709428,"byte_end":13709496,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709501,"byte_end":13709504,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709509,"byte_end":13709523,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709528,"byte_end":13709531,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709536,"byte_end":13709543,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709548,"byte_end":13709579,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709584,"byte_end":13709632,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709637,"byte_end":13709640,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709645,"byte_end":13709686,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709691,"byte_end":13709726,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709731,"byte_end":13709752,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709757,"byte_end":13709779,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709784,"byte_end":13709791,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709796,"byte_end":13709818,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709823,"byte_end":13709830,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710484,"byte_end":13710497,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13709951,"byte_end":13710003,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710008,"byte_end":13710011,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710016,"byte_end":13710054,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710059,"byte_end":13710062,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710067,"byte_end":13710135,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710140,"byte_end":13710143,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710148,"byte_end":13710162,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710167,"byte_end":13710170,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710175,"byte_end":13710182,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710187,"byte_end":13710218,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710223,"byte_end":13710271,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710276,"byte_end":13710279,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710284,"byte_end":13710325,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710330,"byte_end":13710365,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710370,"byte_end":13710394,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710399,"byte_end":13710421,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710426,"byte_end":13710433,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710438,"byte_end":13710460,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710465,"byte_end":13710472,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711130,"byte_end":13711143,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710597,"byte_end":13710649,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710654,"byte_end":13710657,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710662,"byte_end":13710700,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710705,"byte_end":13710708,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710713,"byte_end":13710781,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710786,"byte_end":13710789,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710794,"byte_end":13710808,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710813,"byte_end":13710816,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710821,"byte_end":13710828,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710833,"byte_end":13710864,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710869,"byte_end":13710917,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710922,"byte_end":13710925,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710930,"byte_end":13710971,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13710976,"byte_end":13711011,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711016,"byte_end":13711040,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711045,"byte_end":13711067,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711072,"byte_end":13711079,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711084,"byte_end":13711106,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711111,"byte_end":13711118,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712224,"byte_end":13712240,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711312,"byte_end":13711341,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711346,"byte_end":13711349,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711354,"byte_end":13711426,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711431,"byte_end":13711456,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711461,"byte_end":13711464,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711469,"byte_end":13711541,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711546,"byte_end":13711615,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711620,"byte_end":13711693,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711698,"byte_end":13711710,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711715,"byte_end":13711718,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711723,"byte_end":13711798,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711803,"byte_end":13711864,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711869,"byte_end":13711872,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711877,"byte_end":13711891,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711896,"byte_end":13711899,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711904,"byte_end":13711911,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711916,"byte_end":13711947,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13711952,"byte_end":13712000,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712005,"byte_end":13712008,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712013,"byte_end":13712054,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712059,"byte_end":13712094,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712099,"byte_end":13712134,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712139,"byte_end":13712161,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712166,"byte_end":13712173,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712178,"byte_end":13712200,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712205,"byte_end":13712212,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712901,"byte_end":13712920,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712337,"byte_end":13712400,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712405,"byte_end":13712408,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712413,"byte_end":13712464,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712469,"byte_end":13712472,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712477,"byte_end":13712545,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712550,"byte_end":13712553,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712558,"byte_end":13712572,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712577,"byte_end":13712580,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712585,"byte_end":13712592,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712597,"byte_end":13712628,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712633,"byte_end":13712681,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712686,"byte_end":13712689,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712694,"byte_end":13712735,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712740,"byte_end":13712775,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712780,"byte_end":13712811,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712816,"byte_end":13712838,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712843,"byte_end":13712850,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712855,"byte_end":13712877,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13712882,"byte_end":13712889,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713579,"byte_end":13713598,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713089,"byte_end":13713155,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713160,"byte_end":13713163,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713168,"byte_end":13713223,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713228,"byte_end":13713231,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713236,"byte_end":13713250,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713255,"byte_end":13713258,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713263,"byte_end":13713270,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713275,"byte_end":13713306,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713311,"byte_end":13713359,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713364,"byte_end":13713367,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713372,"byte_end":13713413,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713418,"byte_end":13713453,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713458,"byte_end":13713489,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713494,"byte_end":13713516,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713521,"byte_end":13713528,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713533,"byte_end":13713555,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713560,"byte_end":13713567,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714152,"byte_end":13714169,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713701,"byte_end":13713774,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713779,"byte_end":13713797,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713802,"byte_end":13713805,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713810,"byte_end":13713824,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713829,"byte_end":13713832,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713837,"byte_end":13713844,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713849,"byte_end":13713880,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713885,"byte_end":13713933,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713938,"byte_end":13713941,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713946,"byte_end":13713987,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13713992,"byte_end":13714027,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714032,"byte_end":13714062,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714067,"byte_end":13714089,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714094,"byte_end":13714101,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714106,"byte_end":13714128,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714133,"byte_end":13714140,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714819,"byte_end":13714827,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714270,"byte_end":13714333,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714338,"byte_end":13714341,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714346,"byte_end":13714407,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714412,"byte_end":13714415,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714420,"byte_end":13714474,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714479,"byte_end":13714482,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714487,"byte_end":13714501,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714506,"byte_end":13714509,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714514,"byte_end":13714521,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714526,"byte_end":13714557,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714562,"byte_end":13714610,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714615,"byte_end":13714618,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714623,"byte_end":13714664,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714669,"byte_end":13714704,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714709,"byte_end":13714729,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714734,"byte_end":13714756,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714761,"byte_end":13714768,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714773,"byte_end":13714795,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714800,"byte_end":13714807,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715347,"byte_end":13715356,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714925,"byte_end":13714988,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13714993,"byte_end":13714996,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715001,"byte_end":13715015,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715020,"byte_end":13715023,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715028,"byte_end":13715035,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715040,"byte_end":13715088,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715093,"byte_end":13715114,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715119,"byte_end":13715154,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715159,"byte_end":13715190,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715195,"byte_end":13715226,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715231,"byte_end":13715260,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715265,"byte_end":13715285,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715290,"byte_end":13715311,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715316,"byte_end":13715323,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715328,"byte_end":13715335,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716012,"byte_end":13716020,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715508,"byte_end":13715561,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715566,"byte_end":13715569,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715574,"byte_end":13715588,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715593,"byte_end":13715596,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715601,"byte_end":13715608,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715613,"byte_end":13715644,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715649,"byte_end":13715697,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715702,"byte_end":13715705,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715710,"byte_end":13715751,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715756,"byte_end":13715791,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715796,"byte_end":13715827,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715832,"byte_end":13715863,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715868,"byte_end":13715897,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715902,"byte_end":13715922,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715927,"byte_end":13715949,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715954,"byte_end":13715961,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715966,"byte_end":13715988,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13715993,"byte_end":13716000,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716593,"byte_end":13716602,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716184,"byte_end":13716238,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716243,"byte_end":13716246,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716251,"byte_end":13716265,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716270,"byte_end":13716273,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716278,"byte_end":13716285,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716290,"byte_end":13716322,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716327,"byte_end":13716377,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716382,"byte_end":13716426,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716431,"byte_end":13716466,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716471,"byte_end":13716502,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716507,"byte_end":13716530,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716535,"byte_end":13716542,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716547,"byte_end":13716569,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716574,"byte_end":13716581,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13717211,"byte_end":13717221,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716763,"byte_end":13716812,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716817,"byte_end":13716820,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716825,"byte_end":13716839,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716844,"byte_end":13716847,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716852,"byte_end":13716859,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716864,"byte_end":13716909,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716914,"byte_end":13716964,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13716969,"byte_end":13717025,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13717030,"byte_end":13717043,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13717048,"byte_end":13717083,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13717088,"byte_end":13717119,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13717124,"byte_end":13717148,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13717153,"byte_end":13717160,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13717165,"byte_end":13717187,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13717192,"byte_end":13717199,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13718600,"byte_end":13718610,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13718357,"byte_end":13718444,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13718445,"byte_end":13718448,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13718449,"byte_end":13718487,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13718488,"byte_end":13718526,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13719710,"byte_end":13719713,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13719291,"byte_end":13719351,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13719356,"byte_end":13719359,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13719364,"byte_end":13719374,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13719379,"byte_end":13719382,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13719387,"byte_end":13719459,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13719464,"byte_end":13719537,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13719542,"byte_end":13719609,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13719614,"byte_end":13719617,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13719622,"byte_end":13719698,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13720844,"byte_end":13720863,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13719871,"byte_end":13719931,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13719936,"byte_end":13719939,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13719944,"byte_end":13720007,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13720012,"byte_end":13720090,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13720095,"byte_end":13720162,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13720167,"byte_end":13720239,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13720244,"byte_end":13720314,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13720319,"byte_end":13720342,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13720347,"byte_end":13720350,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13720355,"byte_end":13720365,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13720370,"byte_end":13720373,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13720378,"byte_end":13720453,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13720458,"byte_end":13720531,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13720536,"byte_end":13720612,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13720617,"byte_end":13720690,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13720695,"byte_end":13720765,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13720770,"byte_end":13720773,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13720778,"byte_end":13720832,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13721429,"byte_end":13721439,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13720991,"byte_end":13721041,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13721046,"byte_end":13721049,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13721054,"byte_end":13721061,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13721066,"byte_end":13721085,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13721090,"byte_end":13721128,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13721133,"byte_end":13721136,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13721141,"byte_end":13721175,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13721180,"byte_end":13721227,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13721232,"byte_end":13721239,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13721244,"byte_end":13721251,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13721256,"byte_end":13721294,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13721299,"byte_end":13721302,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13721307,"byte_end":13721360,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13721365,"byte_end":13721405,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13721410,"byte_end":13721417,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13725764,"byte_end":13725785,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13725718,"byte_end":13725759,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13725820,"byte_end":13725822,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13725791,"byte_end":13725815,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13725696,"byte_end":13725711,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1271}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13725614,"byte_end":13725669,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727744,"byte_end":13727761,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13726558,"byte_end":13726699,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13726700,"byte_end":13726703,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13726704,"byte_end":13726742,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13726743,"byte_end":13726781,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13726782,"byte_end":13726785,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13726786,"byte_end":13726799,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13726800,"byte_end":13726867,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13726868,"byte_end":13726871,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13726872,"byte_end":13726905,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13726906,"byte_end":13726935,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13726936,"byte_end":13726939,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13726940,"byte_end":13726947,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13726948,"byte_end":13727004,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727005,"byte_end":13727039,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727040,"byte_end":13727043,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727044,"byte_end":13727049,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727050,"byte_end":13727097,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727098,"byte_end":13727151,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727152,"byte_end":13727229,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727230,"byte_end":13727265,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727266,"byte_end":13727287,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727288,"byte_end":13727338,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727339,"byte_end":13727402,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727403,"byte_end":13727466,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727467,"byte_end":13727530,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727531,"byte_end":13727587,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727588,"byte_end":13727637,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727638,"byte_end":13727650,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727651,"byte_end":13727658,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727659,"byte_end":13727666,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13727667,"byte_end":13727670,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13729096,"byte_end":13729099,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13728654,"byte_end":13728722,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13728727,"byte_end":13728730,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13728735,"byte_end":13728745,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13728750,"byte_end":13728753,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13728758,"byte_end":13728837,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13728842,"byte_end":13728916,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13728921,"byte_end":13728988,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13728993,"byte_end":13728996,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13729001,"byte_end":13729084,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730410,"byte_end":13730429,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13729379,"byte_end":13729447,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13729452,"byte_end":13729455,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13729460,"byte_end":13729530,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13729535,"byte_end":13729621,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13729626,"byte_end":13729696,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13729701,"byte_end":13729778,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13729783,"byte_end":13729853,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13729858,"byte_end":13729881,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13729886,"byte_end":13729889,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13729894,"byte_end":13729904,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13729909,"byte_end":13729912,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13729917,"byte_end":13729999,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730004,"byte_end":13730077,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730082,"byte_end":13730159,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730164,"byte_end":13730237,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730242,"byte_end":13730317,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730322,"byte_end":13730325,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730330,"byte_end":13730398,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13731217,"byte_end":13731227,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730686,"byte_end":13730737,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730742,"byte_end":13730745,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730750,"byte_end":13730757,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730762,"byte_end":13730781,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730786,"byte_end":13730831,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730836,"byte_end":13730839,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730844,"byte_end":13730916,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730921,"byte_end":13730968,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730973,"byte_end":13730980,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730985,"byte_end":13730992,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13730997,"byte_end":13731042,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13731047,"byte_end":13731050,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13731055,"byte_end":13731148,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13731153,"byte_end":13731193,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13731198,"byte_end":13731205,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13735322,"byte_end":13735344,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13735275,"byte_end":13735317,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13735380,"byte_end":13735382,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13735350,"byte_end":13735375,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13735246,"byte_end":13735268,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1303}],"decl_id":null,"docs":" An error occured while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a chunk.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13735163,"byte_end":13735219,"line_start":237,"line_end":237,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":186},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":375}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6616,"byte_end":6646,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8580,"byte_end":8597,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":52}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7362,"byte_end":7439,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7440,"byte_end":7450,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7451,"byte_end":7454,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7455,"byte_end":7520,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7521,"byte_end":7595,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7596,"byte_end":7599,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7600,"byte_end":7683,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7684,"byte_end":7687,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7688,"byte_end":7702,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7703,"byte_end":7706,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7707,"byte_end":7720,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7721,"byte_end":7743,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7744,"byte_end":7784,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7785,"byte_end":7788,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7789,"byte_end":7807,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7808,"byte_end":7829,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7830,"byte_end":7875,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7876,"byte_end":7917,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7918,"byte_end":7921,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7922,"byte_end":7973,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7974,"byte_end":8037,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8038,"byte_end":8059,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8060,"byte_end":8109,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8110,"byte_end":8156,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8157,"byte_end":8178,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8179,"byte_end":8196,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8197,"byte_end":8278,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8279,"byte_end":8301,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8302,"byte_end":8319,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8320,"byte_end":8333,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8334,"byte_end":8345,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8346,"byte_end":8349,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8350,"byte_end":8383,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8384,"byte_end":8459,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8460,"byte_end":8487,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8488,"byte_end":8499,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8500,"byte_end":8503,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8504,"byte_end":8554,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8555,"byte_end":8560,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8561,"byte_end":8568,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9017,"byte_end":9042,"line_start":66,"line_end":66,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8864,"byte_end":8938,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8939,"byte_end":8956,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8957,"byte_end":9005,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11550,"byte_end":11553,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11475,"byte_end":11538,"line_start":139,"line_end":139,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13606,"byte_end":13617,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12343,"byte_end":12414,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12419,"byte_end":12452,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12457,"byte_end":12460,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12465,"byte_end":12536,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12541,"byte_end":12573,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12578,"byte_end":12581,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12586,"byte_end":12600,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12605,"byte_end":12608,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12613,"byte_end":12626,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12631,"byte_end":12653,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12658,"byte_end":12698,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12703,"byte_end":12706,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12711,"byte_end":12729,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12734,"byte_end":12755,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12760,"byte_end":12805,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12810,"byte_end":12856,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12861,"byte_end":12864,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12869,"byte_end":12920,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12925,"byte_end":12988,"line_start":182,"line_end":182,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12993,"byte_end":13014,"line_start":183,"line_end":183,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13019,"byte_end":13067,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13072,"byte_end":13118,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13123,"byte_end":13144,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13149,"byte_end":13166,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13171,"byte_end":13252,"line_start":188,"line_end":188,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13257,"byte_end":13279,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13284,"byte_end":13301,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13306,"byte_end":13319,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13324,"byte_end":13335,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13340,"byte_end":13343,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13348,"byte_end":13381,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13386,"byte_end":13461,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13466,"byte_end":13493,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13498,"byte_end":13509,"line_start":197,"line_end":197,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13514,"byte_end":13517,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13522,"byte_end":13572,"line_start":199,"line_end":199,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13577,"byte_end":13582,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13587,"byte_end":13594,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16192,"byte_end":16198,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16003,"byte_end":16075,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16080,"byte_end":16100,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16105,"byte_end":16108,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16113,"byte_end":16180,"line_start":259,"line_end":259,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16326,"byte_end":16338,"line_start":265,"line_end":265,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16250,"byte_end":16314,"line_start":264,"line_end":264,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16489,"byte_end":16498,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16403,"byte_end":16477,"line_start":269,"line_end":269,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70044,"byte_end":70054,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":69906,"byte_end":69963,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":69964,"byte_end":69967,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":69968,"byte_end":70015,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70777,"byte_end":70780,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70735,"byte_end":70765,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71495,"byte_end":71505,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70983,"byte_end":71012,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71017,"byte_end":71020,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71025,"byte_end":71101,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71106,"byte_end":71175,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71180,"byte_end":71198,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71203,"byte_end":71206,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71211,"byte_end":71282,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71287,"byte_end":71360,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71365,"byte_end":71439,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71444,"byte_end":71483,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73026,"byte_end":73040,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71929,"byte_end":72010,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72015,"byte_end":72061,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72066,"byte_end":72069,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72074,"byte_end":72122,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72127,"byte_end":72130,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72135,"byte_end":72219,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72224,"byte_end":72283,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72288,"byte_end":72373,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72378,"byte_end":72397,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72402,"byte_end":72481,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72486,"byte_end":72489,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72494,"byte_end":72569,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72574,"byte_end":72650,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72655,"byte_end":72710,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72715,"byte_end":72789,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72794,"byte_end":72867,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72872,"byte_end":72906,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72911,"byte_end":72914,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72919,"byte_end":72995,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73000,"byte_end":73014,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73674,"byte_end":73682,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73426,"byte_end":73491,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73496,"byte_end":73499,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73504,"byte_end":73577,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73582,"byte_end":73592,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73597,"byte_end":73600,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73605,"byte_end":73662,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73794,"byte_end":73803,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73736,"byte_end":73782,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74144,"byte_end":74155,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73945,"byte_end":73979,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73984,"byte_end":73987,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73992,"byte_end":74065,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74070,"byte_end":74132,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74460,"byte_end":74469,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74260,"byte_end":74295,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74300,"byte_end":74303,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74308,"byte_end":74381,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74386,"byte_end":74448,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75169,"byte_end":75186,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74620,"byte_end":74689,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74694,"byte_end":74697,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74702,"byte_end":74772,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74777,"byte_end":74850,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74855,"byte_end":74901,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74906,"byte_end":74909,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74914,"byte_end":74989,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74994,"byte_end":75068,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75073,"byte_end":75099,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75104,"byte_end":75107,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75112,"byte_end":75157,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75352,"byte_end":75362,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75239,"byte_end":75286,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75291,"byte_end":75294,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75299,"byte_end":75340,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":77874,"byte_end":77887,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":77743,"byte_end":77816,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":77817,"byte_end":77820,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":77821,"byte_end":77862,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78081,"byte_end":78084,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78036,"byte_end":78069,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78248,"byte_end":78253,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78211,"byte_end":78236,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78359,"byte_end":78370,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78305,"byte_end":78347,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78485,"byte_end":78495,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78440,"byte_end":78473,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":79229,"byte_end":79241,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78556,"byte_end":78604,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78609,"byte_end":78612,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78617,"byte_end":78658,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78663,"byte_end":78666,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78671,"byte_end":78733,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78738,"byte_end":78798,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78803,"byte_end":78863,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78868,"byte_end":78871,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78876,"byte_end":78951,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78956,"byte_end":79024,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":79029,"byte_end":79105,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":79110,"byte_end":79178,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":79183,"byte_end":79217,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80669,"byte_end":80686,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80385,"byte_end":80437,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80442,"byte_end":80445,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80450,"byte_end":80526,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80531,"byte_end":80565,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80570,"byte_end":80573,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80578,"byte_end":80657,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81146,"byte_end":81157,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80759,"byte_end":80801,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80806,"byte_end":80809,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80814,"byte_end":80887,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80892,"byte_end":80932,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80937,"byte_end":80940,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80945,"byte_end":81015,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81020,"byte_end":81054,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81059,"byte_end":81062,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81067,"byte_end":81134,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82300,"byte_end":82317,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":345}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82100,"byte_end":82157,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82158,"byte_end":82161,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82162,"byte_end":82229,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82230,"byte_end":82288,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82495,"byte_end":82498,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82412,"byte_end":82483,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83079,"byte_end":83082,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82864,"byte_end":82916,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82921,"byte_end":82924,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82929,"byte_end":83001,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83006,"byte_end":83067,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83525,"byte_end":83532,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83284,"byte_end":83336,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83341,"byte_end":83344,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83349,"byte_end":83422,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83427,"byte_end":83497,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83502,"byte_end":83513,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85372,"byte_end":85379,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85308,"byte_end":85360,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85665,"byte_end":85669,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85610,"byte_end":85653,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":1387},{"krate":0,"index":1396},{"krate":0,"index":1400},{"krate":0,"index":416},{"krate":0,"index":422},{"krate":0,"index":426},{"krate":0,"index":431},{"krate":0,"index":436},{"krate":0,"index":442}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":86782,"byte_end":86817,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1390},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88764,"byte_end":88768,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88777,"byte_end":88782,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1387},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88745,"byte_end":88751,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1393}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":86994,"byte_end":87100,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87101,"byte_end":87104,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87105,"byte_end":87195,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87196,"byte_end":87199,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87200,"byte_end":87235,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87236,"byte_end":87239,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87240,"byte_end":87253,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87254,"byte_end":87257,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87258,"byte_end":87295,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87296,"byte_end":87299,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87300,"byte_end":87319,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87320,"byte_end":87362,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87363,"byte_end":87413,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87414,"byte_end":87465,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87466,"byte_end":87484,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87485,"byte_end":87506,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87507,"byte_end":87549,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87550,"byte_end":87583,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87584,"byte_end":87600,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87601,"byte_end":87695,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87696,"byte_end":87706,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87707,"byte_end":87710,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87711,"byte_end":87758,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87759,"byte_end":87764,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87765,"byte_end":87772,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87773,"byte_end":87776,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87977,"byte_end":87980,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87981,"byte_end":88067,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88068,"byte_end":88078,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88079,"byte_end":88082,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88083,"byte_end":88090,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88091,"byte_end":88126,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88127,"byte_end":88169,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88170,"byte_end":88220,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88221,"byte_end":88272,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88273,"byte_end":88276,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88277,"byte_end":88295,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88296,"byte_end":88317,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88318,"byte_end":88360,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88361,"byte_end":88408,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88409,"byte_end":88425,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88426,"byte_end":88475,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88476,"byte_end":88486,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88487,"byte_end":88490,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88491,"byte_end":88524,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88525,"byte_end":88565,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88566,"byte_end":88598,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88599,"byte_end":88604,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88605,"byte_end":88612,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88613,"byte_end":88635,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13646080,"byte_end":13646090,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13646241,"byte_end":13646251,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13646578,"byte_end":13646588,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13656766,"byte_end":13656775,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13656975,"byte_end":13656985,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13657136,"byte_end":13657145,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13657468,"byte_end":13657478,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13657724,"byte_end":13657732,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13657829,"byte_end":13657837,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13657948,"byte_end":13657956,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13658056,"byte_end":13658064,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13658174,"byte_end":13658184,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13663766,"byte_end":13663776,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13666612,"byte_end":13666618,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13670430,"byte_end":13670436,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13675751,"byte_end":13675757,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13676073,"byte_end":13676079,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13676794,"byte_end":13676800,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677840,"byte_end":13677851,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13678778,"byte_end":13678788,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13679677,"byte_end":13679687,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13681784,"byte_end":13681794,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13682107,"byte_end":13682117,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13682843,"byte_end":13682853,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13683832,"byte_end":13683843,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13684199,"byte_end":13684210,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13686319,"byte_end":13686330,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13687094,"byte_end":13687105,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13687346,"byte_end":13687357,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13702365,"byte_end":13702385,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13705718,"byte_end":13705738,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13706624,"byte_end":13706644,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13707985,"byte_end":13708005,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708098,"byte_end":13708105,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13717704,"byte_end":13717711,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13717837,"byte_end":13717862,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13718020,"byte_end":13718045,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13718180,"byte_end":13718205,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13719274,"byte_end":13719284,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13721826,"byte_end":13721836,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13725212,"byte_end":13725222,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13725545,"byte_end":13725555,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13725860,"byte_end":13725875,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13726157,"byte_end":13726172,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13726289,"byte_end":13726304,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13728630,"byte_end":13728647,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13731296,"byte_end":13731313,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13734605,"byte_end":13734622,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13734986,"byte_end":13735003,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13735420,"byte_end":13735442,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13735771,"byte_end":13735793,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13735924,"byte_end":13735946,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":698,"byte_end":703,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":496}},{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13644492,"byte_end":13644508,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":940}},{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":880,"byte_end":884,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":895,"byte_end":901,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":378}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13646080,"byte_end":13646090,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13646241,"byte_end":13646251,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1177},"to":{"krate":0,"index":546}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13646578,"byte_end":13646588,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1177},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13656766,"byte_end":13656775,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13656975,"byte_end":13656985,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":628},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13657136,"byte_end":13657145,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13657468,"byte_end":13657478,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":628},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13657724,"byte_end":13657732,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2479}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13657829,"byte_end":13657837,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2482}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13657948,"byte_end":13657956,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2479}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13658056,"byte_end":13658064,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2482}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13658174,"byte_end":13658184,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1536},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13663766,"byte_end":13663776,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1536},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13666612,"byte_end":13666618,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13670430,"byte_end":13670436,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13675751,"byte_end":13675757,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1486},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13676073,"byte_end":13676079,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1486},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13676794,"byte_end":13676800,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1486},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13677840,"byte_end":13677851,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13678778,"byte_end":13678788,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13679677,"byte_end":13679687,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13681784,"byte_end":13681794,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1445},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13682107,"byte_end":13682117,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1445},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13682843,"byte_end":13682853,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1445},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13683832,"byte_end":13683843,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13684199,"byte_end":13684210,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13686319,"byte_end":13686330,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1404},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13687094,"byte_end":13687105,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1404},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13687346,"byte_end":13687357,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1404},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13702365,"byte_end":13702385,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13705718,"byte_end":13705738,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1230},"to":{"krate":0,"index":546}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13706624,"byte_end":13706644,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1230},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13707985,"byte_end":13708005,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1230},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13708098,"byte_end":13708105,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13717704,"byte_end":13717711,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1218},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13717837,"byte_end":13717862,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13718020,"byte_end":13718045,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13718180,"byte_end":13718205,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13719274,"byte_end":13719284,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13721826,"byte_end":13721836,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":546}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13725212,"byte_end":13725222,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13725545,"byte_end":13725555,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1246},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13725860,"byte_end":13725875,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13726157,"byte_end":13726172,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13726289,"byte_end":13726304,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1268},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13728630,"byte_end":13728647,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13731296,"byte_end":13731313,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1276},"to":{"krate":0,"index":546}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13734605,"byte_end":13734622,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1276},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13734986,"byte_end":13735003,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1276},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13735420,"byte_end":13735442,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13735771,"byte_end":13735793,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13735924,"byte_end":13735946,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1300},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":95},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":3104}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1379},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1379},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":286},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":2777}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1387},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1387},"to":{"krate":16,"index":192}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1387},"to":{"krate":16,"index":150}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1387},"to":{"krate":16,"index":231}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1387},"to":{"krate":16,"index":271}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1387},"to":{"krate":14,"index":96}}]}