{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6","program":"C:\\Users\\utibe\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=ffdf9399002afc5d","-C","extra-filename=-ffdf9399002afc5d","--out-dir","c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\associated-token-account\\program\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\associated-token-account\\program\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\associated-token-account\\program\\target\\rls\\debug\\deps\\libbytes-407e9a62ab876e29.rmeta","--extern","futures_core=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\associated-token-account\\program\\target\\rls\\debug\\deps\\libfutures_core-f698ac8f1c542c9b.rmeta","--extern","futures_sink=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\associated-token-account\\program\\target\\rls\\debug\\deps\\libfutures_sink-04621fdbe893bcb2.rmeta","--extern","log=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\associated-token-account\\program\\target\\rls\\debug\\deps\\liblog-5301ae822fe4e7bc.rmeta","--extern","pin_project_lite=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\associated-token-account\\program\\target\\rls\\debug\\deps\\libpin_project_lite-d9dcd34295f098da.rmeta","--extern","tokio=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\associated-token-account\\program\\target\\rls\\debug\\deps\\libtokio-3b2ab50ccb12cd9b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\utibe\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\associated-token-account\\program\\target\\rls\\debug\\deps\\libtokio_util-ffdf9399002afc5d.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[3473844046739022085,0]},"crate_root":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src","external_crates":[{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10193565062885309191,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[11670460313399248794,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8277854152057768692,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6312854529260013001,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11828252632451478976,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12374244740244276079,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10571265039882681484,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[417492704836984899,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7421411805122234607,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14357827127085763175,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7547149687459966599,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[3948222140130536591,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11460324065167655691,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":14,"id":{"name":"futures_core","disambiguator":[585976681511982262,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":15,"id":{"name":"futures_sink","disambiguator":[2307001958800902556,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":16,"id":{"name":"tokio","disambiguator":[12013126941167311405,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":17,"id":{"name":"parking_lot","disambiguator":[9626487532247824176,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":18,"id":{"name":"instant","disambiguator":[2505978432990767116,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":19,"id":{"name":"cfg_if","disambiguator":[7548206254662694973,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":20,"id":{"name":"lock_api","disambiguator":[12764054720814415390,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":21,"id":{"name":"scopeguard","disambiguator":[1151845157251864566,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":22,"id":{"name":"parking_lot_core","disambiguator":[2832352129031346043,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":23,"id":{"name":"smallvec","disambiguator":[8876159010802709217,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":24,"id":{"name":"winapi","disambiguator":[6088854541333403813,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","num":25,"id":{"name":"pin_project_lite","disambiguator":[4701710614950086196,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":26,"id":{"name":"mio","disambiguator":[15667528465572030393,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","num":27,"id":{"name":"log","disambiguator":[9168290620402381,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":28,"id":{"name":"ntapi","disambiguator":[10790891986732714990,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":29,"id":{"name":"miow","disambiguator":[7446512207145943233,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":30,"id":{"name":"bytes","disambiguator":[1461891054971835337,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":31,"id":{"name":"once_cell","disambiguator":[3291539447720642709,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":32,"id":{"name":"tokio_macros","disambiguator":[3912853938403899980,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":33,"id":{"name":"memchr","disambiguator":[3204635659421184808,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":34,"id":{"name":"num_cpus","disambiguator":[16305795003631790142,0]}}],"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878429,"byte_end":13878439,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878478,"byte_end":13878485,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878524,"byte_end":13878531,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878693,"byte_end":13878699,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878701,"byte_end":13878712,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878760,"byte_end":13878770,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1404},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878819,"byte_end":13878830,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878892,"byte_end":13878912,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878914,"byte_end":13878939,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878988,"byte_end":13878998,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13879000,"byte_end":13879015,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13879080,"byte_end":13879097,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13879099,"byte_end":13879121,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6701,"byte_end":6718,"line_start":4,"line_end":4,"column_start":30,"column_end":47},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6720,"byte_end":6745,"line_start":4,"line_end":4,"column_start":49,"column_end":74},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6808,"byte_end":6818,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6865,"byte_end":6878,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6921,"byte_end":6938,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":496},{"krate":0,"index":14},{"krate":0,"index":378},{"krate":0,"index":447}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":356,"byte_end":393,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":394,"byte_end":397,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":398,"byte_end":455,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":456,"byte_end":520,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":521,"byte_end":596,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":597,"byte_end":600,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":601,"byte_end":637,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1110},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1174}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\cfg.rs","byte_start":5445,"byte_end":5470,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13868157,"byte_end":13868210,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13868211,"byte_end":13868214,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13868215,"byte_end":13868290,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13868291,"byte_end":13868356,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13868357,"byte_end":13868360,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13868361,"byte_end":13868441,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13868442,"byte_end":13868517,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13868518,"byte_end":13868566,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13868567,"byte_end":13868570,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13868571,"byte_end":13868594,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13868595,"byte_end":13868598,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13868599,"byte_end":13868678,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13868679,"byte_end":13868758,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13868759,"byte_end":13868830,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13868831,"byte_end":13868901,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13868902,"byte_end":13868980,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13868981,"byte_end":13869057,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869058,"byte_end":13869091,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869092,"byte_end":13869095,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869096,"byte_end":13869176,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869177,"byte_end":13869257,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869258,"byte_end":13869308,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869309,"byte_end":13869312,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869313,"byte_end":13869364,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869365,"byte_end":13869414,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869415,"byte_end":13869466,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869467,"byte_end":13869470,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869471,"byte_end":13869536,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869537,"byte_end":13869540,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869541,"byte_end":13869618,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869619,"byte_end":13869660,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869661,"byte_end":13869664,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869665,"byte_end":13869745,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869746,"byte_end":13869825,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869826,"byte_end":13869904,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869905,"byte_end":13869984,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13869985,"byte_end":13869999,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870000,"byte_end":13870003,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870004,"byte_end":13870083,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870084,"byte_end":13870163,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870164,"byte_end":13870181,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870182,"byte_end":13870185,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870186,"byte_end":13870263,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870264,"byte_end":13870343,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870344,"byte_end":13870421,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870422,"byte_end":13870492,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870493,"byte_end":13870542,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870543,"byte_end":13870546,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870547,"byte_end":13870560,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870561,"byte_end":13870593,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870594,"byte_end":13870661,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870662,"byte_end":13870776,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870777,"byte_end":13870814,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870815,"byte_end":13870876,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870877,"byte_end":13870926,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870927,"byte_end":13870930,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870931,"byte_end":13870972,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870973,"byte_end":13870983,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13870984,"byte_end":13871068,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871069,"byte_end":13871125,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871126,"byte_end":13871129,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871130,"byte_end":13871151,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871152,"byte_end":13871219,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871220,"byte_end":13871248,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871249,"byte_end":13871262,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871263,"byte_end":13871281,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871282,"byte_end":13871291,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871292,"byte_end":13871295,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871296,"byte_end":13871355,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871356,"byte_end":13871380,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871381,"byte_end":13871390,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871391,"byte_end":13871396,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871397,"byte_end":13871405,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871406,"byte_end":13871413,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871414,"byte_end":13871488,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871489,"byte_end":13871492,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871493,"byte_end":13871515,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871516,"byte_end":13871519,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871520,"byte_end":13871597,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871598,"byte_end":13871674,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871675,"byte_end":13871754,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871755,"byte_end":13871809,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871810,"byte_end":13871813,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871814,"byte_end":13871858,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871859,"byte_end":13871866,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871867,"byte_end":13871902,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871903,"byte_end":13871934,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871935,"byte_end":13871938,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871939,"byte_end":13871968,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871969,"byte_end":13871972,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13871973,"byte_end":13872012,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872013,"byte_end":13872016,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872017,"byte_end":13872055,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872056,"byte_end":13872083,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872084,"byte_end":13872120,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872121,"byte_end":13872124,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872125,"byte_end":13872143,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872144,"byte_end":13872166,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872167,"byte_end":13872197,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872198,"byte_end":13872252,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872253,"byte_end":13872283,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872284,"byte_end":13872341,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872342,"byte_end":13872374,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872375,"byte_end":13872388,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872389,"byte_end":13872392,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872393,"byte_end":13872427,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872428,"byte_end":13872472,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872473,"byte_end":13872525,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872526,"byte_end":13872593,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872594,"byte_end":13872597,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872598,"byte_end":13872672,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872673,"byte_end":13872739,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872740,"byte_end":13872769,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872770,"byte_end":13872817,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872818,"byte_end":13872870,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872871,"byte_end":13872942,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872943,"byte_end":13872962,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872963,"byte_end":13872976,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872977,"byte_end":13872980,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13872981,"byte_end":13873020,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873021,"byte_end":13873076,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873077,"byte_end":13873095,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873096,"byte_end":13873172,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873173,"byte_end":13873239,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873240,"byte_end":13873292,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873293,"byte_end":13873296,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873297,"byte_end":13873377,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873378,"byte_end":13873403,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873404,"byte_end":13873436,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873437,"byte_end":13873450,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873451,"byte_end":13873454,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873455,"byte_end":13873527,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873528,"byte_end":13873554,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873555,"byte_end":13873606,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873607,"byte_end":13873643,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873644,"byte_end":13873647,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873648,"byte_end":13873726,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873727,"byte_end":13873770,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873771,"byte_end":13873818,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873819,"byte_end":13873855,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873856,"byte_end":13873900,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873901,"byte_end":13873957,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13873958,"byte_end":13874006,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874007,"byte_end":13874029,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874030,"byte_end":13874048,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874049,"byte_end":13874062,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874063,"byte_end":13874072,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874073,"byte_end":13874078,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874079,"byte_end":13874086,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874087,"byte_end":13874090,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874091,"byte_end":13874114,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874115,"byte_end":13874118,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874119,"byte_end":13874197,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874198,"byte_end":13874271,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874272,"byte_end":13874348,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874349,"byte_end":13874429,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874430,"byte_end":13874446,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874447,"byte_end":13874450,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874451,"byte_end":13874531,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874532,"byte_end":13874611,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874612,"byte_end":13874692,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874693,"byte_end":13874765,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874766,"byte_end":13874769,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874770,"byte_end":13874847,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874848,"byte_end":13874926,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13874927,"byte_end":13875000,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875001,"byte_end":13875067,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875068,"byte_end":13875071,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875072,"byte_end":13875085,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875086,"byte_end":13875119,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875120,"byte_end":13875154,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875155,"byte_end":13875192,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875193,"byte_end":13875260,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875261,"byte_end":13875296,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875297,"byte_end":13875358,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875359,"byte_end":13875405,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875406,"byte_end":13875467,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875468,"byte_end":13875471,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875472,"byte_end":13875500,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875501,"byte_end":13875504,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875505,"byte_end":13875546,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875547,"byte_end":13875557,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875558,"byte_end":13875582,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875583,"byte_end":13875657,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875658,"byte_end":13875700,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875701,"byte_end":13875715,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875716,"byte_end":13875773,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875774,"byte_end":13875823,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875824,"byte_end":13875838,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875839,"byte_end":13875876,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875877,"byte_end":13875928,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875929,"byte_end":13875975,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13875976,"byte_end":13876006,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876007,"byte_end":13876021,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876022,"byte_end":13876031,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876032,"byte_end":13876037,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876038,"byte_end":13876045,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876046,"byte_end":13876053,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876054,"byte_end":13876129,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876130,"byte_end":13876203,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876204,"byte_end":13876246,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876247,"byte_end":13876250,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876251,"byte_end":13876273,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876274,"byte_end":13876277,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876278,"byte_end":13876355,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876356,"byte_end":13876432,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876433,"byte_end":13876509,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876510,"byte_end":13876533,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876534,"byte_end":13876537,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876538,"byte_end":13876583,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876584,"byte_end":13876591,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876592,"byte_end":13876627,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876628,"byte_end":13876652,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876653,"byte_end":13876656,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876657,"byte_end":13876686,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876687,"byte_end":13876690,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876691,"byte_end":13876730,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876731,"byte_end":13876734,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876735,"byte_end":13876781,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876782,"byte_end":13876818,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876819,"byte_end":13876822,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876823,"byte_end":13876914,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876915,"byte_end":13876989,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13876990,"byte_end":13877012,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877013,"byte_end":13877046,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877047,"byte_end":13877094,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877095,"byte_end":13877147,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877148,"byte_end":13877223,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877224,"byte_end":13877243,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877244,"byte_end":13877257,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877258,"byte_end":13877261,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877262,"byte_end":13877314,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877315,"byte_end":13877392,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877393,"byte_end":13877457,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877458,"byte_end":13877461,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877462,"byte_end":13877505,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877506,"byte_end":13877546,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877547,"byte_end":13877550,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877551,"byte_end":13877608,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877609,"byte_end":13877655,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877656,"byte_end":13877707,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877708,"byte_end":13877726,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877727,"byte_end":13877736,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877737,"byte_end":13877742,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877743,"byte_end":13877750,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877751,"byte_end":13877754,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877755,"byte_end":13877794,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877795,"byte_end":13877836,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877837,"byte_end":13877873,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877874,"byte_end":13877906,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13877907,"byte_end":13878003,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878004,"byte_end":13878055,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878056,"byte_end":13878109,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878110,"byte_end":13878153,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878154,"byte_end":13878198,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878199,"byte_end":13878247,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878248,"byte_end":13878296,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878297,"byte_end":13878343,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878344,"byte_end":13878383,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880407,"byte_end":13880417,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879250,"byte_end":13879335,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879336,"byte_end":13879339,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879340,"byte_end":13879378,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879379,"byte_end":13879417,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879418,"byte_end":13879421,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879422,"byte_end":13879435,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879436,"byte_end":13879439,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879440,"byte_end":13879521,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879522,"byte_end":13879525,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879526,"byte_end":13879565,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879566,"byte_end":13879599,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879600,"byte_end":13879629,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879630,"byte_end":13879633,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879634,"byte_end":13879641,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879642,"byte_end":13879660,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879661,"byte_end":13879691,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879692,"byte_end":13879716,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879717,"byte_end":13879724,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879725,"byte_end":13879754,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879755,"byte_end":13879807,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879808,"byte_end":13879811,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879812,"byte_end":13879830,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879831,"byte_end":13879848,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879849,"byte_end":13879929,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879930,"byte_end":13879964,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13879965,"byte_end":13880018,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880019,"byte_end":13880030,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880031,"byte_end":13880038,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880039,"byte_end":13880044,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880045,"byte_end":13880092,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880093,"byte_end":13880146,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880147,"byte_end":13880205,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880206,"byte_end":13880285,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880286,"byte_end":13880298,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880299,"byte_end":13880306,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880307,"byte_end":13880314,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880315,"byte_end":13880318,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880519,"byte_end":13880522,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880446,"byte_end":13880507,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882522,"byte_end":13882529,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13881237,"byte_end":13881272,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13881273,"byte_end":13881276,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13881277,"byte_end":13881346,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13881347,"byte_end":13881426,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13881427,"byte_end":13881499,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13881500,"byte_end":13881524,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13881525,"byte_end":13881528,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13881529,"byte_end":13881597,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13881598,"byte_end":13881675,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13881676,"byte_end":13881737,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13881738,"byte_end":13881741,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13881742,"byte_end":13881803,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13881804,"byte_end":13881866,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13881867,"byte_end":13881870,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13881871,"byte_end":13881934,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13881935,"byte_end":13881998,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13881999,"byte_end":13882078,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882079,"byte_end":13882153,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882154,"byte_end":13882173,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882174,"byte_end":13882177,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882178,"byte_end":13882246,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882247,"byte_end":13882309,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882310,"byte_end":13882385,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ reseting the entire internal state.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882386,"byte_end":13882425,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882426,"byte_end":13882429,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882430,"byte_end":13882466,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882467,"byte_end":13882511,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882577,"byte_end":13882581,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882536,"byte_end":13882567,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883347,"byte_end":13883352,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882588,"byte_end":13882640,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882645,"byte_end":13882648,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882653,"byte_end":13882722,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882727,"byte_end":13882797,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882802,"byte_end":13882848,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882853,"byte_end":13882856,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882861,"byte_end":13882937,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13882942,"byte_end":13883017,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883022,"byte_end":13883097,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883102,"byte_end":13883142,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883147,"byte_end":13883150,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883155,"byte_end":13883229,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883234,"byte_end":13883280,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883285,"byte_end":13883288,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883293,"byte_end":13883337,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886288,"byte_end":13886294,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883376,"byte_end":13883441,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883446,"byte_end":13883449,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883454,"byte_end":13883528,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883533,"byte_end":13883605,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883610,"byte_end":13883683,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883688,"byte_end":13883731,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883736,"byte_end":13883739,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883744,"byte_end":13883817,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883822,"byte_end":13883885,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883890,"byte_end":13883965,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13883970,"byte_end":13884045,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884050,"byte_end":13884073,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884078,"byte_end":13884081,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884086,"byte_end":13884158,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884163,"byte_end":13884237,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884242,"byte_end":13884312,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884317,"byte_end":13884320,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884325,"byte_end":13884393,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884398,"byte_end":13884469,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884474,"byte_end":13884554,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884559,"byte_end":13884571,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884576,"byte_end":13884579,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884584,"byte_end":13884654,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884659,"byte_end":13884734,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884739,"byte_end":13884776,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884781,"byte_end":13884784,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884789,"byte_end":13884825,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884830,"byte_end":13884874,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884879,"byte_end":13884882,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884887,"byte_end":13884910,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884915,"byte_end":13884918,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13884923,"byte_end":13884997,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885002,"byte_end":13885076,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885081,"byte_end":13885134,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885139,"byte_end":13885142,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885147,"byte_end":13885218,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885223,"byte_end":13885293,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885298,"byte_end":13885314,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885319,"byte_end":13885322,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885327,"byte_end":13885340,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885345,"byte_end":13885363,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885368,"byte_end":13885373,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885378,"byte_end":13885404,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885409,"byte_end":13885446,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885451,"byte_end":13885456,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885461,"byte_end":13885482,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885487,"byte_end":13885492,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885497,"byte_end":13885527,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885532,"byte_end":13885546,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885551,"byte_end":13885582,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885587,"byte_end":13885620,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885625,"byte_end":13885628,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885633,"byte_end":13885726,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885731,"byte_end":13885749,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885754,"byte_end":13885757,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885762,"byte_end":13885834,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885839,"byte_end":13885899,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885904,"byte_end":13885956,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13885961,"byte_end":13886023,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886028,"byte_end":13886095,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886100,"byte_end":13886103,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886108,"byte_end":13886136,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886141,"byte_end":13886150,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886155,"byte_end":13886160,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886165,"byte_end":13886172,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886177,"byte_end":13886180,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886185,"byte_end":13886254,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886259,"byte_end":13886280,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13887460,"byte_end":13887470,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886375,"byte_end":13886447,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886452,"byte_end":13886501,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886506,"byte_end":13886509,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886514,"byte_end":13886582,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886587,"byte_end":13886654,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886659,"byte_end":13886727,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886732,"byte_end":13886808,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886813,"byte_end":13886879,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886884,"byte_end":13886887,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886892,"byte_end":13886960,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13886965,"byte_end":13887040,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13887045,"byte_end":13887120,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13887125,"byte_end":13887197,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13887202,"byte_end":13887244,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13887249,"byte_end":13887252,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13887257,"byte_end":13887332,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13887337,"byte_end":13887415,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13887420,"byte_end":13887452,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13889078,"byte_end":13889084,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13887888,"byte_end":13887968,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13887973,"byte_end":13888049,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888054,"byte_end":13888057,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888062,"byte_end":13888137,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888142,"byte_end":13888212,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888217,"byte_end":13888288,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888293,"byte_end":13888365,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888370,"byte_end":13888428,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888433,"byte_end":13888436,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888441,"byte_end":13888510,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888515,"byte_end":13888590,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888595,"byte_end":13888671,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888676,"byte_end":13888698,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888703,"byte_end":13888706,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888711,"byte_end":13888784,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888789,"byte_end":13888862,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888867,"byte_end":13888943,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888948,"byte_end":13888951,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888956,"byte_end":13888992,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13888997,"byte_end":13889029,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":13889034,"byte_end":13889070,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889418,"byte_end":13889425,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889263,"byte_end":13889335,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889336,"byte_end":13889356,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889357,"byte_end":13889360,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889361,"byte_end":13889407,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889690,"byte_end":13889695,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889438,"byte_end":13889470,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889475,"byte_end":13889478,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889483,"byte_end":13889560,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889565,"byte_end":13889621,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889626,"byte_end":13889629,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889634,"byte_end":13889680,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13890046,"byte_end":13890052,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889719,"byte_end":13889764,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889769,"byte_end":13889772,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889777,"byte_end":13889851,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889856,"byte_end":13889936,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889941,"byte_end":13889979,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889984,"byte_end":13889987,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":13889992,"byte_end":13890038,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13900869,"byte_end":13900875,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1489}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13902648,"byte_end":13902651,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13901017,"byte_end":13901097,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13901102,"byte_end":13901183,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13901188,"byte_end":13901191,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13901196,"byte_end":13901271,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13901276,"byte_end":13901346,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13901351,"byte_end":13901420,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13901425,"byte_end":13901497,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13901502,"byte_end":13901560,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13901565,"byte_end":13901568,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13901573,"byte_end":13901644,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13901649,"byte_end":13901726,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13901731,"byte_end":13901807,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13901812,"byte_end":13901834,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13901839,"byte_end":13901842,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13901847,"byte_end":13901920,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13901925,"byte_end":13901998,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13902003,"byte_end":13902079,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13902084,"byte_end":13902087,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13902092,"byte_end":13902168,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13902173,"byte_end":13902249,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13902254,"byte_end":13902329,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13902334,"byte_end":13902369,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13902374,"byte_end":13902377,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13902382,"byte_end":13902418,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13902423,"byte_end":13902455,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13902460,"byte_end":13902497,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13902502,"byte_end":13902540,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13902545,"byte_end":13902636,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13904259,"byte_end":13904272,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13902864,"byte_end":13902944,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13902949,"byte_end":13903030,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903035,"byte_end":13903084,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903089,"byte_end":13903092,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903097,"byte_end":13903172,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903177,"byte_end":13903247,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903252,"byte_end":13903321,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903326,"byte_end":13903398,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903403,"byte_end":13903461,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903466,"byte_end":13903469,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903474,"byte_end":13903545,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903550,"byte_end":13903627,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903632,"byte_end":13903708,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903713,"byte_end":13903735,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903740,"byte_end":13903743,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903748,"byte_end":13903821,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903826,"byte_end":13903899,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903904,"byte_end":13903980,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903985,"byte_end":13903988,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13903993,"byte_end":13904029,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13904034,"byte_end":13904066,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13904071,"byte_end":13904108,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13904113,"byte_end":13904151,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13904156,"byte_end":13904247,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13906375,"byte_end":13906385,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13904798,"byte_end":13904878,"line_start":118,"line_end":118,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13904883,"byte_end":13904964,"line_start":119,"line_end":119,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13904969,"byte_end":13904972,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13904977,"byte_end":13905052,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13905057,"byte_end":13905127,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13905132,"byte_end":13905203,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13905208,"byte_end":13905280,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13905285,"byte_end":13905343,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13905348,"byte_end":13905351,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13905356,"byte_end":13905427,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13905432,"byte_end":13905509,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13905514,"byte_end":13905590,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13905595,"byte_end":13905617,"line_start":130,"line_end":130,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13905622,"byte_end":13905625,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13905630,"byte_end":13905709,"line_start":132,"line_end":132,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13905714,"byte_end":13905791,"line_start":133,"line_end":133,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13905796,"byte_end":13905799,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13905804,"byte_end":13905877,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13905882,"byte_end":13905955,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13905960,"byte_end":13906036,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13906041,"byte_end":13906044,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13906049,"byte_end":13906085,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13906090,"byte_end":13906122,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13906127,"byte_end":13906165,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13906170,"byte_end":13906208,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13906213,"byte_end":13906267,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13906272,"byte_end":13906363,"line_start":144,"line_end":144,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907020,"byte_end":13907027,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13906737,"byte_end":13906800,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13906805,"byte_end":13906818,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13906823,"byte_end":13906826,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13906831,"byte_end":13906906,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13906911,"byte_end":13906981,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13906986,"byte_end":13907008,"line_start":163,"line_end":163,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907371,"byte_end":13907378,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907080,"byte_end":13907151,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907156,"byte_end":13907169,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907174,"byte_end":13907177,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907182,"byte_end":13907257,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907262,"byte_end":13907332,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907337,"byte_end":13907359,"line_start":173,"line_end":173,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907741,"byte_end":13907752,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907443,"byte_end":13907521,"line_start":178,"line_end":178,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907526,"byte_end":13907539,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907544,"byte_end":13907547,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907552,"byte_end":13907627,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907632,"byte_end":13907702,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907707,"byte_end":13907729,"line_start":183,"line_end":183,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13908099,"byte_end":13908104,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907848,"byte_end":13907906,"line_start":188,"line_end":188,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907911,"byte_end":13907924,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907929,"byte_end":13907932,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13907937,"byte_end":13908011,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13908016,"byte_end":13908087,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13908416,"byte_end":13908425,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13908157,"byte_end":13908223,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13908228,"byte_end":13908241,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13908246,"byte_end":13908249,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13908254,"byte_end":13908328,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13908333,"byte_end":13908404,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13908545,"byte_end":13908556,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13908490,"byte_end":13908533,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13908691,"byte_end":13908706,"line_start":212,"line_end":212,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13908628,"byte_end":13908679,"line_start":211,"line_end":211,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13908846,"byte_end":13908858,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13908790,"byte_end":13908834,"line_start":216,"line_end":216,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13908995,"byte_end":13909011,"line_start":222,"line_end":222,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13908931,"byte_end":13908983,"line_start":221,"line_end":221,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13909361,"byte_end":13909371,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13909096,"byte_end":13909159,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13909164,"byte_end":13909167,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13909172,"byte_end":13909247,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13909252,"byte_end":13909322,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13909327,"byte_end":13909349,"line_start":230,"line_end":230,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13909743,"byte_end":13909753,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13909421,"byte_end":13909495,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13909500,"byte_end":13909541,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13909546,"byte_end":13909549,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13909554,"byte_end":13909629,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13909634,"byte_end":13909704,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13909709,"byte_end":13909731,"line_start":240,"line_end":240,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13911727,"byte_end":13911738,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13911412,"byte_end":13911483,"line_start":304,"line_end":304,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13911484,"byte_end":13911556,"line_start":305,"line_end":305,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13911557,"byte_end":13911617,"line_start":306,"line_end":306,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13911618,"byte_end":13911621,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13911622,"byte_end":13911658,"line_start":308,"line_end":308,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13911676,"byte_end":13911715,"line_start":310,"line_end":310,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13911824,"byte_end":13911826,"line_start":313,"line_end":313,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13911751,"byte_end":13911815,"line_start":312,"line_end":312,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13911858,"byte_end":13911863,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13911836,"byte_end":13911849,"line_start":315,"line_end":315,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13911928,"byte_end":13911936,"line_start":319,"line_end":319,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13911873,"byte_end":13911919,"line_start":318,"line_end":318,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1212},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13912023,"byte_end":13912032,"line_start":322,"line_end":322,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13911953,"byte_end":13912014,"line_start":321,"line_end":321,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13912265,"byte_end":13912268,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13912213,"byte_end":13912253,"line_start":330,"line_end":330,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13912997,"byte_end":13913007,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1448}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13913258,"byte_end":13913261,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13913190,"byte_end":13913246,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13913609,"byte_end":13913622,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13913493,"byte_end":13913575,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13913580,"byte_end":13913597,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914336,"byte_end":13914343,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914049,"byte_end":13914112,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914117,"byte_end":13914134,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914139,"byte_end":13914142,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914147,"byte_end":13914222,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914227,"byte_end":13914297,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914302,"byte_end":13914324,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914691,"byte_end":13914698,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914396,"byte_end":13914467,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914472,"byte_end":13914489,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914494,"byte_end":13914497,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914502,"byte_end":13914577,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914582,"byte_end":13914652,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914657,"byte_end":13914679,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13915065,"byte_end":13915076,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914763,"byte_end":13914841,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914846,"byte_end":13914863,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914868,"byte_end":13914871,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914876,"byte_end":13914951,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914956,"byte_end":13915026,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13915031,"byte_end":13915053,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13915441,"byte_end":13915451,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13915172,"byte_end":13915239,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13915244,"byte_end":13915247,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13915252,"byte_end":13915327,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13915332,"byte_end":13915402,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13915407,"byte_end":13915429,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13915563,"byte_end":13915570,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13915501,"byte_end":13915551,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13915693,"byte_end":13915704,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13915623,"byte_end":13915681,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13915824,"byte_end":13915835,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13915769,"byte_end":13915812,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13915965,"byte_end":13915980,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13915902,"byte_end":13915953,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1404},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13918081,"byte_end":13918092,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1407}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13918299,"byte_end":13918302,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13918230,"byte_end":13918287,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13918860,"byte_end":13918867,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13918572,"byte_end":13918635,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13918640,"byte_end":13918658,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13918663,"byte_end":13918666,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13918671,"byte_end":13918746,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13918751,"byte_end":13918821,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13918826,"byte_end":13918848,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919216,"byte_end":13919223,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13918920,"byte_end":13918991,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13918996,"byte_end":13919014,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919019,"byte_end":13919022,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919027,"byte_end":13919102,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919107,"byte_end":13919177,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919182,"byte_end":13919204,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919591,"byte_end":13919602,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919288,"byte_end":13919366,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919371,"byte_end":13919389,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919394,"byte_end":13919397,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919402,"byte_end":13919477,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919482,"byte_end":13919552,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919557,"byte_end":13919579,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919968,"byte_end":13919978,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919698,"byte_end":13919766,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919771,"byte_end":13919774,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919779,"byte_end":13919854,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919859,"byte_end":13919929,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13919934,"byte_end":13919956,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13920090,"byte_end":13920097,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13920028,"byte_end":13920078,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13920220,"byte_end":13920231,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13920150,"byte_end":13920208,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13920352,"byte_end":13920364,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13920296,"byte_end":13920340,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13920495,"byte_end":13920511,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13920431,"byte_end":13920483,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":1218},{"krate":0,"index":1225},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":994},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":996},{"krate":0,"index":1003},{"krate":0,"index":1007},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922038,"byte_end":13922090,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922091,"byte_end":13922094,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922095,"byte_end":13922165,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922166,"byte_end":13922224,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922225,"byte_end":13922297,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922298,"byte_end":13922368,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922369,"byte_end":13922436,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922437,"byte_end":13922440,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922441,"byte_end":13922462,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922463,"byte_end":13922466,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922467,"byte_end":13922542,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922543,"byte_end":13922614,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922615,"byte_end":13922686,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922687,"byte_end":13922757,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922758,"byte_end":13922798,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922799,"byte_end":13922802,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922803,"byte_end":13922810,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922811,"byte_end":13922854,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922855,"byte_end":13922913,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922914,"byte_end":13922917,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922918,"byte_end":13922973,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13922974,"byte_end":13923016,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923017,"byte_end":13923022,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923023,"byte_end":13923075,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923076,"byte_end":13923081,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923082,"byte_end":13923104,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923105,"byte_end":13923112,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923113,"byte_end":13923116,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923117,"byte_end":13923189,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923190,"byte_end":13923261,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923262,"byte_end":13923281,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923282,"byte_end":13923285,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923286,"byte_end":13923297,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923298,"byte_end":13923347,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923348,"byte_end":13923397,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923398,"byte_end":13923447,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923448,"byte_end":13923455,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923456,"byte_end":13923459,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923460,"byte_end":13923498,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923499,"byte_end":13923502,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923503,"byte_end":13923510,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923511,"byte_end":13923554,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923555,"byte_end":13923613,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923614,"byte_end":13923617,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923618,"byte_end":13923643,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923644,"byte_end":13923665,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923666,"byte_end":13923669,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923670,"byte_end":13923746,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923747,"byte_end":13923756,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923757,"byte_end":13923799,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923800,"byte_end":13923805,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923806,"byte_end":13923879,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923880,"byte_end":13923927,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923928,"byte_end":13923931,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923932,"byte_end":13923969,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923970,"byte_end":13923984,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923985,"byte_end":13923990,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923991,"byte_end":13923998,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13923999,"byte_end":13924002,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924003,"byte_end":13924045,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924046,"byte_end":13924049,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924050,"byte_end":13924061,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924062,"byte_end":13924101,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924102,"byte_end":13924141,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924142,"byte_end":13924181,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924182,"byte_end":13924189,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924190,"byte_end":13924193,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924194,"byte_end":13924208,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924209,"byte_end":13924212,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924213,"byte_end":13924288,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924289,"byte_end":13924362,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924363,"byte_end":13924429,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924430,"byte_end":13924499,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924500,"byte_end":13924565,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924566,"byte_end":13924569,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924570,"byte_end":13924586,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924587,"byte_end":13924590,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924591,"byte_end":13924667,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924668,"byte_end":13924709,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924710,"byte_end":13924713,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924714,"byte_end":13924721,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924722,"byte_end":13924753,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924754,"byte_end":13924804,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924805,"byte_end":13924846,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924847,"byte_end":13924882,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924883,"byte_end":13924931,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924932,"byte_end":13924963,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13924964,"byte_end":13925012,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925013,"byte_end":13925062,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925063,"byte_end":13925085,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925086,"byte_end":13925093,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925094,"byte_end":13925116,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925117,"byte_end":13925124,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925125,"byte_end":13925128,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925129,"byte_end":13925177,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925178,"byte_end":13925181,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925182,"byte_end":13925193,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925194,"byte_end":13925246,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925247,"byte_end":13925312,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925313,"byte_end":13925378,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925379,"byte_end":13925444,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925445,"byte_end":13925452,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925453,"byte_end":13925456,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925457,"byte_end":13925533,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925534,"byte_end":13925608,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925609,"byte_end":13925681,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925682,"byte_end":13925758,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925759,"byte_end":13925801,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925802,"byte_end":13925805,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925806,"byte_end":13925822,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925823,"byte_end":13925826,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925827,"byte_end":13925902,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925903,"byte_end":13925944,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925945,"byte_end":13925948,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925949,"byte_end":13925956,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925957,"byte_end":13925988,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13925989,"byte_end":13926039,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926040,"byte_end":13926081,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926082,"byte_end":13926117,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926118,"byte_end":13926166,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926167,"byte_end":13926198,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926199,"byte_end":13926247,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926248,"byte_end":13926307,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926308,"byte_end":13926330,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926331,"byte_end":13926338,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926339,"byte_end":13926361,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926362,"byte_end":13926369,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926370,"byte_end":13926373,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926374,"byte_end":13926422,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926423,"byte_end":13926426,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926427,"byte_end":13926438,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926439,"byte_end":13926488,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926489,"byte_end":13926543,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926544,"byte_end":13926598,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926599,"byte_end":13926653,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926654,"byte_end":13926661,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926662,"byte_end":13926665,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926666,"byte_end":13926739,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926740,"byte_end":13926807,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926808,"byte_end":13926811,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926812,"byte_end":13926828,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926829,"byte_end":13926832,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926833,"byte_end":13926909,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926910,"byte_end":13926982,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13926983,"byte_end":13927022,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927023,"byte_end":13927026,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927027,"byte_end":13927034,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927035,"byte_end":13927066,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927067,"byte_end":13927117,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927118,"byte_end":13927159,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927160,"byte_end":13927195,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927196,"byte_end":13927244,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927245,"byte_end":13927276,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927277,"byte_end":13927324,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927325,"byte_end":13927345,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927346,"byte_end":13927368,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927369,"byte_end":13927376,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927377,"byte_end":13927399,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927400,"byte_end":13927407,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927408,"byte_end":13927411,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927412,"byte_end":13927460,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927461,"byte_end":13927464,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927465,"byte_end":13927476,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927477,"byte_end":13927529,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927530,"byte_end":13927595,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927596,"byte_end":13927661,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927662,"byte_end":13927727,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927728,"byte_end":13927735,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927736,"byte_end":13927739,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927740,"byte_end":13927812,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927813,"byte_end":13927888,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927889,"byte_end":13927961,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13927962,"byte_end":13928038,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928039,"byte_end":13928112,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928113,"byte_end":13928116,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928117,"byte_end":13928133,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928134,"byte_end":13928137,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928138,"byte_end":13928212,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928213,"byte_end":13928280,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928281,"byte_end":13928284,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928285,"byte_end":13928292,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928293,"byte_end":13928324,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928325,"byte_end":13928375,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928376,"byte_end":13928417,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928418,"byte_end":13928453,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928454,"byte_end":13928502,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928503,"byte_end":13928534,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928535,"byte_end":13928583,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928584,"byte_end":13928604,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928605,"byte_end":13928627,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928628,"byte_end":13928635,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928636,"byte_end":13928658,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928659,"byte_end":13928666,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928667,"byte_end":13928670,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928671,"byte_end":13928719,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928720,"byte_end":13928723,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928724,"byte_end":13928735,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928736,"byte_end":13928762,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928763,"byte_end":13928808,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928809,"byte_end":13928854,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928855,"byte_end":13928900,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928901,"byte_end":13928904,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928905,"byte_end":13928933,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928934,"byte_end":13928979,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13928980,"byte_end":13929025,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929026,"byte_end":13929071,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929072,"byte_end":13929079,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929080,"byte_end":13929083,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929084,"byte_end":13929156,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929157,"byte_end":13929233,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929234,"byte_end":13929304,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929305,"byte_end":13929374,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929375,"byte_end":13929412,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929413,"byte_end":13929416,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929417,"byte_end":13929491,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929492,"byte_end":13929546,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929547,"byte_end":13929550,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929551,"byte_end":13929567,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929568,"byte_end":13929571,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929572,"byte_end":13929645,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929646,"byte_end":13929722,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929723,"byte_end":13929797,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929798,"byte_end":13929811,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929812,"byte_end":13929815,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929816,"byte_end":13929823,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929824,"byte_end":13929855,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929856,"byte_end":13929906,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929907,"byte_end":13929948,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929949,"byte_end":13929984,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13929985,"byte_end":13930034,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930035,"byte_end":13930066,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930067,"byte_end":13930115,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930116,"byte_end":13930160,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930161,"byte_end":13930183,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930184,"byte_end":13930191,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930192,"byte_end":13930214,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930215,"byte_end":13930222,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930223,"byte_end":13930226,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930227,"byte_end":13930275,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930276,"byte_end":13930279,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930280,"byte_end":13930291,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930292,"byte_end":13930318,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930319,"byte_end":13930369,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930370,"byte_end":13930420,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930421,"byte_end":13930471,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930472,"byte_end":13930475,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930476,"byte_end":13930496,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930497,"byte_end":13930527,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930528,"byte_end":13930558,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930559,"byte_end":13930589,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930590,"byte_end":13930597,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930598,"byte_end":13930601,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930602,"byte_end":13930675,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930676,"byte_end":13930751,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930752,"byte_end":13930824,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930825,"byte_end":13930863,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930864,"byte_end":13930867,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930868,"byte_end":13930942,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13930943,"byte_end":13931019,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931020,"byte_end":13931093,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931094,"byte_end":13931122,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931123,"byte_end":13931126,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931127,"byte_end":13931143,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931144,"byte_end":13931147,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931148,"byte_end":13931221,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931222,"byte_end":13931298,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931299,"byte_end":13931373,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931374,"byte_end":13931446,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931447,"byte_end":13931458,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931459,"byte_end":13931462,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931463,"byte_end":13931470,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931471,"byte_end":13931502,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931503,"byte_end":13931553,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931554,"byte_end":13931595,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931596,"byte_end":13931631,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931632,"byte_end":13931681,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931682,"byte_end":13931713,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931714,"byte_end":13931779,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931780,"byte_end":13931800,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931801,"byte_end":13931823,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931824,"byte_end":13931831,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931832,"byte_end":13931839,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931840,"byte_end":13931843,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931844,"byte_end":13931892,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931893,"byte_end":13931896,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931897,"byte_end":13931908,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931909,"byte_end":13931935,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931936,"byte_end":13931986,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13931987,"byte_end":13932037,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932038,"byte_end":13932088,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932089,"byte_end":13932092,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932093,"byte_end":13932113,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932114,"byte_end":13932144,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932145,"byte_end":13932175,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932176,"byte_end":13932206,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932207,"byte_end":13932214,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932215,"byte_end":13932218,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932219,"byte_end":13932292,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932293,"byte_end":13932367,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932368,"byte_end":13932442,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932443,"byte_end":13932516,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932517,"byte_end":13932593,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932594,"byte_end":13932627,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932628,"byte_end":13932631,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932632,"byte_end":13932648,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932649,"byte_end":13932652,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932653,"byte_end":13932727,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932728,"byte_end":13932795,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932796,"byte_end":13932799,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932800,"byte_end":13932807,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932808,"byte_end":13932839,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932840,"byte_end":13932890,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932891,"byte_end":13932932,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932933,"byte_end":13932968,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13932969,"byte_end":13933017,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933018,"byte_end":13933049,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933050,"byte_end":13933097,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933098,"byte_end":13933144,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933145,"byte_end":13933167,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933168,"byte_end":13933175,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933176,"byte_end":13933198,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933199,"byte_end":13933206,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933207,"byte_end":13933210,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933211,"byte_end":13933259,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933260,"byte_end":13933263,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933264,"byte_end":13933275,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933276,"byte_end":13933332,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933333,"byte_end":13933394,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933395,"byte_end":13933456,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933457,"byte_end":13933518,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933519,"byte_end":13933526,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933527,"byte_end":13933530,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933531,"byte_end":13933605,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933606,"byte_end":13933626,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933627,"byte_end":13933630,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933631,"byte_end":13933645,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933646,"byte_end":13933649,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933650,"byte_end":13933725,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933726,"byte_end":13933798,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933799,"byte_end":13933867,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933868,"byte_end":13933944,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933945,"byte_end":13933986,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933987,"byte_end":13933990,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13933991,"byte_end":13934061,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934062,"byte_end":13934080,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934081,"byte_end":13934084,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934085,"byte_end":13934092,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934093,"byte_end":13934125,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934126,"byte_end":13934176,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934177,"byte_end":13934221,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934222,"byte_end":13934235,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934236,"byte_end":13934271,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934272,"byte_end":13934303,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934304,"byte_end":13934327,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934328,"byte_end":13934335,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934336,"byte_end":13934358,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934359,"byte_end":13934366,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934367,"byte_end":13934370,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934371,"byte_end":13934421,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934422,"byte_end":13934425,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934426,"byte_end":13934437,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934438,"byte_end":13934471,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934472,"byte_end":13934505,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934506,"byte_end":13934539,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934540,"byte_end":13934547,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934548,"byte_end":13934551,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934552,"byte_end":13934621,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934622,"byte_end":13934659,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934660,"byte_end":13934699,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934700,"byte_end":13934745,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934746,"byte_end":13934793,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934794,"byte_end":13934824,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13934825,"byte_end":13934858,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13935420,"byte_end":13935427,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13935102,"byte_end":13935157,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13935158,"byte_end":13935161,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13935162,"byte_end":13935237,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13935238,"byte_end":13935318,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13935319,"byte_end":13935378,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13936098,"byte_end":13936123,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":995}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13936013,"byte_end":13936086,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13936468,"byte_end":13936488,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13936144,"byte_end":13936218,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13936219,"byte_end":13936222,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13936223,"byte_end":13936302,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13936303,"byte_end":13936346,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13936347,"byte_end":13936350,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13936351,"byte_end":13936404,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13936405,"byte_end":13936408,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13936409,"byte_end":13936439,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13936832,"byte_end":13936835,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13936741,"byte_end":13936820,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13937062,"byte_end":13937069,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13936959,"byte_end":13937034,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13937039,"byte_end":13937050,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13937291,"byte_end":13937307,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13937119,"byte_end":13937160,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13937165,"byte_end":13937168,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13937173,"byte_end":13937246,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13937251,"byte_end":13937279,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13937728,"byte_end":13937748,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13937372,"byte_end":13937406,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13937411,"byte_end":13937414,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13937419,"byte_end":13937489,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13937494,"byte_end":13937569,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13937574,"byte_end":13937646,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13937651,"byte_end":13937716,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13943003,"byte_end":13943006,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942461,"byte_end":13942536,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942541,"byte_end":13942552,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942557,"byte_end":13942560,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942565,"byte_end":13942579,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942584,"byte_end":13942587,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942592,"byte_end":13942599,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942604,"byte_end":13942635,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942640,"byte_end":13942688,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942693,"byte_end":13942696,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942701,"byte_end":13942742,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942747,"byte_end":13942782,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942787,"byte_end":13942818,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942823,"byte_end":13942854,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942859,"byte_end":13942888,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942893,"byte_end":13942913,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942918,"byte_end":13942940,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942945,"byte_end":13942952,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942957,"byte_end":13942979,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942984,"byte_end":13942991,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944191,"byte_end":13944201,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13943670,"byte_end":13943719,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13943724,"byte_end":13943727,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13943732,"byte_end":13943764,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13943769,"byte_end":13943772,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13943777,"byte_end":13943845,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13943850,"byte_end":13943853,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13943858,"byte_end":13943872,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13943877,"byte_end":13943880,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13943885,"byte_end":13943892,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13943897,"byte_end":13943928,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13943933,"byte_end":13943981,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13943986,"byte_end":13943989,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13943994,"byte_end":13944035,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944040,"byte_end":13944075,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944080,"byte_end":13944101,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944106,"byte_end":13944128,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944133,"byte_end":13944140,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944145,"byte_end":13944167,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944172,"byte_end":13944179,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944833,"byte_end":13944846,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944300,"byte_end":13944352,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944357,"byte_end":13944360,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944365,"byte_end":13944403,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944408,"byte_end":13944411,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944416,"byte_end":13944484,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944489,"byte_end":13944492,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944497,"byte_end":13944511,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944516,"byte_end":13944519,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944524,"byte_end":13944531,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944536,"byte_end":13944567,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944572,"byte_end":13944620,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944625,"byte_end":13944628,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944633,"byte_end":13944674,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944679,"byte_end":13944714,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944719,"byte_end":13944743,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944748,"byte_end":13944770,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944775,"byte_end":13944782,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944787,"byte_end":13944809,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944814,"byte_end":13944821,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945479,"byte_end":13945492,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13944946,"byte_end":13944998,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945003,"byte_end":13945006,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945011,"byte_end":13945049,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945054,"byte_end":13945057,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945062,"byte_end":13945130,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945135,"byte_end":13945138,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945143,"byte_end":13945157,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945162,"byte_end":13945165,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945170,"byte_end":13945177,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945182,"byte_end":13945213,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945218,"byte_end":13945266,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945271,"byte_end":13945274,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945279,"byte_end":13945320,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945325,"byte_end":13945360,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945365,"byte_end":13945389,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945394,"byte_end":13945416,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945421,"byte_end":13945428,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945433,"byte_end":13945455,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945460,"byte_end":13945467,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946573,"byte_end":13946589,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945661,"byte_end":13945690,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945695,"byte_end":13945698,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945703,"byte_end":13945775,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945780,"byte_end":13945805,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945810,"byte_end":13945813,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945818,"byte_end":13945890,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945895,"byte_end":13945964,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13945969,"byte_end":13946042,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946047,"byte_end":13946059,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946064,"byte_end":13946067,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946072,"byte_end":13946147,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946152,"byte_end":13946213,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946218,"byte_end":13946221,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946226,"byte_end":13946240,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946245,"byte_end":13946248,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946253,"byte_end":13946260,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946265,"byte_end":13946296,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946301,"byte_end":13946349,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946354,"byte_end":13946357,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946362,"byte_end":13946403,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946408,"byte_end":13946443,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946448,"byte_end":13946483,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946488,"byte_end":13946510,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946515,"byte_end":13946522,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946527,"byte_end":13946549,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946554,"byte_end":13946561,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947250,"byte_end":13947269,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946686,"byte_end":13946749,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946754,"byte_end":13946757,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946762,"byte_end":13946813,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946818,"byte_end":13946821,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946826,"byte_end":13946894,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946899,"byte_end":13946902,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946907,"byte_end":13946921,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946926,"byte_end":13946929,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946934,"byte_end":13946941,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946946,"byte_end":13946977,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13946982,"byte_end":13947030,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947035,"byte_end":13947038,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947043,"byte_end":13947084,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947089,"byte_end":13947124,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947129,"byte_end":13947160,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947165,"byte_end":13947187,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947192,"byte_end":13947199,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947204,"byte_end":13947226,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947231,"byte_end":13947238,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947928,"byte_end":13947947,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947438,"byte_end":13947504,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947509,"byte_end":13947512,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947517,"byte_end":13947572,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947577,"byte_end":13947580,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947585,"byte_end":13947599,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947604,"byte_end":13947607,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947612,"byte_end":13947619,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947624,"byte_end":13947655,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947660,"byte_end":13947708,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947713,"byte_end":13947716,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947721,"byte_end":13947762,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947767,"byte_end":13947802,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947807,"byte_end":13947838,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947843,"byte_end":13947865,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947870,"byte_end":13947877,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947882,"byte_end":13947904,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13947909,"byte_end":13947916,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948501,"byte_end":13948518,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948050,"byte_end":13948123,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948128,"byte_end":13948146,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948151,"byte_end":13948154,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948159,"byte_end":13948173,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948178,"byte_end":13948181,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948186,"byte_end":13948193,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948198,"byte_end":13948229,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948234,"byte_end":13948282,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948287,"byte_end":13948290,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948295,"byte_end":13948336,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948341,"byte_end":13948376,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948381,"byte_end":13948411,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948416,"byte_end":13948438,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948443,"byte_end":13948450,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948455,"byte_end":13948477,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948482,"byte_end":13948489,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949168,"byte_end":13949176,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948619,"byte_end":13948682,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948687,"byte_end":13948690,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948695,"byte_end":13948756,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948761,"byte_end":13948764,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948769,"byte_end":13948823,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948828,"byte_end":13948831,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948836,"byte_end":13948850,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948855,"byte_end":13948858,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948863,"byte_end":13948870,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948875,"byte_end":13948906,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948911,"byte_end":13948959,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948964,"byte_end":13948967,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13948972,"byte_end":13949013,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949018,"byte_end":13949053,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949058,"byte_end":13949078,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949083,"byte_end":13949105,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949110,"byte_end":13949117,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949122,"byte_end":13949144,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949149,"byte_end":13949156,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949696,"byte_end":13949705,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949274,"byte_end":13949337,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949342,"byte_end":13949345,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949350,"byte_end":13949364,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949369,"byte_end":13949372,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949377,"byte_end":13949384,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949389,"byte_end":13949437,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949442,"byte_end":13949463,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949468,"byte_end":13949503,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949508,"byte_end":13949539,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949544,"byte_end":13949575,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949580,"byte_end":13949609,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949614,"byte_end":13949634,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949639,"byte_end":13949660,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949665,"byte_end":13949672,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949677,"byte_end":13949684,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950361,"byte_end":13950369,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949857,"byte_end":13949910,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949915,"byte_end":13949918,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949923,"byte_end":13949937,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949942,"byte_end":13949945,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949950,"byte_end":13949957,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949962,"byte_end":13949993,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13949998,"byte_end":13950046,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950051,"byte_end":13950054,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950059,"byte_end":13950100,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950105,"byte_end":13950140,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950145,"byte_end":13950176,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950181,"byte_end":13950212,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950217,"byte_end":13950246,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950251,"byte_end":13950271,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950276,"byte_end":13950298,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950303,"byte_end":13950310,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950315,"byte_end":13950337,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950342,"byte_end":13950349,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950942,"byte_end":13950951,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950533,"byte_end":13950587,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950592,"byte_end":13950595,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950600,"byte_end":13950614,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950619,"byte_end":13950622,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950627,"byte_end":13950634,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950639,"byte_end":13950671,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950676,"byte_end":13950726,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950731,"byte_end":13950775,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950780,"byte_end":13950815,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950820,"byte_end":13950851,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950856,"byte_end":13950879,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950884,"byte_end":13950891,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950896,"byte_end":13950918,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13950923,"byte_end":13950930,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13951560,"byte_end":13951570,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13951112,"byte_end":13951161,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13951166,"byte_end":13951169,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13951174,"byte_end":13951188,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13951193,"byte_end":13951196,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13951201,"byte_end":13951208,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13951213,"byte_end":13951258,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13951263,"byte_end":13951313,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13951318,"byte_end":13951374,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13951379,"byte_end":13951392,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13951397,"byte_end":13951432,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13951437,"byte_end":13951468,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13951473,"byte_end":13951497,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13951502,"byte_end":13951509,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13951514,"byte_end":13951536,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13951541,"byte_end":13951548,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13952949,"byte_end":13952959,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13952706,"byte_end":13952793,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13952794,"byte_end":13952797,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13952798,"byte_end":13952836,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13952837,"byte_end":13952875,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13954059,"byte_end":13954062,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13953640,"byte_end":13953700,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13953705,"byte_end":13953708,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13953713,"byte_end":13953723,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13953728,"byte_end":13953731,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13953736,"byte_end":13953808,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13953813,"byte_end":13953886,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13953891,"byte_end":13953958,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13953963,"byte_end":13953966,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13953971,"byte_end":13954047,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955193,"byte_end":13955212,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13954220,"byte_end":13954280,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13954285,"byte_end":13954288,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13954293,"byte_end":13954356,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13954361,"byte_end":13954439,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13954444,"byte_end":13954511,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13954516,"byte_end":13954588,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13954593,"byte_end":13954663,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13954668,"byte_end":13954691,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13954696,"byte_end":13954699,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13954704,"byte_end":13954714,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13954719,"byte_end":13954722,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13954727,"byte_end":13954802,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13954807,"byte_end":13954880,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13954885,"byte_end":13954961,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13954966,"byte_end":13955039,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955044,"byte_end":13955114,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955119,"byte_end":13955122,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955127,"byte_end":13955181,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955778,"byte_end":13955788,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955340,"byte_end":13955390,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955395,"byte_end":13955398,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955403,"byte_end":13955410,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955415,"byte_end":13955434,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955439,"byte_end":13955477,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955482,"byte_end":13955485,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955490,"byte_end":13955524,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955529,"byte_end":13955576,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955581,"byte_end":13955588,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955593,"byte_end":13955600,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955605,"byte_end":13955643,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955648,"byte_end":13955651,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955656,"byte_end":13955709,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955714,"byte_end":13955754,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13955759,"byte_end":13955766,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13960113,"byte_end":13960134,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13960067,"byte_end":13960108,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13960169,"byte_end":13960171,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13960140,"byte_end":13960164,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13960045,"byte_end":13960060,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1271}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13959963,"byte_end":13960018,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13962093,"byte_end":13962110,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13960907,"byte_end":13961048,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961049,"byte_end":13961052,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961053,"byte_end":13961091,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961092,"byte_end":13961130,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961131,"byte_end":13961134,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961135,"byte_end":13961148,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961149,"byte_end":13961216,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961217,"byte_end":13961220,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961221,"byte_end":13961254,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961255,"byte_end":13961284,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961285,"byte_end":13961288,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961289,"byte_end":13961296,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961297,"byte_end":13961353,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961354,"byte_end":13961388,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961389,"byte_end":13961392,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961393,"byte_end":13961398,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961399,"byte_end":13961446,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961447,"byte_end":13961500,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961501,"byte_end":13961578,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961579,"byte_end":13961614,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961615,"byte_end":13961636,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961637,"byte_end":13961687,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961688,"byte_end":13961751,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961752,"byte_end":13961815,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961816,"byte_end":13961879,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961880,"byte_end":13961936,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961937,"byte_end":13961986,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13961987,"byte_end":13961999,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13962000,"byte_end":13962007,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13962008,"byte_end":13962015,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13962016,"byte_end":13962019,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13963445,"byte_end":13963448,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13963003,"byte_end":13963071,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13963076,"byte_end":13963079,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13963084,"byte_end":13963094,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13963099,"byte_end":13963102,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13963107,"byte_end":13963186,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13963191,"byte_end":13963265,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13963270,"byte_end":13963337,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13963342,"byte_end":13963345,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13963350,"byte_end":13963433,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13964759,"byte_end":13964778,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13963728,"byte_end":13963796,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13963801,"byte_end":13963804,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13963809,"byte_end":13963879,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13963884,"byte_end":13963970,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13963975,"byte_end":13964045,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13964050,"byte_end":13964127,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13964132,"byte_end":13964202,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13964207,"byte_end":13964230,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13964235,"byte_end":13964238,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13964243,"byte_end":13964253,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13964258,"byte_end":13964261,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13964266,"byte_end":13964348,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13964353,"byte_end":13964426,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13964431,"byte_end":13964508,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13964513,"byte_end":13964586,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13964591,"byte_end":13964666,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13964671,"byte_end":13964674,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13964679,"byte_end":13964747,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965566,"byte_end":13965576,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965035,"byte_end":13965086,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965091,"byte_end":13965094,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965099,"byte_end":13965106,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965111,"byte_end":13965130,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965135,"byte_end":13965180,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965185,"byte_end":13965188,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965193,"byte_end":13965265,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965270,"byte_end":13965317,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965322,"byte_end":13965329,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965334,"byte_end":13965341,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965346,"byte_end":13965391,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965396,"byte_end":13965399,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965404,"byte_end":13965497,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965502,"byte_end":13965542,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965547,"byte_end":13965554,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13969671,"byte_end":13969693,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13969624,"byte_end":13969666,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13969729,"byte_end":13969731,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13969699,"byte_end":13969724,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13969595,"byte_end":13969617,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1303}],"decl_id":null,"docs":" An error occured while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a chunk.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13969512,"byte_end":13969568,"line_start":237,"line_end":237,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":186},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":375}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6616,"byte_end":6646,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8580,"byte_end":8597,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":52}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7362,"byte_end":7439,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7440,"byte_end":7450,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7451,"byte_end":7454,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7455,"byte_end":7520,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7521,"byte_end":7595,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7596,"byte_end":7599,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7600,"byte_end":7683,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7684,"byte_end":7687,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7688,"byte_end":7702,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7703,"byte_end":7706,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7707,"byte_end":7720,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7721,"byte_end":7743,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7744,"byte_end":7784,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7785,"byte_end":7788,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7789,"byte_end":7807,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7808,"byte_end":7829,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7830,"byte_end":7875,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7876,"byte_end":7917,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7918,"byte_end":7921,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7922,"byte_end":7973,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7974,"byte_end":8037,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8038,"byte_end":8059,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8060,"byte_end":8109,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8110,"byte_end":8156,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8157,"byte_end":8178,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8179,"byte_end":8196,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8197,"byte_end":8278,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8279,"byte_end":8301,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8302,"byte_end":8319,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8320,"byte_end":8333,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8334,"byte_end":8345,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8346,"byte_end":8349,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8350,"byte_end":8383,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8384,"byte_end":8459,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8460,"byte_end":8487,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8488,"byte_end":8499,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8500,"byte_end":8503,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8504,"byte_end":8554,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8555,"byte_end":8560,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8561,"byte_end":8568,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9017,"byte_end":9042,"line_start":66,"line_end":66,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8864,"byte_end":8938,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8939,"byte_end":8956,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8957,"byte_end":9005,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11550,"byte_end":11553,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11475,"byte_end":11538,"line_start":139,"line_end":139,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13606,"byte_end":13617,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12343,"byte_end":12414,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12419,"byte_end":12452,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12457,"byte_end":12460,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12465,"byte_end":12536,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12541,"byte_end":12573,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12578,"byte_end":12581,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12586,"byte_end":12600,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12605,"byte_end":12608,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12613,"byte_end":12626,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12631,"byte_end":12653,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12658,"byte_end":12698,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12703,"byte_end":12706,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12711,"byte_end":12729,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12734,"byte_end":12755,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12760,"byte_end":12805,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12810,"byte_end":12856,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12861,"byte_end":12864,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12869,"byte_end":12920,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12925,"byte_end":12988,"line_start":182,"line_end":182,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12993,"byte_end":13014,"line_start":183,"line_end":183,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13019,"byte_end":13067,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13072,"byte_end":13118,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13123,"byte_end":13144,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13149,"byte_end":13166,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13171,"byte_end":13252,"line_start":188,"line_end":188,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13257,"byte_end":13279,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13284,"byte_end":13301,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13306,"byte_end":13319,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13324,"byte_end":13335,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13340,"byte_end":13343,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13348,"byte_end":13381,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13386,"byte_end":13461,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13466,"byte_end":13493,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13498,"byte_end":13509,"line_start":197,"line_end":197,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13514,"byte_end":13517,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13522,"byte_end":13572,"line_start":199,"line_end":199,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13577,"byte_end":13582,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13587,"byte_end":13594,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16192,"byte_end":16198,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16003,"byte_end":16075,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16080,"byte_end":16100,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16105,"byte_end":16108,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16113,"byte_end":16180,"line_start":259,"line_end":259,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16326,"byte_end":16338,"line_start":265,"line_end":265,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16250,"byte_end":16314,"line_start":264,"line_end":264,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16489,"byte_end":16498,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16403,"byte_end":16477,"line_start":269,"line_end":269,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70044,"byte_end":70054,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":69906,"byte_end":69963,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":69964,"byte_end":69967,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":69968,"byte_end":70015,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70777,"byte_end":70780,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70735,"byte_end":70765,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71495,"byte_end":71505,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70983,"byte_end":71012,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71017,"byte_end":71020,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71025,"byte_end":71101,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71106,"byte_end":71175,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71180,"byte_end":71198,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71203,"byte_end":71206,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71211,"byte_end":71282,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71287,"byte_end":71360,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71365,"byte_end":71439,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71444,"byte_end":71483,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73026,"byte_end":73040,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71929,"byte_end":72010,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72015,"byte_end":72061,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72066,"byte_end":72069,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72074,"byte_end":72122,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72127,"byte_end":72130,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72135,"byte_end":72219,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72224,"byte_end":72283,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72288,"byte_end":72373,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72378,"byte_end":72397,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72402,"byte_end":72481,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72486,"byte_end":72489,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72494,"byte_end":72569,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72574,"byte_end":72650,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72655,"byte_end":72710,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72715,"byte_end":72789,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72794,"byte_end":72867,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72872,"byte_end":72906,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72911,"byte_end":72914,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72919,"byte_end":72995,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73000,"byte_end":73014,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73674,"byte_end":73682,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73426,"byte_end":73491,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73496,"byte_end":73499,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73504,"byte_end":73577,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73582,"byte_end":73592,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73597,"byte_end":73600,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73605,"byte_end":73662,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73794,"byte_end":73803,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73736,"byte_end":73782,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74144,"byte_end":74155,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73945,"byte_end":73979,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73984,"byte_end":73987,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73992,"byte_end":74065,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74070,"byte_end":74132,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74460,"byte_end":74469,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74260,"byte_end":74295,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74300,"byte_end":74303,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74308,"byte_end":74381,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74386,"byte_end":74448,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75169,"byte_end":75186,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74620,"byte_end":74689,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74694,"byte_end":74697,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74702,"byte_end":74772,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74777,"byte_end":74850,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74855,"byte_end":74901,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74906,"byte_end":74909,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74914,"byte_end":74989,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74994,"byte_end":75068,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75073,"byte_end":75099,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75104,"byte_end":75107,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75112,"byte_end":75157,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75352,"byte_end":75362,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75239,"byte_end":75286,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75291,"byte_end":75294,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75299,"byte_end":75340,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":77874,"byte_end":77887,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":77743,"byte_end":77816,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":77817,"byte_end":77820,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":77821,"byte_end":77862,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78081,"byte_end":78084,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78036,"byte_end":78069,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78248,"byte_end":78253,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78211,"byte_end":78236,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78359,"byte_end":78370,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78305,"byte_end":78347,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78485,"byte_end":78495,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78440,"byte_end":78473,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":79229,"byte_end":79241,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78556,"byte_end":78604,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78609,"byte_end":78612,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78617,"byte_end":78658,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78663,"byte_end":78666,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78671,"byte_end":78733,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78738,"byte_end":78798,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78803,"byte_end":78863,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78868,"byte_end":78871,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78876,"byte_end":78951,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78956,"byte_end":79024,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":79029,"byte_end":79105,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":79110,"byte_end":79178,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":79183,"byte_end":79217,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80669,"byte_end":80686,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80385,"byte_end":80437,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80442,"byte_end":80445,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80450,"byte_end":80526,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80531,"byte_end":80565,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80570,"byte_end":80573,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80578,"byte_end":80657,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81146,"byte_end":81157,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80759,"byte_end":80801,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80806,"byte_end":80809,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80814,"byte_end":80887,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80892,"byte_end":80932,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80937,"byte_end":80940,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80945,"byte_end":81015,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81020,"byte_end":81054,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81059,"byte_end":81062,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81067,"byte_end":81134,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82300,"byte_end":82317,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":345}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82100,"byte_end":82157,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82158,"byte_end":82161,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82162,"byte_end":82229,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82230,"byte_end":82288,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82495,"byte_end":82498,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82412,"byte_end":82483,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83079,"byte_end":83082,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82864,"byte_end":82916,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82921,"byte_end":82924,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82929,"byte_end":83001,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83006,"byte_end":83067,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83525,"byte_end":83532,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83284,"byte_end":83336,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83341,"byte_end":83344,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83349,"byte_end":83422,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83427,"byte_end":83497,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83502,"byte_end":83513,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85372,"byte_end":85379,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85308,"byte_end":85360,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85665,"byte_end":85669,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85610,"byte_end":85653,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":1387},{"krate":0,"index":1396},{"krate":0,"index":1400},{"krate":0,"index":416},{"krate":0,"index":422},{"krate":0,"index":426},{"krate":0,"index":431},{"krate":0,"index":436},{"krate":0,"index":442}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":86782,"byte_end":86817,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1390},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88764,"byte_end":88768,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88777,"byte_end":88782,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1387},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88745,"byte_end":88751,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1393}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":86994,"byte_end":87100,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87101,"byte_end":87104,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87105,"byte_end":87195,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87196,"byte_end":87199,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87200,"byte_end":87235,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87236,"byte_end":87239,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87240,"byte_end":87253,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87254,"byte_end":87257,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87258,"byte_end":87295,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87296,"byte_end":87299,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87300,"byte_end":87319,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87320,"byte_end":87362,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87363,"byte_end":87413,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87414,"byte_end":87465,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87466,"byte_end":87484,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87485,"byte_end":87506,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87507,"byte_end":87549,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87550,"byte_end":87583,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87584,"byte_end":87600,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87601,"byte_end":87695,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87696,"byte_end":87706,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87707,"byte_end":87710,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87711,"byte_end":87758,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87759,"byte_end":87764,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87765,"byte_end":87772,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87773,"byte_end":87776,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87977,"byte_end":87980,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87981,"byte_end":88067,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88068,"byte_end":88078,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88079,"byte_end":88082,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88083,"byte_end":88090,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88091,"byte_end":88126,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88127,"byte_end":88169,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88170,"byte_end":88220,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88221,"byte_end":88272,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88273,"byte_end":88276,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88277,"byte_end":88295,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88296,"byte_end":88317,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88318,"byte_end":88360,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88361,"byte_end":88408,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88409,"byte_end":88425,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88426,"byte_end":88475,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88476,"byte_end":88486,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88487,"byte_end":88490,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88491,"byte_end":88524,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88525,"byte_end":88565,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88566,"byte_end":88598,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88599,"byte_end":88604,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88605,"byte_end":88612,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88613,"byte_end":88635,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880429,"byte_end":13880439,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880590,"byte_end":13880600,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880927,"byte_end":13880937,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13891115,"byte_end":13891124,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13891324,"byte_end":13891334,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13891485,"byte_end":13891494,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13891817,"byte_end":13891827,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13892073,"byte_end":13892081,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13892178,"byte_end":13892186,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13892297,"byte_end":13892305,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13892405,"byte_end":13892413,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13892523,"byte_end":13892533,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13898115,"byte_end":13898125,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13900961,"byte_end":13900967,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13904779,"byte_end":13904785,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13910100,"byte_end":13910106,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13910422,"byte_end":13910428,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13911143,"byte_end":13911149,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13912189,"byte_end":13912200,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13913127,"byte_end":13913137,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914026,"byte_end":13914036,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13916133,"byte_end":13916143,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13916456,"byte_end":13916466,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13917192,"byte_end":13917202,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13918181,"byte_end":13918192,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13918548,"byte_end":13918559,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13920668,"byte_end":13920679,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13921443,"byte_end":13921454,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13921695,"byte_end":13921706,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13936714,"byte_end":13936734,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13940067,"byte_end":13940087,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13940973,"byte_end":13940993,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942334,"byte_end":13942354,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942447,"byte_end":13942454,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13952053,"byte_end":13952060,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13952186,"byte_end":13952211,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13952369,"byte_end":13952394,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13952529,"byte_end":13952554,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13953623,"byte_end":13953633,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13956175,"byte_end":13956185,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13959561,"byte_end":13959571,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13959894,"byte_end":13959904,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13960209,"byte_end":13960224,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13960506,"byte_end":13960521,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13960638,"byte_end":13960653,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13962979,"byte_end":13962996,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965645,"byte_end":13965662,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13968954,"byte_end":13968971,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13969335,"byte_end":13969352,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13969769,"byte_end":13969791,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13970120,"byte_end":13970142,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13970273,"byte_end":13970295,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":698,"byte_end":703,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":496}},{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":13878841,"byte_end":13878857,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":940}},{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":880,"byte_end":884,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":895,"byte_end":901,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":378}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880429,"byte_end":13880439,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880590,"byte_end":13880600,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1177},"to":{"krate":0,"index":546}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":13880927,"byte_end":13880937,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1177},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13891115,"byte_end":13891124,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13891324,"byte_end":13891334,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":628},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13891485,"byte_end":13891494,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13891817,"byte_end":13891827,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":628},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13892073,"byte_end":13892081,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2479}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13892178,"byte_end":13892186,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2482}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13892297,"byte_end":13892305,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2479}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13892405,"byte_end":13892413,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2482}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13892523,"byte_end":13892533,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1536},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":13898115,"byte_end":13898125,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1536},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13900961,"byte_end":13900967,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13904779,"byte_end":13904785,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13910100,"byte_end":13910106,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1486},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13910422,"byte_end":13910428,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1486},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13911143,"byte_end":13911149,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1486},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":13912189,"byte_end":13912200,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13913127,"byte_end":13913137,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13914026,"byte_end":13914036,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13916133,"byte_end":13916143,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1445},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13916456,"byte_end":13916466,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1445},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":13917192,"byte_end":13917202,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1445},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13918181,"byte_end":13918192,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13918548,"byte_end":13918559,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13920668,"byte_end":13920679,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1404},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13921443,"byte_end":13921454,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1404},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":13921695,"byte_end":13921706,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1404},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13936714,"byte_end":13936734,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13940067,"byte_end":13940087,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1230},"to":{"krate":0,"index":546}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13940973,"byte_end":13940993,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1230},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942334,"byte_end":13942354,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1230},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13942447,"byte_end":13942454,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13952053,"byte_end":13952060,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1218},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13952186,"byte_end":13952211,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13952369,"byte_end":13952394,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":13952529,"byte_end":13952554,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13953623,"byte_end":13953633,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13956175,"byte_end":13956185,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":546}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13959561,"byte_end":13959571,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13959894,"byte_end":13959904,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1246},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13960209,"byte_end":13960224,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13960506,"byte_end":13960521,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":13960638,"byte_end":13960653,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1268},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13962979,"byte_end":13962996,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13965645,"byte_end":13965662,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1276},"to":{"krate":0,"index":546}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13968954,"byte_end":13968971,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1276},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13969335,"byte_end":13969352,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1276},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13969769,"byte_end":13969791,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13970120,"byte_end":13970142,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":13970273,"byte_end":13970295,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1300},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":95},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":3104}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1379},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1379},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":286},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":2777}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1387},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1387},"to":{"krate":16,"index":221}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1387},"to":{"krate":16,"index":179}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1387},"to":{"krate":16,"index":260}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1387},"to":{"krate":16,"index":300}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1387},"to":{"krate":14,"index":96}}]}