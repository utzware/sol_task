{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14","program":"C:\\Users\\utibe\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","futures_util","--edition=2018","C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-await\"","--cfg","feature=\"async-await-macro\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-macro\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"proc-macro-hack\"","--cfg","feature=\"proc-macro-nested\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=72004f9e4f7a8e7f","-C","extra-filename=-72004f9e4f7a8e7f","--out-dir","c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps","--extern","futures_core=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\libfutures_core-f698ac8f1c542c9b.rmeta","--extern","futures_io=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\libfutures_io-3fd87d353bf29bf1.rmeta","--extern","futures_macro=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\futures_macro-3e3aade630e1e675.dll","--extern","futures_task=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\libfutures_task-5841c3014624205a.rmeta","--extern","memchr=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\libmemchr-dba01618c5651ab8.rmeta","--extern","pin_project_lite=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\libpin_project_lite-d9dcd34295f098da.rmeta","--extern","pin_utils=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\libpin_utils-868fc4c231c46cc2.rmeta","--extern","proc_macro_hack=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\proc_macro_hack-9c54a1bcb721cdf7.dll","--extern","proc_macro_nested=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\libproc_macro_nested-081995dcc5ee5a3f.rmeta","--extern","slab=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\libslab-b9b67a2c1b815bfa.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\utibe\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\token\\program\\target\\rls\\debug\\deps\\libfutures_util-72004f9e4f7a8e7f.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[3112057405347974518,0]},"crate_root":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src","external_crates":[{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10193565062885309191,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\poll.rs","num":2,"id":{"name":"core","disambiguator":[11670460313399248794,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8277854152057768692,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6312854529260013001,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11828252632451478976,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12374244740244276079,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10571265039882681484,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[417492704836984899,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7421411805122234607,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14357827127085763175,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7547149687459966599,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[3948222140130536591,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11460324065167655691,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","num":14,"id":{"name":"futures_core","disambiguator":[585976681511982262,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","num":15,"id":{"name":"pin_utils","disambiguator":[2151682467794830045,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\join_mod.rs","num":16,"id":{"name":"proc_macro_hack","disambiguator":[17237849315008603654,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","num":17,"id":{"name":"futures_task","disambiguator":[7942958045709694754,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\flatten.rs","num":18,"id":{"name":"pin_project_lite","disambiguator":[4701710614950086196,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","num":19,"id":{"name":"slab","disambiguator":[15420667670039285733,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","num":20,"id":{"name":"futures_io","disambiguator":[16710107592612710467,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\join_mod.rs","num":21,"id":{"name":"futures_macro","disambiguator":[3430742995896766162,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_until.rs","num":22,"id":{"name":"memchr","disambiguator":[3204635659421184808,0]}}],"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":0,"byte_end":12445,"line_start":1,"line_end":349,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":14,"index":169},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1485,"byte_end":1490,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":7},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1511,"byte_end":1518,"line_start":34,"line_end":34,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1657,"byte_end":1658,"line_start":41,"line_end":41,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1766,"byte_end":1767,"line_start":47,"line_end":47,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":2,"index":40256},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1805,"byte_end":1811,"line_start":49,"line_end":49,"column_start":17,"column_end":23},"alias_span":null,"name":"Option","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":2,"index":40258},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1820,"byte_end":1824,"line_start":49,"line_end":49,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":2,"index":40259},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1820,"byte_end":1824,"line_start":49,"line_end":49,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":2,"index":40260},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1826,"byte_end":1830,"line_start":49,"line_end":49,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":2,"index":40261},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1826,"byte_end":1830,"line_start":49,"line_end":49,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":2,"index":40374},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1846,"byte_end":1849,"line_start":50,"line_end":50,"column_start":14,"column_end":17},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":2,"index":40388},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1876,"byte_end":1879,"line_start":51,"line_end":51,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":2,"index":40389},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1876,"byte_end":1879,"line_start":51,"line_end":51,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":2,"index":40385},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1881,"byte_end":1883,"line_start":51,"line_end":51,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":2,"index":40386},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1881,"byte_end":1883,"line_start":51,"line_end":51,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":123}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1956,"byte_end":1957,"line_start":55,"line_end":55,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":2,"index":12193},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35486,"byte_end":35492,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":14,"index":21},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35552,"byte_end":35561,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":14,"index":24},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35563,"byte_end":35577,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":14,"index":27},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35611,"byte_end":35622,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":14,"index":44},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35624,"byte_end":35633,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":17,"index":141},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35659,"byte_end":35668,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":17,"index":107},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35670,"byte_end":35684,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":17,"index":162},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35686,"byte_end":35701,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":7454},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":41307,"byte_end":41318,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":184}},{"kind":"Use","ref_id":{"krate":0,"index":6952},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35816,"byte_end":35823,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":6866},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35825,"byte_end":35829,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35831,"byte_end":35840,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":7295},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35842,"byte_end":35849,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":7110},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35851,"byte_end":35861,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":7050},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35863,"byte_end":35866,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":7355},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35868,"byte_end":35878,"line_start":24,"line_end":24,"column_start":57,"column_end":67},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":7222},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35880,"byte_end":35884,"line_start":24,"line_end":24,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":7403},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35886,"byte_end":35895,"line_start":24,"line_end":24,"column_start":75,"column_end":84},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":7160},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35897,"byte_end":35904,"line_start":24,"line_end":24,"column_start":86,"column_end":93},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":7000},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36000,"byte_end":36013,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":7454},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36062,"byte_end":36073,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36273,"byte_end":36279,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36281,"byte_end":36291,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":7790},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36343,"byte_end":36350,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":7937},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36352,"byte_end":36359,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":7998},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36361,"byte_end":36367,"line_start":43,"line_end":43,"column_start":23,"column_end":29},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8120},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36369,"byte_end":36379,"line_start":43,"line_end":43,"column_start":31,"column_end":41},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8059},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36381,"byte_end":36390,"line_start":43,"line_end":43,"column_start":43,"column_end":52},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":7490},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36392,"byte_end":36402,"line_start":43,"line_end":43,"column_start":54,"column_end":64},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8242},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36404,"byte_end":36410,"line_start":43,"line_end":43,"column_start":66,"column_end":72},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8181},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36412,"byte_end":36417,"line_start":43,"line_end":43,"column_start":74,"column_end":79},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":7864},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36419,"byte_end":36425,"line_start":43,"line_end":43,"column_start":81,"column_end":87},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":7739},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36427,"byte_end":36443,"line_start":43,"line_end":43,"column_start":89,"column_end":105},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36449,"byte_end":36461,"line_start":44,"line_end":44,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8377},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36463,"byte_end":36475,"line_start":44,"line_end":44,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8304},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36477,"byte_end":36488,"line_start":44,"line_end":44,"column_start":33,"column_end":44},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":7618},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36490,"byte_end":36500,"line_start":44,"line_end":44,"column_start":46,"column_end":56},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36672,"byte_end":36676,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8435},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36678,"byte_end":36682,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36723,"byte_end":36730,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8441},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36732,"byte_end":36739,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36786,"byte_end":36796,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8447},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36798,"byte_end":36807,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36862,"byte_end":36876,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8460},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36878,"byte_end":36890,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8478},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36928,"byte_end":36940,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36980,"byte_end":36987,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":36989,"byte_end":36995,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37032,"byte_end":37035,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37037,"byte_end":37039,"line_start":72,"line_end":72,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37041,"byte_end":37046,"line_start":72,"line_end":72,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8512},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37048,"byte_end":37053,"line_start":72,"line_end":72,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37088,"byte_end":37092,"line_start":75,"line_end":75,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37094,"byte_end":37099,"line_start":75,"line_end":75,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37101,"byte_end":37106,"line_start":75,"line_end":75,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37108,"byte_end":37113,"line_start":75,"line_end":75,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8614},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37115,"byte_end":37119,"line_start":75,"line_end":75,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8659},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37121,"byte_end":37126,"line_start":75,"line_end":75,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8716},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37128,"byte_end":37133,"line_start":75,"line_end":75,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8785},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37135,"byte_end":37140,"line_start":75,"line_end":75,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37235,"byte_end":37243,"line_start":80,"line_end":80,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1362},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37245,"byte_end":37252,"line_start":80,"line_end":80,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37291,"byte_end":37297,"line_start":83,"line_end":83,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8866},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37299,"byte_end":37305,"line_start":83,"line_end":83,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1467},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37404,"byte_end":37414,"line_start":88,"line_end":88,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8874},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37416,"byte_end":37425,"line_start":88,"line_end":88,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1523},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37473,"byte_end":37481,"line_start":92,"line_end":92,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1526},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37483,"byte_end":37492,"line_start":92,"line_end":92,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1530},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37494,"byte_end":37503,"line_start":92,"line_end":92,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1535},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37505,"byte_end":37514,"line_start":92,"line_end":92,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8950},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37516,"byte_end":37523,"line_start":92,"line_end":92,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":8995},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37525,"byte_end":37533,"line_start":92,"line_end":92,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":9052},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37535,"byte_end":37543,"line_start":92,"line_end":92,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":9121},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37545,"byte_end":37553,"line_start":92,"line_end":92,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1624},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37658,"byte_end":37670,"line_start":98,"line_end":98,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1618},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37672,"byte_end":37682,"line_start":98,"line_end":98,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1670},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37729,"byte_end":37739,"line_start":101,"line_end":101,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":9202},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37741,"byte_end":37750,"line_start":101,"line_end":101,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":1720},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37847,"byte_end":37856,"line_start":106,"line_end":106,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":9210},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37858,"byte_end":37866,"line_start":106,"line_end":106,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":9216},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":37904,"byte_end":37910,"line_start":109,"line_end":109,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":9274},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":38047,"byte_end":38056,"line_start":115,"line_end":115,"column_start":31,"column_end":40},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":14710},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":38058,"byte_end":38067,"line_start":115,"line_end":115,"column_start":42,"column_end":51},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":9305},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":38069,"byte_end":38080,"line_start":115,"line_end":115,"column_start":53,"column_end":64},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":9301},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":38082,"byte_end":38099,"line_start":115,"line_end":115,"column_start":66,"column_end":83},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":9316},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":38101,"byte_end":38108,"line_start":115,"line_end":115,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":0,"index":9317},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":38101,"byte_end":38108,"line_start":115,"line_end":115,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":156}},{"kind":"Use","ref_id":{"krate":2,"index":12193},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":11632,"byte_end":11638,"line_start":312,"line_end":312,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":11640,"byte_end":11649,"line_start":312,"line_end":312,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":44},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":11651,"byte_end":11660,"line_start":312,"line_end":312,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":11662,"byte_end":11674,"line_start":312,"line_end":312,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":90},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":164864,"byte_end":164873,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":14,"index":93},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":164875,"byte_end":164889,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":14,"index":110},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":164923,"byte_end":164934,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":14,"index":96},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":164936,"byte_end":164942,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":14,"index":127},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":164944,"byte_end":164953,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10829},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":172683,"byte_end":172689,"line_start":160,"line_end":160,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1894}},{"kind":"Use","ref_id":{"krate":0,"index":10877},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":172866,"byte_end":172877,"line_start":166,"line_end":166,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1894}},{"kind":"Use","ref_id":{"krate":0,"index":11168},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174218,"byte_end":174229,"line_start":206,"line_end":206,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1894}},{"kind":"Use","ref_id":{"krate":0,"index":9336},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165069,"byte_end":165074,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":9385},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165076,"byte_end":165083,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":9494},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165085,"byte_end":165091,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":9534},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165093,"byte_end":165098,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":9574},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165100,"byte_end":165109,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":9613},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165111,"byte_end":165117,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":9678},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165119,"byte_end":165128,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10145},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165130,"byte_end":165137,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":9794},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165139,"byte_end":165146,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":9847},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165148,"byte_end":165152,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":9916},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165154,"byte_end":165161,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":9978},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165167,"byte_end":165171,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10026},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165173,"byte_end":165180,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10092},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165182,"byte_end":165185,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10224},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165187,"byte_end":165191,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10325},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165193,"byte_end":165199,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10374},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165201,"byte_end":165209,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10284},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165211,"byte_end":165215,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10245},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165217,"byte_end":165225,"line_start":22,"line_end":22,"column_start":55,"column_end":63},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10920},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165227,"byte_end":165231,"line_start":22,"line_end":22,"column_start":65,"column_end":69},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10232},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165233,"byte_end":165247,"line_start":22,"line_end":22,"column_start":71,"column_end":85},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10428},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165249,"byte_end":165253,"line_start":22,"line_end":22,"column_start":87,"column_end":91},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10467},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165255,"byte_end":165264,"line_start":22,"line_end":22,"column_start":93,"column_end":102},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":3409},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165266,"byte_end":165275,"line_start":22,"line_end":22,"column_start":104,"column_end":113},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10017},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165281,"byte_end":165293,"line_start":23,"line_end":23,"column_start":5,"column_end":17},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10541},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165295,"byte_end":165299,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10649},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165301,"byte_end":165310,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10580},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165312,"byte_end":165321,"line_start":23,"line_end":23,"column_start":36,"column_end":45},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10706},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165323,"byte_end":165327,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":9436},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165329,"byte_end":165334,"line_start":23,"line_end":23,"column_start":53,"column_end":58},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10774},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165336,"byte_end":165339,"line_start":23,"line_end":23,"column_start":60,"column_end":63},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":11168},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165391,"byte_end":165402,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10829},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165453,"byte_end":165459,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":10877},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165510,"byte_end":165521,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":14664},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165757,"byte_end":165772,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":14623},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165774,"byte_end":165782,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":14562},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":165784,"byte_end":165801,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":12483},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302039,"byte_end":302052,"line_start":139,"line_end":139,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":3602}},{"kind":"Use","ref_id":{"krate":0,"index":4247},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166094,"byte_end":166104,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":11207},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166106,"byte_end":166113,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":11271},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166115,"byte_end":166122,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":11409},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166124,"byte_end":166134,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":11340},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166136,"byte_end":166145,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":11480},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166147,"byte_end":166157,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":11587},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166159,"byte_end":166165,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":11518},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166167,"byte_end":166172,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":11653},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166174,"byte_end":166180,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":11956},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166186,"byte_end":166196,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":12003},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166198,"byte_end":166207,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":11779},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166209,"byte_end":166218,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":11844},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166220,"byte_end":166232,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":11910},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166234,"byte_end":166244,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":12038},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166246,"byte_end":166253,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":11722},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166255,"byte_end":166265,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":11714},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166267,"byte_end":166274,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":12164},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166280,"byte_end":166292,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":4449},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166294,"byte_end":166306,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":12233},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166308,"byte_end":166320,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":12107},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166322,"byte_end":166331,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":12483},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166456,"byte_end":166469,"line_start":59,"line_end":59,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":14523},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166604,"byte_end":166622,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":14479},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166624,"byte_end":166635,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":14413},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166637,"byte_end":166657,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":4598},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166714,"byte_end":166718,"line_start":68,"line_end":68,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":12502},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166720,"byte_end":166724,"line_start":68,"line_end":68,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":4633},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166763,"byte_end":166769,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":12511},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166771,"byte_end":166777,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":4686},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166826,"byte_end":166837,"line_start":74,"line_end":74,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":12520},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166839,"byte_end":166849,"line_start":74,"line_end":74,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":4720},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166886,"byte_end":166891,"line_start":77,"line_end":77,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":12529},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166893,"byte_end":166898,"line_start":77,"line_end":77,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":4772},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166933,"byte_end":166937,"line_start":80,"line_end":80,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":12540},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166939,"byte_end":166943,"line_start":80,"line_end":80,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":4816},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166984,"byte_end":166991,"line_start":83,"line_end":83,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":12571},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":166993,"byte_end":167000,"line_start":83,"line_end":83,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":4866},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":167041,"byte_end":167048,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":4858},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":167050,"byte_end":167056,"line_start":86,"line_end":86,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":4912},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":167095,"byte_end":167101,"line_start":89,"line_end":89,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":12584},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":167103,"byte_end":167109,"line_start":89,"line_end":89,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":4977},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":167148,"byte_end":167154,"line_start":92,"line_end":92,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":12630},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":167156,"byte_end":167162,"line_start":92,"line_end":92,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":12753},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":167311,"byte_end":167325,"line_start":98,"line_end":98,"column_start":36,"column_end":50},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":13264},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12738310,"byte_end":12738314,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":12793}},{"kind":"Use","ref_id":{"krate":0,"index":13265},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12738310,"byte_end":12738314,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":12793}},{"kind":"Use","ref_id":{"krate":0,"index":13244},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12738316,"byte_end":12738323,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":12793}},{"kind":"Use","ref_id":{"krate":0,"index":13245},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12738316,"byte_end":12738323,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":12793}},{"kind":"Use","ref_id":{"krate":0,"index":13234},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12738325,"byte_end":12738335,"line_start":25,"line_end":25,"column_start":37,"column_end":47},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":12793}},{"kind":"Use","ref_id":{"krate":0,"index":13253},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12738337,"byte_end":12738347,"line_start":25,"line_end":25,"column_start":49,"column_end":59},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":12793}},{"kind":"Use","ref_id":{"krate":0,"index":13084},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":167475,"byte_end":167491,"line_start":104,"line_end":104,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":13217},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":167605,"byte_end":167615,"line_start":109,"line_end":109,"column_start":32,"column_end":42},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":13195},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":167617,"byte_end":167626,"line_start":109,"line_end":109,"column_start":44,"column_end":53},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":14,"index":96},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":11733,"byte_end":11739,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3409},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":11741,"byte_end":11750,"line_start":316,"line_end":316,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":127},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":11752,"byte_end":11761,"line_start":316,"line_end":316,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4449},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":11763,"byte_end":11775,"line_start":316,"line_end":316,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":12445},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393635,"byte_end":393642,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":2,"index":42927},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393644,"byte_end":393648,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":2,"index":12455},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393650,"byte_end":393655,"line_start":14,"line_end":14,"column_start":37,"column_end":42},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":2,"index":42963},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393657,"byte_end":393665,"line_start":14,"line_end":14,"column_start":44,"column_end":52},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":2,"index":42972},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393667,"byte_end":393681,"line_start":14,"line_end":14,"column_start":54,"column_end":68},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":17,"index":16},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393713,"byte_end":393718,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":17,"index":19},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393720,"byte_end":393730,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":17,"index":22},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393732,"byte_end":393742,"line_start":17,"line_end":17,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":17,"index":141},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393748,"byte_end":393757,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":17,"index":107},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393759,"byte_end":393773,"line_start":18,"line_end":18,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":17,"index":162},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393775,"byte_end":393790,"line_start":18,"line_end":18,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":17,"index":282},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393818,"byte_end":393828,"line_start":21,"line_end":21,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":17,"index":283},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393876,"byte_end":393890,"line_start":23,"line_end":23,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":17,"index":327},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393974,"byte_end":393981,"line_start":27,"line_end":27,"column_start":27,"column_end":34},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":17,"index":355},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":394040,"byte_end":394045,"line_start":30,"line_end":30,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":17,"index":404},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":394105,"byte_end":394114,"line_start":33,"line_end":33,"column_start":28,"column_end":37},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":17,"index":413},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":394116,"byte_end":394124,"line_start":33,"line_end":33,"column_start":39,"column_end":47},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":14,"index":194},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":394172,"byte_end":394183,"line_start":35,"line_end":35,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":0,"index":5093},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":394221,"byte_end":394229,"line_start":39,"line_end":39,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":0,"index":5096},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":394231,"byte_end":394244,"line_start":39,"line_end":39,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":1,"index":3769},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":402116,"byte_end":402121,"line_start":29,"line_end":29,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":1,"index":9588},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":402123,"byte_end":402132,"line_start":29,"line_end":29,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":1,"index":9693},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":402134,"byte_end":402141,"line_start":29,"line_end":29,"column_start":37,"column_end":44},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":1,"index":4328},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":402143,"byte_end":402153,"line_start":29,"line_end":29,"column_start":46,"column_end":56},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":1,"index":3767},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":402155,"byte_end":402161,"line_start":29,"line_end":29,"column_start":58,"column_end":64},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":1,"index":9707},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":402163,"byte_end":402171,"line_start":29,"line_end":29,"column_start":66,"column_end":74},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":20,"index":39},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":402341,"byte_end":402350,"line_start":35,"line_end":35,"column_start":22,"column_end":31},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":20,"index":42},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":402352,"byte_end":402362,"line_start":35,"line_end":35,"column_start":33,"column_end":43},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":20,"index":47},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":402364,"byte_end":402373,"line_start":35,"line_end":35,"column_start":45,"column_end":54},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":20,"index":49},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":402375,"byte_end":402387,"line_start":35,"line_end":35,"column_start":56,"column_end":68},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13289},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":402985,"byte_end":402995,"line_start":56,"line_end":56,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13322},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403040,"byte_end":403049,"line_start":59,"line_end":59,"column_start":27,"column_end":36},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13375},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403094,"byte_end":403103,"line_start":62,"line_end":62,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13424},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403138,"byte_end":403143,"line_start":65,"line_end":65,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13473},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403178,"byte_end":403183,"line_start":68,"line_end":68,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":5530},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403217,"byte_end":403221,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13490},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403223,"byte_end":403227,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":5575},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403270,"byte_end":403278,"line_start":74,"line_end":74,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13544},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403280,"byte_end":403287,"line_start":74,"line_end":74,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13597},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403325,"byte_end":403331,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":5679},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403367,"byte_end":403372,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":5677},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403374,"byte_end":403379,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13625},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403421,"byte_end":403428,"line_start":83,"line_end":83,"column_start":25,"column_end":32},"alias_span":null,"name":"FillBuf","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13633},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403463,"byte_end":403468,"line_start":86,"line_end":86,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13646},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403700,"byte_end":403705,"line_start":96,"line_end":96,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13689},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403738,"byte_end":403742,"line_start":99,"line_end":99,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13698},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403793,"byte_end":403805,"line_start":102,"line_end":102,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13707},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403850,"byte_end":403859,"line_start":105,"line_end":105,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13716},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403902,"byte_end":403910,"line_start":108,"line_end":108,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13727},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":403957,"byte_end":403966,"line_start":111,"line_end":111,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13737},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404019,"byte_end":404031,"line_start":114,"line_end":114,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13748},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404076,"byte_end":404085,"line_start":117,"line_end":117,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":6129},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404123,"byte_end":404129,"line_start":120,"line_end":120,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":6127},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404131,"byte_end":404137,"line_start":120,"line_end":120,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13759},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404171,"byte_end":404175,"line_start":123,"line_end":123,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":6205},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404209,"byte_end":404213,"line_start":126,"line_end":126,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":6203},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404215,"byte_end":404219,"line_start":126,"line_end":126,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13768},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404256,"byte_end":404264,"line_start":129,"line_end":129,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13774},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404266,"byte_end":404275,"line_start":129,"line_end":129,"column_start":33,"column_end":42},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":6287},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404277,"byte_end":404289,"line_start":129,"line_end":129,"column_start":44,"column_end":56},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":6288},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404277,"byte_end":404289,"line_start":129,"line_end":129,"column_start":44,"column_end":56},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13785},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404323,"byte_end":404327,"line_start":132,"line_end":132,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13824},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404364,"byte_end":404370,"line_start":135,"line_end":135,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13831},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404405,"byte_end":404410,"line_start":138,"line_end":138,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13840},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404463,"byte_end":404476,"line_start":141,"line_end":141,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":0,"index":13849},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404519,"byte_end":404527,"line_start":144,"line_end":144,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":5108}},{"kind":"Use","ref_id":{"krate":20,"index":49},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":12262,"byte_end":12274,"line_start":341,"line_end":341,"column_start":5,"column_end":17},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6528},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":12276,"byte_end":12291,"line_start":341,"line_end":341,"column_start":19,"column_end":34},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":39},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":12293,"byte_end":12302,"line_start":341,"line_end":341,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6495},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":12304,"byte_end":12316,"line_start":341,"line_end":341,"column_start":47,"column_end":59},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":47},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":12318,"byte_end":12327,"line_start":341,"line_end":341,"column_start":61,"column_end":70},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6523},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":12329,"byte_end":12341,"line_start":341,"line_end":341,"column_start":72,"column_end":84},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":42},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":12343,"byte_end":12353,"line_start":341,"line_end":341,"column_start":86,"column_end":96},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6512},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":12359,"byte_end":12372,"line_start":342,"line_end":342,"column_start":5,"column_end":18},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":13991},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mod.rs","byte_start":499694,"byte_end":499710,"line_start":10,"line_end":10,"column_start":27,"column_end":43},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":6567}},{"kind":"Use","ref_id":{"krate":0,"index":13912},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mod.rs","byte_start":499712,"byte_end":499717,"line_start":10,"line_end":10,"column_start":45,"column_end":50},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":6567}},{"kind":"Use","ref_id":{"krate":0,"index":13949},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mod.rs","byte_start":499719,"byte_end":499734,"line_start":10,"line_end":10,"column_start":52,"column_end":67},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":6567}},{"kind":"Use","ref_id":{"krate":0,"index":13968},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mod.rs","byte_start":499736,"byte_end":499746,"line_start":10,"line_end":10,"column_start":69,"column_end":79},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":6567}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":0,"byte_end":12445,"line_start":1,"line_end":349,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":156},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1867},{"krate":0,"index":1870},{"krate":0,"index":1873},{"krate":0,"index":1876},{"krate":0,"index":5010},{"krate":0,"index":5011},{"krate":0,"index":5014},{"krate":0,"index":5017},{"krate":0,"index":5020},{"krate":0,"index":5023},{"krate":0,"index":5106},{"krate":0,"index":5108},{"krate":0,"index":6542},{"krate":0,"index":6543},{"krate":0,"index":6546},{"krate":0,"index":6549},{"krate":0,"index":6552},{"krate":0,"index":6555},{"krate":0,"index":6558},{"krate":0,"index":6561},{"krate":0,"index":6564},{"krate":0,"index":6567},{"krate":0,"index":6568},{"krate":0,"index":6782}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":393,"byte_end":499,"line_start":8,"line_end":13,"column_start":1,"column_end":3}},{"value":"warn(clippy :: all)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":667,"byte_end":688,"line_start":16,"line_end":16,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\poll.rs","byte_start":14631,"byte_end":14635,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"poll","qualname":"::async_await::poll::poll","value":"pub fn poll<F: Future + Unpin>(F) -> PollOnce<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\poll.rs","byte_start":14776,"byte_end":14784,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"PollOnce","qualname":"::async_await::poll::PollOnce","value":"PollOnce {  }","parent":null,"children":[{"krate":0,"index":47}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\poll.rs","byte_start":14710,"byte_end":14749,"line_start":28,"line_end":28,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\pending.rs","byte_start":15844,"byte_end":15856,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"pending_once","qualname":"::async_await::pending::pending_once","value":"pub fn pending_once() -> PendingOnce","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\pending.rs","byte_start":15981,"byte_end":15992,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"PendingOnce","qualname":"::async_await::pending::PendingOnce","value":"PendingOnce {  }","parent":null,"children":[{"krate":0,"index":70}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\pending.rs","byte_start":15915,"byte_end":15954,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\random.rs","byte_start":33950,"byte_end":33957,"line_start":13,"line_end":13,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::async_await::random::shuffle","value":"pub fn shuffle<T>(&mut [T])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\mod.rs","byte_start":13647,"byte_end":13659,"line_start":43,"line_end":43,"column_start":8,"column_end":20},"name":"assert_unpin","qualname":"::async_await::assert_unpin","value":"pub fn assert_unpin<T: Unpin>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\mod.rs","byte_start":13622,"byte_end":13639,"line_start":42,"line_end":42,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\mod.rs","byte_start":13721,"byte_end":13740,"line_start":47,"line_end":47,"column_start":8,"column_end":27},"name":"assert_fused_future","qualname":"::async_await::assert_fused_future","value":"pub fn assert_fused_future<T: Future + FusedFuture>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\mod.rs","byte_start":13696,"byte_end":13713,"line_start":46,"line_end":46,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\mod.rs","byte_start":13817,"byte_end":13836,"line_start":51,"line_end":51,"column_start":8,"column_end":27},"name":"assert_fused_stream","qualname":"::async_await::assert_fused_stream","value":"pub fn assert_fused_stream<T: Stream + FusedStream>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\mod.rs","byte_start":13792,"byte_end":13809,"line_start":50,"line_end":50,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1735,"byte_end":1744,"line_start":46,"line_end":46,"column_start":9,"column_end":18},"name":"__private","qualname":"::__private","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"async-await\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1680,"byte_end":1711,"line_start":44,"line_end":44,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":1906,"byte_end":1917,"line_start":54,"line_end":54,"column_start":13,"column_end":24},"name":"async_await","qualname":"::__private::async_await","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":147}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1110},{"krate":0,"index":1113},{"krate":0,"index":1144},{"krate":0,"index":1147},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1187},{"krate":0,"index":1190},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1235},{"krate":0,"index":1238},{"krate":0,"index":1241},{"krate":0,"index":1244},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1301},{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1383},{"krate":0,"index":1386},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1433},{"krate":0,"index":1436},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1639},{"krate":0,"index":1642},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1682},{"krate":0,"index":1685},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1735},{"krate":0,"index":1738},{"krate":0,"index":1857},{"krate":0,"index":9233},{"krate":0,"index":9285},{"krate":0,"index":9286},{"krate":0,"index":9289},{"krate":0,"index":9292},{"krate":0,"index":9295},{"krate":0,"index":9298},{"krate":0,"index":9299},{"krate":0,"index":1860}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35019,"byte_end":35043,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35044,"byte_end":35047,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35048,"byte_end":35073,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35074,"byte_end":35077,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35078,"byte_end":35105,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35106,"byte_end":35185,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35186,"byte_end":35223,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35224,"byte_end":35303,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35304,"byte_end":35379,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\mod.rs","byte_start":35380,"byte_end":35444,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":6821},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\flatten.rs","byte_start":58634,"byte_end":58639,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":6818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6823},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\flatten.rs","byte_start":58668,"byte_end":58674,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":6818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6825},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\flatten.rs","byte_start":58703,"byte_end":58708,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":6818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6818},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\flatten.rs","byte_start":58604,"byte_end":58611,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":6821},{"krate":0,"index":6823},{"krate":0,"index":6825}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6866},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63143,"byte_end":63147,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":6868}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64966,"byte_end":64976,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63344,"byte_end":63412,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63417,"byte_end":63420,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63425,"byte_end":63493,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63498,"byte_end":63543,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63548,"byte_end":63551,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63556,"byte_end":63570,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63575,"byte_end":63578,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63583,"byte_end":63590,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63595,"byte_end":63636,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63641,"byte_end":63672,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63677,"byte_end":63733,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63738,"byte_end":63762,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63767,"byte_end":63802,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63807,"byte_end":63832,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63837,"byte_end":63840,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63845,"byte_end":63894,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63899,"byte_end":63902,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63907,"byte_end":63949,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63954,"byte_end":63993,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63998,"byte_end":64037,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64042,"byte_end":64059,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64064,"byte_end":64067,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64072,"byte_end":64142,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64147,"byte_end":64186,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64191,"byte_end":64232,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64237,"byte_end":64263,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64268,"byte_end":64271,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64276,"byte_end":64286,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64291,"byte_end":64308,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64313,"byte_end":64347,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64352,"byte_end":64399,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64404,"byte_end":64453,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64458,"byte_end":64520,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64525,"byte_end":64549,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64554,"byte_end":64597,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64602,"byte_end":64659,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64664,"byte_end":64739,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64744,"byte_end":64774,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64779,"byte_end":64796,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64801,"byte_end":64815,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64820,"byte_end":64904,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64909,"byte_end":64918,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64923,"byte_end":64928,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64933,"byte_end":64942,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":64947,"byte_end":64954,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":6904},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\map.rs","byte_start":66035,"byte_end":66045,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":6901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6907},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\map.rs","byte_start":66129,"byte_end":66137,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":6901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6901},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\map.rs","byte_start":66013,"byte_end":66016,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":6904},{"krate":0,"index":6907}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12617419,"byte_end":12617428,"line_start":542,"line_end":542,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6952},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":39060,"byte_end":39067,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":6954}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7000},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":39318,"byte_end":39331,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":7002}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7050},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":39671,"byte_end":39674,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7053}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7110},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":39881,"byte_end":39891,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":7112}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7160},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":40097,"byte_end":40104,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":7163}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7222},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":40297,"byte_end":40301,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":7226}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7295},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":40546,"byte_end":40553,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":7298}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7355},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":40794,"byte_end":40804,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":7357}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7403},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":41017,"byte_end":41026,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":7405}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7454},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\catch_unwind.rs","byte_start":67733,"byte_end":67744,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":7456}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":68742,"byte_end":68748,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":68599,"byte_end":68662,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":68663,"byte_end":68730,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":69122,"byte_end":69132,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"WeakShared","qualname":"::future::future::shared::WeakShared","value":"","parent":null,"children":[],"decl_id":null,"docs":" A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.\n","sig":null,"attributes":[{"value":"/ A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":69033,"byte_end":69110,"line_start":29,"line_end":29,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":71153,"byte_end":71157,"line_start":109,"line_end":109,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":70884,"byte_end":70958,"line_start":105,"line_end":105,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":70963,"byte_end":71036,"line_start":106,"line_end":106,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":71041,"byte_end":71109,"line_start":107,"line_end":107,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":71114,"byte_end":71141,"line_start":108,"line_end":108,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":71652,"byte_end":71661,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Shared<Fut>>::downgrade","value":"pub fn downgrade(&Self) -> Option<WeakShared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`WeakShared`] for this [`Shared`].","sig":null,"attributes":[{"value":"/ Creates a new [`WeakShared`] for this [`Shared`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":71509,"byte_end":71562,"line_start":120,"line_end":120,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":71567,"byte_end":71570,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":71575,"byte_end":71640,"line_start":122,"line_end":122,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":72255,"byte_end":72267,"line_start":139,"line_end":139,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<Shared<Fut>>::strong_count","value":"pub fn strong_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of strong pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of strong pointers to this allocation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":71843,"byte_end":71901,"line_start":130,"line_end":130,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":71906,"byte_end":71909,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":71914,"byte_end":71979,"line_start":132,"line_end":132,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":71984,"byte_end":71987,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":71992,"byte_end":72004,"line_start":134,"line_end":134,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":72009,"byte_end":72012,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":72017,"byte_end":72110,"line_start":136,"line_end":136,"column_start":5,"column_end":98}},{"value":"/ can change the strong count at any time, including potentially between calling this method","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":72115,"byte_end":72209,"line_start":137,"line_end":137,"column_start":5,"column_end":99}},{"value":"/ and acting on the result.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":72214,"byte_end":72243,"line_start":138,"line_end":138,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":72775,"byte_end":72785,"line_start":152,"line_end":152,"column_start":12,"column_end":22},"name":"weak_count","qualname":"<Shared<Fut>>::weak_count","value":"pub fn weak_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of weak pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of weak pointers to this allocation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":72367,"byte_end":72423,"line_start":143,"line_end":143,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":72428,"byte_end":72431,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":72436,"byte_end":72501,"line_start":145,"line_end":145,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":72506,"byte_end":72509,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":72514,"byte_end":72526,"line_start":147,"line_end":147,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":72531,"byte_end":72534,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":72539,"byte_end":72632,"line_start":149,"line_end":149,"column_start":5,"column_end":98}},{"value":"/ can change the weak count at any time, including potentially between calling this method","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":72637,"byte_end":72729,"line_start":150,"line_end":150,"column_start":5,"column_end":97}},{"value":"/ and acting on the result.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":72734,"byte_end":72763,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":79407,"byte_end":79414,"line_start":376,"line_end":376,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakShared<Fut>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Shared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade this [`WeakShared`] into a [`Shared`].","sig":null,"attributes":[{"value":"/ Attempts to upgrade this [`WeakShared`] into a [`Shared`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":79217,"byte_end":79279,"line_start":372,"line_end":372,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":79284,"byte_end":79287,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if all clones of the [`Shared`] have been dropped or polled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":79292,"byte_end":79372,"line_start":374,"line_end":374,"column_start":5,"column_end":85}},{"value":"/ to completion.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":79377,"byte_end":79395,"line_start":375,"line_end":375,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42008,"byte_end":42017,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":41909,"byte_end":41983,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":41984,"byte_end":41997,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42849,"byte_end":42852,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42032,"byte_end":42107,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42112,"byte_end":42135,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42140,"byte_end":42143,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42148,"byte_end":42222,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42227,"byte_end":42298,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42303,"byte_end":42365,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42370,"byte_end":42373,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42378,"byte_end":42449,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42454,"byte_end":42525,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42530,"byte_end":42551,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42556,"byte_end":42559,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42564,"byte_end":42578,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42583,"byte_end":42586,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42591,"byte_end":42598,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42603,"byte_end":42644,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42649,"byte_end":42684,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42689,"byte_end":42692,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42697,"byte_end":42726,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42731,"byte_end":42774,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42779,"byte_end":42815,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42820,"byte_end":42829,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42834,"byte_end":42841,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43249,"byte_end":43257,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43022,"byte_end":43097,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43102,"byte_end":43125,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43130,"byte_end":43133,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43138,"byte_end":43216,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43221,"byte_end":43241,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44269,"byte_end":44273,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43416,"byte_end":43492,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43497,"byte_end":43540,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43545,"byte_end":43548,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43553,"byte_end":43624,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43629,"byte_end":43703,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43708,"byte_end":43724,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43729,"byte_end":43732,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43737,"byte_end":43812,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43817,"byte_end":43828,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43833,"byte_end":43836,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43841,"byte_end":43912,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43917,"byte_end":43943,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43948,"byte_end":43951,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43956,"byte_end":43970,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43975,"byte_end":43978,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43983,"byte_end":43990,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":43995,"byte_end":44036,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44041,"byte_end":44076,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44081,"byte_end":44084,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44089,"byte_end":44123,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44128,"byte_end":44193,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44198,"byte_end":44235,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44240,"byte_end":44249,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44254,"byte_end":44261,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45143,"byte_end":45154,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44485,"byte_end":44560,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44565,"byte_end":44586,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44591,"byte_end":44594,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44599,"byte_end":44679,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44684,"byte_end":44756,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44761,"byte_end":44764,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44769,"byte_end":44783,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44788,"byte_end":44791,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44796,"byte_end":44803,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44808,"byte_end":44849,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44854,"byte_end":44889,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44894,"byte_end":44897,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44902,"byte_end":44916,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44921,"byte_end":44949,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44954,"byte_end":44990,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":44995,"byte_end":45007,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45012,"byte_end":45050,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45055,"byte_end":45061,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45066,"byte_end":45069,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45074,"byte_end":45109,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45114,"byte_end":45123,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45128,"byte_end":45135,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45993,"byte_end":46005,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45334,"byte_end":45410,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45415,"byte_end":45436,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45441,"byte_end":45444,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45449,"byte_end":45528,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45533,"byte_end":45605,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45610,"byte_end":45613,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45618,"byte_end":45632,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45637,"byte_end":45640,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45645,"byte_end":45652,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45657,"byte_end":45698,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45703,"byte_end":45738,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45743,"byte_end":45746,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45751,"byte_end":45765,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45770,"byte_end":45798,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45803,"byte_end":45839,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45844,"byte_end":45856,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45861,"byte_end":45899,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45904,"byte_end":45910,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45915,"byte_end":45918,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45923,"byte_end":45959,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45964,"byte_end":45973,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":45978,"byte_end":45985,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46784,"byte_end":46795,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46186,"byte_end":46239,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46244,"byte_end":46247,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46252,"byte_end":46326,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46331,"byte_end":46394,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46399,"byte_end":46402,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46407,"byte_end":46421,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46426,"byte_end":46429,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46434,"byte_end":46441,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46446,"byte_end":46487,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46492,"byte_end":46527,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46532,"byte_end":46567,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46572,"byte_end":46575,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46580,"byte_end":46610,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46615,"byte_end":46653,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46658,"byte_end":46709,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46714,"byte_end":46750,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46755,"byte_end":46764,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46769,"byte_end":46776,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47660,"byte_end":47667,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":46934,"byte_end":46998,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47003,"byte_end":47039,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47044,"byte_end":47047,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47052,"byte_end":47121,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47126,"byte_end":47163,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47168,"byte_end":47171,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47176,"byte_end":47236,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47241,"byte_end":47244,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47249,"byte_end":47320,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47325,"byte_end":47351,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47356,"byte_end":47359,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47364,"byte_end":47378,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47383,"byte_end":47386,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47391,"byte_end":47398,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47403,"byte_end":47444,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47449,"byte_end":47484,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47489,"byte_end":47492,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47497,"byte_end":47543,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47548,"byte_end":47589,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47594,"byte_end":47626,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47631,"byte_end":47640,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47645,"byte_end":47652,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48772,"byte_end":48786,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47881,"byte_end":47956,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47961,"byte_end":47984,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47989,"byte_end":47992,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":47997,"byte_end":48069,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48074,"byte_end":48147,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48152,"byte_end":48166,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48171,"byte_end":48174,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48179,"byte_end":48249,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48254,"byte_end":48272,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48277,"byte_end":48280,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48285,"byte_end":48299,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48304,"byte_end":48307,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48312,"byte_end":48319,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48324,"byte_end":48365,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48370,"byte_end":48405,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48410,"byte_end":48453,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48458,"byte_end":48461,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48466,"byte_end":48506,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48511,"byte_end":48577,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48582,"byte_end":48585,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48590,"byte_end":48643,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48648,"byte_end":48694,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48699,"byte_end":48738,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48743,"byte_end":48752,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48757,"byte_end":48764,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":49874,"byte_end":49878,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":48979,"byte_end":49052,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":49057,"byte_end":49123,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":49128,"byte_end":49146,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":49151,"byte_end":49154,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":49159,"byte_end":49226,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":49231,"byte_end":49296,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":49301,"byte_end":49373,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":49378,"byte_end":49452,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":49457,"byte_end":49483,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":49488,"byte_end":49491,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":49496,"byte_end":49567,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":49572,"byte_end":49647,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":49652,"byte_end":49706,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":49711,"byte_end":49714,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":49719,"byte_end":49793,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":49798,"byte_end":49866,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50718,"byte_end":50725,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50024,"byte_end":50090,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50095,"byte_end":50098,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50103,"byte_end":50178,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50183,"byte_end":50256,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50261,"byte_end":50330,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50335,"byte_end":50385,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50390,"byte_end":50393,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50398,"byte_end":50412,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50417,"byte_end":50420,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50425,"byte_end":50432,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50437,"byte_end":50478,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50483,"byte_end":50518,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50523,"byte_end":50526,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50531,"byte_end":50560,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50565,"byte_end":50643,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50648,"byte_end":50684,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50689,"byte_end":50698,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50703,"byte_end":50710,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52263,"byte_end":52275,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50907,"byte_end":50961,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50966,"byte_end":50969,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":50974,"byte_end":51049,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51054,"byte_end":51128,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51133,"byte_end":51207,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51212,"byte_end":51263,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51268,"byte_end":51271,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51276,"byte_end":51351,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51356,"byte_end":51426,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51431,"byte_end":51498,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51503,"byte_end":51578,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51583,"byte_end":51655,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51660,"byte_end":51663,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51668,"byte_end":51732,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51737,"byte_end":51794,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51799,"byte_end":51802,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51807,"byte_end":51821,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51826,"byte_end":51829,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51834,"byte_end":51841,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51846,"byte_end":51887,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51892,"byte_end":51942,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51947,"byte_end":51950,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51955,"byte_end":51989,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":51994,"byte_end":52043,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52048,"byte_end":52051,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52056,"byte_end":52105,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52110,"byte_end":52134,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52139,"byte_end":52146,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52151,"byte_end":52201,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52206,"byte_end":52215,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52220,"byte_end":52227,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52232,"byte_end":52255,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":54027,"byte_end":54033,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52505,"byte_end":52580,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52585,"byte_end":52608,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52613,"byte_end":52616,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52621,"byte_end":52695,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52700,"byte_end":52773,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52778,"byte_end":52790,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52795,"byte_end":52798,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52803,"byte_end":52867,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52872,"byte_end":52929,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52934,"byte_end":52937,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52942,"byte_end":52956,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52961,"byte_end":52964,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52969,"byte_end":52976,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":52981,"byte_end":53022,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53027,"byte_end":53062,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53067,"byte_end":53070,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53075,"byte_end":53104,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53109,"byte_end":53143,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53148,"byte_end":53182,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53187,"byte_end":53190,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53195,"byte_end":53228,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53233,"byte_end":53266,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53271,"byte_end":53280,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53285,"byte_end":53292,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53297,"byte_end":53300,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53305,"byte_end":53312,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53317,"byte_end":53386,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53391,"byte_end":53466,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53471,"byte_end":53502,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53507,"byte_end":53510,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53515,"byte_end":53556,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53561,"byte_end":53596,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53601,"byte_end":53637,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53642,"byte_end":53662,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53667,"byte_end":53670,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53675,"byte_end":53704,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53709,"byte_end":53743,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53748,"byte_end":53782,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53787,"byte_end":53832,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53837,"byte_end":53878,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53883,"byte_end":53890,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53895,"byte_end":53928,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53933,"byte_end":53965,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53970,"byte_end":53979,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53984,"byte_end":53991,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":53996,"byte_end":54019,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":55195,"byte_end":55200,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":54966,"byte_end":55007,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":55012,"byte_end":55015,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":55020,"byte_end":55095,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":55100,"byte_end":55157,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":55162,"byte_end":55187,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":55660,"byte_end":55671,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":55359,"byte_end":55400,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":55405,"byte_end":55408,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":55413,"byte_end":55472,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":55477,"byte_end":55480,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":55485,"byte_end":55560,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":55565,"byte_end":55622,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":55627,"byte_end":55652,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":55961,"byte_end":55971,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":55828,"byte_end":55877,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":55882,"byte_end":55953,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":56256,"byte_end":56267,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":56120,"byte_end":56169,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":56174,"byte_end":56248,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":56498,"byte_end":56508,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":56421,"byte_end":56490,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57904,"byte_end":57916,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":56644,"byte_end":56716,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":56721,"byte_end":56784,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":56789,"byte_end":56792,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":56797,"byte_end":56863,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":56868,"byte_end":56871,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":56876,"byte_end":56949,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":56954,"byte_end":57023,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57028,"byte_end":57098,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57103,"byte_end":57106,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57111,"byte_end":57125,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57130,"byte_end":57133,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57138,"byte_end":57145,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57150,"byte_end":57180,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57185,"byte_end":57235,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57240,"byte_end":57279,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57284,"byte_end":57335,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57340,"byte_end":57343,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57348,"byte_end":57408,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57413,"byte_end":57465,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57470,"byte_end":57477,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57482,"byte_end":57485,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57490,"byte_end":57559,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57564,"byte_end":57637,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57642,"byte_end":57674,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57679,"byte_end":57682,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57687,"byte_end":57694,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57699,"byte_end":57746,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57751,"byte_end":57790,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57795,"byte_end":57798,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57803,"byte_end":57884,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":57889,"byte_end":57896,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7490},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\into_future.rs","byte_start":101591,"byte_end":101601,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":7492}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":7528},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten.rs","byte_start":102586,"byte_end":102591,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":7525},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7530},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten.rs","byte_start":102620,"byte_end":102626,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":7525},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7532},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten.rs","byte_start":102655,"byte_end":102660,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":7525},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7525},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten.rs","byte_start":102553,"byte_end":102563,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":7528},{"krate":0,"index":7530},{"krate":0,"index":7532}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7575},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten_err.rs","byte_start":107785,"byte_end":107790,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":7572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7577},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten_err.rs","byte_start":107819,"byte_end":107825,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":7572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7579},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten_err.rs","byte_start":107854,"byte_end":107859,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":7572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7572},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten_err.rs","byte_start":107749,"byte_end":107762,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":7575},{"krate":0,"index":7577},{"krate":0,"index":7579}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7618},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":80426,"byte_end":80436,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":7621}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7679},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":80684,"byte_end":80697,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":7682}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7739},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":80965,"byte_end":80981,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":7741}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7790},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":81569,"byte_end":81576,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":7794}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7864},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":81816,"byte_end":81822,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":7868}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7937},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":82072,"byte_end":82079,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":7940}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7998},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":82287,"byte_end":82293,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":8001}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8059},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":82512,"byte_end":82521,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":8062}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8120},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":82793,"byte_end":82803,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":8123}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8181},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":83176,"byte_end":83181,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":8184}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8242},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":83422,"byte_end":83428,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":8245}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8304},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":83685,"byte_end":83696,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":8308}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8377},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":83980,"byte_end":83992,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":8380}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":84282,"byte_end":84294,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":855},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":881}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":84218,"byte_end":84271,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":87054,"byte_end":87060,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":85682,"byte_end":85740,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":85745,"byte_end":85748,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":85753,"byte_end":85828,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":85833,"byte_end":85903,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":85908,"byte_end":85981,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":85986,"byte_end":86015,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86020,"byte_end":86023,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86028,"byte_end":86103,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86108,"byte_end":86183,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86188,"byte_end":86235,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86240,"byte_end":86243,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86248,"byte_end":86323,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86328,"byte_end":86354,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86359,"byte_end":86362,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86367,"byte_end":86381,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86386,"byte_end":86389,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86394,"byte_end":86401,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86406,"byte_end":86444,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86449,"byte_end":86452,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86457,"byte_end":86498,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86503,"byte_end":86548,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86553,"byte_end":86595,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86600,"byte_end":86636,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86641,"byte_end":86650,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86655,"byte_end":86662,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86667,"byte_end":86670,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86675,"byte_end":86747,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86752,"byte_end":86763,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86768,"byte_end":86771,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86776,"byte_end":86783,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86788,"byte_end":86826,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86831,"byte_end":86834,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86839,"byte_end":86880,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86885,"byte_end":86931,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86936,"byte_end":86978,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":86983,"byte_end":87020,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":87025,"byte_end":87034,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":87039,"byte_end":87046,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88619,"byte_end":88633,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":87251,"byte_end":87368,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":87373,"byte_end":87376,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":87381,"byte_end":87503,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":87508,"byte_end":87558,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":87563,"byte_end":87566,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":87571,"byte_end":87646,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":87651,"byte_end":87726,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":87731,"byte_end":87778,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":87783,"byte_end":87786,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":87791,"byte_end":87866,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":87871,"byte_end":87946,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":87951,"byte_end":87998,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88003,"byte_end":88006,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88011,"byte_end":88086,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88091,"byte_end":88117,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88122,"byte_end":88125,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88130,"byte_end":88144,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88149,"byte_end":88152,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88157,"byte_end":88164,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88169,"byte_end":88207,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88212,"byte_end":88215,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88220,"byte_end":88261,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88266,"byte_end":88311,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88316,"byte_end":88377,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88382,"byte_end":88414,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88419,"byte_end":88422,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88427,"byte_end":88473,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88478,"byte_end":88539,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88544,"byte_end":88577,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88582,"byte_end":88591,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88596,"byte_end":88603,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88608,"byte_end":88611,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90316,"byte_end":90323,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88867,"byte_end":88923,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88928,"byte_end":88931,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":88936,"byte_end":89010,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89015,"byte_end":89076,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89081,"byte_end":89151,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89156,"byte_end":89231,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89236,"byte_end":89271,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89276,"byte_end":89279,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89284,"byte_end":89359,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89364,"byte_end":89439,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89444,"byte_end":89491,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89496,"byte_end":89499,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89504,"byte_end":89579,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89584,"byte_end":89610,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89615,"byte_end":89618,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89623,"byte_end":89637,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89642,"byte_end":89645,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89650,"byte_end":89657,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89662,"byte_end":89700,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89705,"byte_end":89708,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89713,"byte_end":89754,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89759,"byte_end":89805,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89810,"byte_end":89853,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89858,"byte_end":89895,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89900,"byte_end":89909,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89914,"byte_end":89921,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89926,"byte_end":89929,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":89934,"byte_end":90007,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90012,"byte_end":90026,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90031,"byte_end":90034,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90039,"byte_end":90046,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90051,"byte_end":90089,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90094,"byte_end":90097,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90102,"byte_end":90143,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90148,"byte_end":90193,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90198,"byte_end":90241,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90246,"byte_end":90282,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90287,"byte_end":90296,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90301,"byte_end":90308,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91413,"byte_end":91421,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90516,"byte_end":90586,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90591,"byte_end":90640,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90645,"byte_end":90648,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90653,"byte_end":90716,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90721,"byte_end":90789,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90794,"byte_end":90867,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90872,"byte_end":90948,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":90953,"byte_end":90998,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91003,"byte_end":91006,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91011,"byte_end":91086,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91091,"byte_end":91117,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91122,"byte_end":91125,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91130,"byte_end":91144,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91149,"byte_end":91152,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91157,"byte_end":91164,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91169,"byte_end":91207,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91212,"byte_end":91215,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91220,"byte_end":91261,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91266,"byte_end":91317,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91322,"byte_end":91379,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91384,"byte_end":91393,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91398,"byte_end":91405,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91717,"byte_end":91724,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91597,"byte_end":91655,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91660,"byte_end":91709,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":93279,"byte_end":93287,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91898,"byte_end":91967,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":91972,"byte_end":92046,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92051,"byte_end":92054,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92059,"byte_end":92134,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92139,"byte_end":92209,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92214,"byte_end":92279,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92284,"byte_end":92350,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92355,"byte_end":92389,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92394,"byte_end":92397,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92402,"byte_end":92477,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92482,"byte_end":92508,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92513,"byte_end":92516,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92521,"byte_end":92535,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92540,"byte_end":92543,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92548,"byte_end":92555,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92560,"byte_end":92598,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92603,"byte_end":92606,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92611,"byte_end":92652,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92657,"byte_end":92702,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92707,"byte_end":92782,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92787,"byte_end":92823,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92828,"byte_end":92837,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92842,"byte_end":92849,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92854,"byte_end":92857,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92862,"byte_end":92938,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92943,"byte_end":92954,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92959,"byte_end":92962,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92967,"byte_end":92974,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":92979,"byte_end":93017,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":93022,"byte_end":93025,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":93030,"byte_end":93071,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":93076,"byte_end":93122,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":93127,"byte_end":93203,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":93208,"byte_end":93245,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":93250,"byte_end":93259,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":93264,"byte_end":93271,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94908,"byte_end":94915,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":93541,"byte_end":93606,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":93611,"byte_end":93683,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":93688,"byte_end":93691,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":93696,"byte_end":93771,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":93776,"byte_end":93846,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":93851,"byte_end":93916,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":93921,"byte_end":93997,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94002,"byte_end":94020,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94025,"byte_end":94028,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94033,"byte_end":94108,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94113,"byte_end":94139,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94144,"byte_end":94147,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94152,"byte_end":94166,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94171,"byte_end":94174,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94179,"byte_end":94186,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94191,"byte_end":94229,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94234,"byte_end":94237,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94242,"byte_end":94283,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94288,"byte_end":94334,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94339,"byte_end":94414,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94419,"byte_end":94456,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94461,"byte_end":94470,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94475,"byte_end":94482,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94487,"byte_end":94490,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94495,"byte_end":94568,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94573,"byte_end":94587,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94592,"byte_end":94595,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94600,"byte_end":94607,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94612,"byte_end":94650,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94655,"byte_end":94658,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94663,"byte_end":94704,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94709,"byte_end":94754,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94759,"byte_end":94833,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94838,"byte_end":94874,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94879,"byte_end":94888,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":94893,"byte_end":94900,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95891,"byte_end":95901,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95164,"byte_end":95237,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95242,"byte_end":95245,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95250,"byte_end":95325,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95330,"byte_end":95403,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95408,"byte_end":95477,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95482,"byte_end":95535,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95540,"byte_end":95543,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95548,"byte_end":95562,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95567,"byte_end":95570,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95575,"byte_end":95582,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95587,"byte_end":95628,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95633,"byte_end":95671,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95676,"byte_end":95679,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95684,"byte_end":95726,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95731,"byte_end":95812,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95817,"byte_end":95857,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95862,"byte_end":95871,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":95876,"byte_end":95883,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96827,"byte_end":96838,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96100,"byte_end":96171,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96176,"byte_end":96179,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96184,"byte_end":96259,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96264,"byte_end":96337,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96342,"byte_end":96411,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96416,"byte_end":96470,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96475,"byte_end":96478,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96483,"byte_end":96497,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96502,"byte_end":96505,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96510,"byte_end":96517,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96522,"byte_end":96563,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96568,"byte_end":96606,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96611,"byte_end":96614,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96619,"byte_end":96662,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96667,"byte_end":96747,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96752,"byte_end":96793,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96798,"byte_end":96807,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":96812,"byte_end":96819,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97223,"byte_end":97234,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97042,"byte_end":97117,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97122,"byte_end":97151,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97156,"byte_end":97159,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97164,"byte_end":97215,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":98413,"byte_end":98431,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97469,"byte_end":97544,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97549,"byte_end":97572,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97577,"byte_end":97580,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97585,"byte_end":97657,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97662,"byte_end":97735,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97740,"byte_end":97754,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97759,"byte_end":97762,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97767,"byte_end":97837,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97842,"byte_end":97860,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97865,"byte_end":97868,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97873,"byte_end":97887,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97892,"byte_end":97895,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97900,"byte_end":97907,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97912,"byte_end":97953,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":97958,"byte_end":97996,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":98001,"byte_end":98047,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":98052,"byte_end":98055,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":98060,"byte_end":98120,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":98125,"byte_end":98204,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":98209,"byte_end":98212,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":98217,"byte_end":98274,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":98279,"byte_end":98331,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":98336,"byte_end":98379,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":98384,"byte_end":98393,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":98398,"byte_end":98405,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":99522,"byte_end":99536,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":98691,"byte_end":98762,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":98767,"byte_end":98804,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":98809,"byte_end":98858,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":98863,"byte_end":98866,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":98871,"byte_end":98940,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":98945,"byte_end":99018,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":99023,"byte_end":99093,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":99098,"byte_end":99116,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":99121,"byte_end":99124,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":99129,"byte_end":99197,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":99202,"byte_end":99205,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":99210,"byte_end":99224,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":99229,"byte_end":99232,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":99237,"byte_end":99244,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":99249,"byte_end":99287,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":99292,"byte_end":99295,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":99300,"byte_end":99341,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":99346,"byte_end":99398,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":99403,"byte_end":99450,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":99455,"byte_end":99488,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":99493,"byte_end":99502,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":99507,"byte_end":99514,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100791,"byte_end":100802,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100090,"byte_end":100143,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100148,"byte_end":100184,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100189,"byte_end":100192,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100197,"byte_end":100246,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100251,"byte_end":100318,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100323,"byte_end":100336,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100341,"byte_end":100344,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100349,"byte_end":100363,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100368,"byte_end":100371,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100376,"byte_end":100383,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100388,"byte_end":100447,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100452,"byte_end":100455,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100460,"byte_end":100479,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100484,"byte_end":100502,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100507,"byte_end":100579,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100584,"byte_end":100616,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100621,"byte_end":100628,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100633,"byte_end":100709,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100714,"byte_end":100717,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100722,"byte_end":100771,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100776,"byte_end":100783,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":101061,"byte_end":101075,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":100958,"byte_end":101031,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":101036,"byte_end":101053,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":8435},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109584,"byte_end":109588,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":8437}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109450,"byte_end":109487,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109505,"byte_end":109572,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":110129,"byte_end":110133,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109692,"byte_end":109760,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109761,"byte_end":109764,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109765,"byte_end":109828,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109829,"byte_end":109832,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109833,"byte_end":109847,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109848,"byte_end":109851,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109852,"byte_end":109859,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109860,"byte_end":109901,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109902,"byte_end":109926,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109927,"byte_end":109930,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109931,"byte_end":109963,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109964,"byte_end":109991,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109992,"byte_end":109995,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109996,"byte_end":110033,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":110034,"byte_end":110058,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":110059,"byte_end":110066,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":110067,"byte_end":110103,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":110104,"byte_end":110113,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":110114,"byte_end":110121,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8441},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":110948,"byte_end":110955,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":8443}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":110809,"byte_end":110851,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":110869,"byte_end":110936,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111474,"byte_end":111481,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111096,"byte_end":111176,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111177,"byte_end":111190,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111191,"byte_end":111194,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111195,"byte_end":111257,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111258,"byte_end":111261,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111262,"byte_end":111276,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111277,"byte_end":111280,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111281,"byte_end":111294,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111295,"byte_end":111336,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111337,"byte_end":111361,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111362,"byte_end":111365,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111366,"byte_end":111401,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111402,"byte_end":111428,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111429,"byte_end":111448,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111449,"byte_end":111458,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111459,"byte_end":111466,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8449},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112267,"byte_end":112273,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":8447},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112232,"byte_end":112262,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8452},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112340,"byte_end":112344,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":8447},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112297,"byte_end":112335,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8455},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112506,"byte_end":112510,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":8447},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112363,"byte_end":112429,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112434,"byte_end":112501,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":8447},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112203,"byte_end":112212,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":8449},{"krate":0,"index":8452},{"krate":0,"index":8455}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112081,"byte_end":112118,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112119,"byte_end":112122,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112123,"byte_end":112176,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":113031,"byte_end":113041,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112570,"byte_end":112607,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112608,"byte_end":112611,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112612,"byte_end":112626,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112627,"byte_end":112630,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112631,"byte_end":112638,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112639,"byte_end":112680,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112681,"byte_end":112705,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112706,"byte_end":112731,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112732,"byte_end":112735,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112736,"byte_end":112785,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112786,"byte_end":112807,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112808,"byte_end":112860,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112861,"byte_end":112896,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112897,"byte_end":112952,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112953,"byte_end":113005,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":113006,"byte_end":113015,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":113016,"byte_end":113023,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":113482,"byte_end":113492,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":113184,"byte_end":113269,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":113274,"byte_end":113345,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":113350,"byte_end":113423,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":113428,"byte_end":113456,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":113461,"byte_end":113470,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":113840,"byte_end":113851,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":113720,"byte_end":113786,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":113791,"byte_end":113814,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":113819,"byte_end":113828,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8462},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":115476,"byte_end":115482,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":8460},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":115441,"byte_end":115471,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8465},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":115549,"byte_end":115553,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":8460},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":115506,"byte_end":115544,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8468},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":115761,"byte_end":115765,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":8460},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":115568,"byte_end":115637,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":115642,"byte_end":115712,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":115717,"byte_end":115756,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":8460},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":115406,"byte_end":115418,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> { Future(Fut), Done(Fut::Ok), Gone, }","parent":null,"children":[{"krate":0,"index":8462},{"krate":0,"index":8465},{"krate":0,"index":8468}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":115266,"byte_end":115317,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":115318,"byte_end":115321,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":115322,"byte_end":115379,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":115879,"byte_end":115893,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":115831,"byte_end":115871,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":116380,"byte_end":116390,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":116071,"byte_end":116156,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":116161,"byte_end":116232,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":116237,"byte_end":116321,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":116326,"byte_end":116354,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":116359,"byte_end":116368,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":116740,"byte_end":116751,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":116617,"byte_end":116686,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":116691,"byte_end":116714,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":116719,"byte_end":116728,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8478},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\option.rs","byte_start":119027,"byte_end":119039,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":8480}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120077,"byte_end":120083,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":1169}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":119957,"byte_end":119997,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":119998,"byte_end":120065,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120670,"byte_end":120677,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120134,"byte_end":120205,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120206,"byte_end":120209,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120210,"byte_end":120276,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120277,"byte_end":120280,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120281,"byte_end":120295,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120296,"byte_end":120299,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120300,"byte_end":120307,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120308,"byte_end":120349,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120350,"byte_end":120383,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120384,"byte_end":120423,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120424,"byte_end":120427,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120428,"byte_end":120485,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120486,"byte_end":120529,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120530,"byte_end":120535,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120536,"byte_end":120539,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120540,"byte_end":120581,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120582,"byte_end":120644,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120645,"byte_end":120654,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120655,"byte_end":120662,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8512},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":121446,"byte_end":121451,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":121295,"byte_end":121342,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":121367,"byte_end":121434,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":121574,"byte_end":121584,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":121491,"byte_end":121548,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":121553,"byte_end":121562,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122250,"byte_end":122255,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122004,"byte_end":122064,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122065,"byte_end":122068,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122069,"byte_end":122083,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122084,"byte_end":122087,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122088,"byte_end":122095,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122096,"byte_end":122137,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122138,"byte_end":122162,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122163,"byte_end":122166,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122167,"byte_end":122196,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122197,"byte_end":122224,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122225,"byte_end":122234,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122235,"byte_end":122242,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122590,"byte_end":122592,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122324,"byte_end":122391,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122392,"byte_end":122395,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122396,"byte_end":122410,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122411,"byte_end":122414,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122415,"byte_end":122422,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122423,"byte_end":122464,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122465,"byte_end":122489,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122490,"byte_end":122493,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122494,"byte_end":122532,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122533,"byte_end":122564,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122565,"byte_end":122574,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122575,"byte_end":122582,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122923,"byte_end":122926,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122656,"byte_end":122722,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122723,"byte_end":122726,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122727,"byte_end":122741,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122742,"byte_end":122745,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122746,"byte_end":122753,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122754,"byte_end":122795,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122796,"byte_end":122820,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122821,"byte_end":122824,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122825,"byte_end":122864,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122865,"byte_end":122897,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122898,"byte_end":122907,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":122908,"byte_end":122915,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8614},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125212,"byte_end":125216,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":8617},{"krate":0,"index":8618}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8659},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125282,"byte_end":125287,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":8663},{"krate":0,"index":8664},{"krate":0,"index":8665}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8716},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125359,"byte_end":125364,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":8721},{"krate":0,"index":8722},{"krate":0,"index":8723},{"krate":0,"index":8724}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8785},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125442,"byte_end":125447,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":8791},{"krate":0,"index":8792},{"krate":0,"index":8793},{"krate":0,"index":8794},{"krate":0,"index":8795}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126062,"byte_end":126066,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125485,"byte_end":125556,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125557,"byte_end":125560,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125561,"byte_end":125632,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125633,"byte_end":125708,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125709,"byte_end":125712,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125713,"byte_end":125782,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125783,"byte_end":125809,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125810,"byte_end":125813,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125814,"byte_end":125828,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125829,"byte_end":125832,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125833,"byte_end":125840,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125841,"byte_end":125882,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125883,"byte_end":125907,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125908,"byte_end":125911,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125912,"byte_end":125936,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125937,"byte_end":125961,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125962,"byte_end":125996,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":125997,"byte_end":126000,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126001,"byte_end":126036,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126037,"byte_end":126046,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126047,"byte_end":126054,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126612,"byte_end":126617,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126273,"byte_end":126325,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126326,"byte_end":126329,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126330,"byte_end":126344,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126345,"byte_end":126348,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126349,"byte_end":126356,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126357,"byte_end":126398,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126399,"byte_end":126423,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126424,"byte_end":126427,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126428,"byte_end":126452,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126453,"byte_end":126477,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126478,"byte_end":126502,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126503,"byte_end":126542,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126543,"byte_end":126546,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126547,"byte_end":126586,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126587,"byte_end":126596,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126597,"byte_end":126604,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127279,"byte_end":127284,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126909,"byte_end":126961,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126962,"byte_end":126965,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126966,"byte_end":126980,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126981,"byte_end":126984,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126985,"byte_end":126992,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":126993,"byte_end":127034,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127035,"byte_end":127059,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127060,"byte_end":127063,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127064,"byte_end":127088,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127089,"byte_end":127113,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127114,"byte_end":127138,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127139,"byte_end":127163,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127164,"byte_end":127206,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127207,"byte_end":127210,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127211,"byte_end":127253,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127254,"byte_end":127263,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127264,"byte_end":127271,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":128049,"byte_end":128054,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127648,"byte_end":127700,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127701,"byte_end":127704,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127705,"byte_end":127719,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127720,"byte_end":127723,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127724,"byte_end":127731,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127732,"byte_end":127773,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127774,"byte_end":127798,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127799,"byte_end":127802,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127803,"byte_end":127827,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127828,"byte_end":127852,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127853,"byte_end":127877,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127878,"byte_end":127902,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127903,"byte_end":127927,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127928,"byte_end":127973,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127974,"byte_end":127977,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":127978,"byte_end":128023,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":128024,"byte_end":128033,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join.rs","byte_start":128034,"byte_end":128041,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1362},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":129433,"byte_end":129440,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1364}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":129312,"byte_end":129353,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":129354,"byte_end":129421,"line_start":25,"line_end":25,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":131080,"byte_end":131088,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":129773,"byte_end":129853,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":129854,"byte_end":129864,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":129865,"byte_end":129868,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":129869,"byte_end":129948,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":129949,"byte_end":130029,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130030,"byte_end":130048,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130049,"byte_end":130052,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130053,"byte_end":130130,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130131,"byte_end":130188,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130189,"byte_end":130192,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130193,"byte_end":130207,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130208,"byte_end":130211,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This is purposefully a very simple API for basic use-cases. In a lot of","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130212,"byte_end":130287,"line_start":57,"line_end":57,"column_start":1,"column_end":76}},{"value":"/ cases you will want to use the more powerful","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130288,"byte_end":130336,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"/ [`FuturesOrdered`][crate::stream::FuturesOrdered] APIs, or, if order does","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130337,"byte_end":130414,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ not matter, [`FuturesUnordered`][crate::stream::FuturesUnordered].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130415,"byte_end":130485,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130486,"byte_end":130489,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130490,"byte_end":130559,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130560,"byte_end":130563,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130564,"byte_end":130632,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130633,"byte_end":130636,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130637,"byte_end":130714,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130715,"byte_end":130796,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130797,"byte_end":130800,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130801,"byte_end":130815,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130816,"byte_end":130819,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130820,"byte_end":130827,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130828,"byte_end":130869,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130870,"byte_end":130904,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130905,"byte_end":130908,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130909,"byte_end":130946,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130947,"byte_end":130950,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130951,"byte_end":130998,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":130999,"byte_end":131002,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":131003,"byte_end":131054,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":131055,"byte_end":131064,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":131065,"byte_end":131072,"line_start":81,"line_end":81,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8866},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":132481,"byte_end":132487,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":8869}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":132343,"byte_end":132384,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":132385,"byte_end":132452,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134753,"byte_end":134759,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":132578,"byte_end":132648,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":132649,"byte_end":132652,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":132653,"byte_end":132731,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":132732,"byte_end":132808,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":132809,"byte_end":132881,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":132882,"byte_end":132885,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":132886,"byte_end":132958,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":132959,"byte_end":132987,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":132988,"byte_end":132991,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":132992,"byte_end":133059,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133060,"byte_end":133124,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133125,"byte_end":133175,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133176,"byte_end":133179,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133180,"byte_end":133194,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133195,"byte_end":133198,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133199,"byte_end":133219,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133220,"byte_end":133223,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133224,"byte_end":133231,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133232,"byte_end":133273,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133274,"byte_end":133292,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133293,"byte_end":133309,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133310,"byte_end":133333,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133334,"byte_end":133355,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133356,"byte_end":133362,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/ ","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133363,"byte_end":133367,"line_start":40,"line_end":40,"column_start":1,"column_end":5}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133368,"byte_end":133459,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133460,"byte_end":133485,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133486,"byte_end":133545,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133546,"byte_end":133555,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133556,"byte_end":133562,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async { ","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133563,"byte_end":133589,"line_start":46,"line_end":46,"column_start":1,"column_end":27}},{"value":"/     future::ready(2).await","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133590,"byte_end":133620,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133621,"byte_end":133627,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133628,"byte_end":133631,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133632,"byte_end":133678,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133679,"byte_end":133701,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133702,"byte_end":133724,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133725,"byte_end":133728,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133729,"byte_end":133791,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133792,"byte_end":133876,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133877,"byte_end":133950,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":133951,"byte_end":134035,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134036,"byte_end":134109,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134110,"byte_end":134116,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134117,"byte_end":134120,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134121,"byte_end":134145,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134146,"byte_end":134155,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134156,"byte_end":134163,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134164,"byte_end":134167,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134168,"byte_end":134194,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134195,"byte_end":134198,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134199,"byte_end":134206,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134207,"byte_end":134266,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134267,"byte_end":134270,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134271,"byte_end":134324,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134325,"byte_end":134328,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134329,"byte_end":134404,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134405,"byte_end":134437,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134438,"byte_end":134470,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134471,"byte_end":134476,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134477,"byte_end":134521,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134522,"byte_end":134548,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134549,"byte_end":134626,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134627,"byte_end":134706,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134707,"byte_end":134720,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134721,"byte_end":134731,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134732,"byte_end":134737,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134738,"byte_end":134745,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8874},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136197,"byte_end":136206,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":8876}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136057,"byte_end":136100,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136118,"byte_end":136185,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1467},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136986,"byte_end":136996,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136284,"byte_end":136350,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136351,"byte_end":136354,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136355,"byte_end":136435,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136436,"byte_end":136514,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136515,"byte_end":136583,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136584,"byte_end":136587,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136588,"byte_end":136668,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136669,"byte_end":136743,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136744,"byte_end":136747,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136748,"byte_end":136825,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136826,"byte_end":136883,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136884,"byte_end":136887,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136888,"byte_end":136900,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136901,"byte_end":136904,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136905,"byte_end":136978,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":137395,"byte_end":137405,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"pub fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":137320,"byte_end":137383,"line_start":46,"line_end":46,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8950},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141202,"byte_end":141209,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":8953},{"krate":0,"index":8954}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8995},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141279,"byte_end":141287,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":8999},{"krate":0,"index":9000},{"krate":0,"index":9001}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9052},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141363,"byte_end":141371,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":9057},{"krate":0,"index":9058},{"krate":0,"index":9059},{"krate":0,"index":9060}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9121},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141453,"byte_end":141461,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":9127},{"krate":0,"index":9128},{"krate":0,"index":9129},{"krate":0,"index":9130},{"krate":0,"index":9131}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1523},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142734,"byte_end":142742,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141499,"byte_end":141572,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141573,"byte_end":141605,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141606,"byte_end":141609,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141610,"byte_end":141681,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141682,"byte_end":141758,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141759,"byte_end":141831,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141832,"byte_end":141848,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141849,"byte_end":141852,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141853,"byte_end":141922,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141923,"byte_end":141949,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141950,"byte_end":141953,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141954,"byte_end":141968,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141969,"byte_end":141972,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":141973,"byte_end":142049,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142050,"byte_end":142086,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142087,"byte_end":142090,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142091,"byte_end":142098,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142099,"byte_end":142140,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142141,"byte_end":142165,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142166,"byte_end":142169,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142170,"byte_end":142215,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142216,"byte_end":142261,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142262,"byte_end":142300,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142301,"byte_end":142304,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142305,"byte_end":142344,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142345,"byte_end":142354,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142355,"byte_end":142362,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142363,"byte_end":142366,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142367,"byte_end":142437,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142438,"byte_end":142453,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142454,"byte_end":142457,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142458,"byte_end":142465,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142466,"byte_end":142507,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142508,"byte_end":142532,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142533,"byte_end":142536,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142537,"byte_end":142582,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142583,"byte_end":142629,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142630,"byte_end":142668,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142669,"byte_end":142672,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142673,"byte_end":142708,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142709,"byte_end":142718,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142719,"byte_end":142726,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1526},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143398,"byte_end":143407,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":142980,"byte_end":143040,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143041,"byte_end":143044,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143045,"byte_end":143059,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143060,"byte_end":143063,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143064,"byte_end":143071,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143072,"byte_end":143113,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143114,"byte_end":143138,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143139,"byte_end":143142,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143143,"byte_end":143188,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143189,"byte_end":143234,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143235,"byte_end":143280,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143281,"byte_end":143324,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143325,"byte_end":143328,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143329,"byte_end":143372,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143373,"byte_end":143382,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143383,"byte_end":143390,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1530},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144235,"byte_end":144244,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143765,"byte_end":143825,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143826,"byte_end":143829,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143830,"byte_end":143844,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143845,"byte_end":143848,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143849,"byte_end":143856,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143857,"byte_end":143898,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143899,"byte_end":143923,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143924,"byte_end":143927,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143928,"byte_end":143973,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":143974,"byte_end":144019,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144020,"byte_end":144065,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144066,"byte_end":144111,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144112,"byte_end":144158,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144159,"byte_end":144162,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144163,"byte_end":144209,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144210,"byte_end":144219,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144220,"byte_end":144227,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1535},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":145216,"byte_end":145225,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144694,"byte_end":144754,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144755,"byte_end":144758,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144759,"byte_end":144773,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144774,"byte_end":144777,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144778,"byte_end":144785,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144786,"byte_end":144827,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144828,"byte_end":144852,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144853,"byte_end":144856,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144857,"byte_end":144902,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144903,"byte_end":144948,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144949,"byte_end":144994,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":144995,"byte_end":145040,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":145041,"byte_end":145086,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":145087,"byte_end":145136,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":145137,"byte_end":145140,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":145141,"byte_end":145190,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":145191,"byte_end":145200,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join.rs","byte_start":145201,"byte_end":145208,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1618},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":146734,"byte_end":146744,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1620}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":146609,"byte_end":146654,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":146655,"byte_end":146722,"line_start":31,"line_end":31,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1624},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":148363,"byte_end":148375,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147114,"byte_end":147193,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147194,"byte_end":147224,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147225,"byte_end":147228,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147229,"byte_end":147308,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147309,"byte_end":147389,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147390,"byte_end":147408,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147409,"byte_end":147412,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147413,"byte_end":147491,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147492,"byte_end":147572,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147573,"byte_end":147647,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147648,"byte_end":147671,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147672,"byte_end":147675,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147676,"byte_end":147753,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147754,"byte_end":147811,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147812,"byte_end":147815,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147816,"byte_end":147830,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147831,"byte_end":147834,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147835,"byte_end":147842,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147843,"byte_end":147884,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147885,"byte_end":147931,"line_start":71,"line_end":71,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147932,"byte_end":147935,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147936,"byte_end":147959,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147960,"byte_end":147994,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":147995,"byte_end":148029,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":148030,"byte_end":148064,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":148065,"byte_end":148071,"line_start":77,"line_end":77,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":148072,"byte_end":148075,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":148076,"byte_end":148139,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":148140,"byte_end":148143,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":148144,"byte_end":148167,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":148168,"byte_end":148202,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":148203,"byte_end":148238,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":148239,"byte_end":148273,"line_start":84,"line_end":84,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":148274,"byte_end":148280,"line_start":85,"line_end":85,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":148281,"byte_end":148284,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":148285,"byte_end":148337,"line_start":87,"line_end":87,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":148338,"byte_end":148347,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":148348,"byte_end":148355,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9202},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":150296,"byte_end":150305,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":9205}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":150154,"byte_end":150199,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":150200,"byte_end":150267,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1670},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151890,"byte_end":151900,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":150399,"byte_end":150469,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":150470,"byte_end":150473,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":150474,"byte_end":150552,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":150553,"byte_end":150629,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":150630,"byte_end":150702,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":150703,"byte_end":150706,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":150707,"byte_end":150779,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":150780,"byte_end":150808,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":150809,"byte_end":150812,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":150813,"byte_end":150880,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":150881,"byte_end":150952,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":150953,"byte_end":151003,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151004,"byte_end":151007,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151008,"byte_end":151022,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151023,"byte_end":151026,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151027,"byte_end":151034,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151035,"byte_end":151119,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151120,"byte_end":151123,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151124,"byte_end":151181,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151182,"byte_end":151185,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151186,"byte_end":151268,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151269,"byte_end":151326,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151327,"byte_end":151384,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151385,"byte_end":151411,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151412,"byte_end":151417,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151418,"byte_end":151513,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151514,"byte_end":151537,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151538,"byte_end":151618,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151619,"byte_end":151700,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151701,"byte_end":151771,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151772,"byte_end":151843,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151844,"byte_end":151857,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151858,"byte_end":151868,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151869,"byte_end":151874,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":151875,"byte_end":151882,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9210},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":153543,"byte_end":153551,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":9212}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":153404,"byte_end":153446,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":153464,"byte_end":153531,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1720},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":154273,"byte_end":154282,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":153628,"byte_end":153722,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":153723,"byte_end":153726,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":153727,"byte_end":153816,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":153817,"byte_end":153901,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":153902,"byte_end":153983,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":153984,"byte_end":154029,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":154030,"byte_end":154033,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":154034,"byte_end":154112,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":154113,"byte_end":154170,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":154171,"byte_end":154174,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":154175,"byte_end":154187,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":154188,"byte_end":154191,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":154192,"byte_end":154265,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9219},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":156654,"byte_end":156658,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":9216},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":156621,"byte_end":156649,"line_start":12,"line_end":12,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9222},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":156714,"byte_end":156719,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":9216},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":156680,"byte_end":156709,"line_start":14,"line_end":14,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":9216},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":156602,"byte_end":156608,"line_start":11,"line_end":11,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":9219},{"krate":0,"index":9222}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":156458,"byte_end":156558,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"/ type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":156559,"byte_end":156568,"line_start":9,"line_end":9,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":157273,"byte_end":157285,"line_start":33,"line_end":33,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":157125,"byte_end":157183,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":157188,"byte_end":157191,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":157196,"byte_end":157261,"line_start":32,"line_end":32,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":157665,"byte_end":157678,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":157516,"byte_end":157574,"line_start":42,"line_end":42,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":157579,"byte_end":157582,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":157587,"byte_end":157653,"line_start":44,"line_end":44,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":157966,"byte_end":157976,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":157893,"byte_end":157954,"line_start":54,"line_end":54,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":14710},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12705330,"byte_end":12705339,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::future::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":14712},{"krate":0,"index":14713}],"decl_id":null,"docs":" A future which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9271},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706240,"byte_end":12706243,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<Fut>>::new","value":"pub fn new(Fut, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future using an existing `AbortRegistration`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12705473,"byte_end":12705548,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12705553,"byte_end":12705621,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12705626,"byte_end":12705629,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12705634,"byte_end":12705706,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future will complete immediately without making","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12705711,"byte_end":12705787,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ any further progress.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12705792,"byte_end":12705817,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12705822,"byte_end":12705825,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12705830,"byte_end":12705842,"line_start":30,"line_end":30,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12705847,"byte_end":12705850,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12705855,"byte_end":12705862,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12705867,"byte_end":12705908,"line_start":33,"line_end":33,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12705913,"byte_end":12705972,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12705977,"byte_end":12705980,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12705985,"byte_end":12706054,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706059,"byte_end":12706124,"line_start":37,"line_end":37,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706129,"byte_end":12706154,"line_start":38,"line_end":38,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706159,"byte_end":12706202,"line_start":39,"line_end":39,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706207,"byte_end":12706216,"line_start":40,"line_end":40,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706221,"byte_end":12706228,"line_start":41,"line_end":41,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9301},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706616,"byte_end":12706633,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::future::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":9302}],"decl_id":null,"docs":" A registration handle for a `Abortable` future.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for a `Abortable` future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706425,"byte_end":12706476,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706477,"byte_end":12706553,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706554,"byte_end":12706587,"line_start":52,"line_end":52,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":9305},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706740,"byte_end":12706751,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::future::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":9306}],"decl_id":null,"docs":" A handle to a `Abortable` future.\n","sig":null,"attributes":[{"value":"/ A handle to a `Abortable` future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706667,"byte_end":12706704,"line_start":58,"line_end":58,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":9273},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12707421,"byte_end":12707429,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706808,"byte_end":12706882,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ to abort a running future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706887,"byte_end":12706917,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706922,"byte_end":12706925,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to `Abortable::new`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706930,"byte_end":12706998,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12707003,"byte_end":12707006,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12707011,"byte_end":12707023,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12707028,"byte_end":12707031,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12707036,"byte_end":12707043,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12707048,"byte_end":12707089,"line_start":73,"line_end":73,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12707094,"byte_end":12707153,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12707158,"byte_end":12707161,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12707166,"byte_end":12707235,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12707240,"byte_end":12707305,"line_start":77,"line_end":77,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12707310,"byte_end":12707335,"line_start":78,"line_end":78,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12707340,"byte_end":12707383,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12707388,"byte_end":12707397,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12707402,"byte_end":12707409,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":9274},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12708325,"byte_end":12708334,"line_start":114,"line_end":114,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12707956,"byte_end":12708042,"line_start":107,"line_end":107,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12708043,"byte_end":12708046,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12708047,"byte_end":12708123,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12708124,"byte_end":12708177,"line_start":110,"line_end":110,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12708178,"byte_end":12708181,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12708182,"byte_end":12708259,"line_start":112,"line_end":112,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12708260,"byte_end":12708317,"line_start":113,"line_end":113,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":9316},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12708638,"byte_end":12708645,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::future::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` future was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` future was aborted.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12708527,"byte_end":12708581,"line_start":124,"line_end":124,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":9284},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12710258,"byte_end":12710263,"line_start":173,"line_end":173,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` future associated with this handle.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12709894,"byte_end":12709955,"line_start":167,"line_end":167,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12709960,"byte_end":12709963,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable future associated with this handle that it","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12709968,"byte_end":12710037,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ should abort. Note that if the future is currently being polled on","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12710042,"byte_end":12710112,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12710117,"byte_end":12710191,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12710196,"byte_end":12710246,"line_start":172,"line_end":172,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":1876},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","parent":null,"children":[{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1881},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1888},{"krate":0,"index":1891},{"krate":0,"index":1894},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3493},{"krate":0,"index":3496},{"krate":0,"index":3499},{"krate":0,"index":3502},{"krate":0,"index":3505},{"krate":0,"index":3508},{"krate":0,"index":3511},{"krate":0,"index":3514},{"krate":0,"index":3517},{"krate":0,"index":3520},{"krate":0,"index":3523},{"krate":0,"index":3526},{"krate":0,"index":3529},{"krate":0,"index":3532},{"krate":0,"index":3535},{"krate":0,"index":3538},{"krate":0,"index":3541},{"krate":0,"index":3544},{"krate":0,"index":3547},{"krate":0,"index":3550},{"krate":0,"index":3553},{"krate":0,"index":3556},{"krate":0,"index":3559},{"krate":0,"index":3562},{"krate":0,"index":3565},{"krate":0,"index":3568},{"krate":0,"index":3571},{"krate":0,"index":3574},{"krate":0,"index":3577},{"krate":0,"index":3580},{"krate":0,"index":3583},{"krate":0,"index":3586},{"krate":0,"index":3589},{"krate":0,"index":3592},{"krate":0,"index":3593},{"krate":0,"index":3596},{"krate":0,"index":3599},{"krate":0,"index":3602},{"krate":0,"index":4502},{"krate":0,"index":4503},{"krate":0,"index":4506},{"krate":0,"index":4509},{"krate":0,"index":4512},{"krate":0,"index":4515},{"krate":0,"index":4518},{"krate":0,"index":4521},{"krate":0,"index":4524},{"krate":0,"index":4527},{"krate":0,"index":4530},{"krate":0,"index":4533},{"krate":0,"index":4536},{"krate":0,"index":4539},{"krate":0,"index":4542},{"krate":0,"index":4545},{"krate":0,"index":4548},{"krate":0,"index":4551},{"krate":0,"index":4554},{"krate":0,"index":4557},{"krate":0,"index":4560},{"krate":0,"index":4563},{"krate":0,"index":4566},{"krate":0,"index":4569},{"krate":0,"index":4570},{"krate":0,"index":4573},{"krate":0,"index":4576},{"krate":0,"index":4579},{"krate":0,"index":4605},{"krate":0,"index":4606},{"krate":0,"index":4609},{"krate":0,"index":4612},{"krate":0,"index":4645},{"krate":0,"index":4646},{"krate":0,"index":4649},{"krate":0,"index":4652},{"krate":0,"index":4689},{"krate":0,"index":4690},{"krate":0,"index":4693},{"krate":0,"index":4696},{"krate":0,"index":4735},{"krate":0,"index":4736},{"krate":0,"index":4739},{"krate":0,"index":4742},{"krate":0,"index":4785},{"krate":0,"index":4786},{"krate":0,"index":4789},{"krate":0,"index":4792},{"krate":0,"index":4831},{"krate":0,"index":4832},{"krate":0,"index":4835},{"krate":0,"index":4838},{"krate":0,"index":4874},{"krate":0,"index":4875},{"krate":0,"index":4878},{"krate":0,"index":4881},{"krate":0,"index":4934},{"krate":0,"index":4935},{"krate":0,"index":4938},{"krate":0,"index":4941},{"krate":0,"index":5000},{"krate":0,"index":5001},{"krate":0,"index":5004},{"krate":0,"index":12683},{"krate":0,"index":12790},{"krate":0,"index":12793},{"krate":0,"index":13148},{"krate":0,"index":13151},{"krate":0,"index":13227},{"krate":0,"index":13228},{"krate":0,"index":13231},{"krate":0,"index":5007}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":164423,"byte_end":164448,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":164449,"byte_end":164452,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":164453,"byte_end":164478,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":164479,"byte_end":164482,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":164483,"byte_end":164556,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":164557,"byte_end":164582,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":164583,"byte_end":164662,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":164663,"byte_end":164700,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":164701,"byte_end":164774,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":164775,"byte_end":164805,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":9336},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\chain.rs","byte_start":218921,"byte_end":218926,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":9339},{"krate":0,"index":9340}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9385},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\collect.rs","byte_start":221095,"byte_end":221102,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":9388},{"krate":0,"index":9389}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9436},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\unzip.rs","byte_start":222565,"byte_end":222570,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":9440},{"krate":0,"index":9441},{"krate":0,"index":9442}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9494},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\concat.rs","byte_start":224485,"byte_end":224491,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":9496},{"krate":0,"index":9497}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9534},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\cycle.rs","byte_start":226246,"byte_end":226251,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":9536},{"krate":0,"index":9537}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9574},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\enumerate.rs","byte_start":227931,"byte_end":227940,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":9576},{"krate":0,"index":9577}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9613},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter.rs","byte_start":229628,"byte_end":229634,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":9617},{"krate":0,"index":9618},{"krate":0,"index":9619},{"krate":0,"index":9620}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9678},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter_map.rs","byte_start":233140,"byte_end":233149,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":9682},{"krate":0,"index":9683},{"krate":0,"index":9684}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9746},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\flatten.rs","byte_start":236220,"byte_end":236227,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":9749},{"krate":0,"index":9750}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9794},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":169594,"byte_end":169601,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":9796}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9847},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fold.rs","byte_start":238044,"byte_end":238048,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":9852},{"krate":0,"index":9853},{"krate":0,"index":9854},{"krate":0,"index":9855}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9916},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each.rs","byte_start":240611,"byte_end":240618,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":9920},{"krate":0,"index":9921},{"krate":0,"index":9922}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9978},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fuse.rs","byte_start":242644,"byte_end":242648,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":9980},{"krate":0,"index":9981}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fuse.rs","byte_start":243100,"byte_end":243107,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fuse.rs","byte_start":242831,"byte_end":242893,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fuse.rs","byte_start":242898,"byte_end":242901,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fuse.rs","byte_start":242906,"byte_end":242974,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fuse.rs","byte_start":242979,"byte_end":243045,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fuse.rs","byte_start":243050,"byte_end":243088,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":10017},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":244489,"byte_end":244501,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":10019}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":244319,"byte_end":244392,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":244410,"byte_end":244477,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245064,"byte_end":245071,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":244672,"byte_end":244745,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":244750,"byte_end":244767,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":244772,"byte_end":244775,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":244780,"byte_end":244861,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":244866,"byte_end":244948,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":244953,"byte_end":245032,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245037,"byte_end":245052,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245682,"byte_end":245689,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245136,"byte_end":245203,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245208,"byte_end":245239,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245244,"byte_end":245247,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245252,"byte_end":245325,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245330,"byte_end":245385,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245390,"byte_end":245393,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245398,"byte_end":245479,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245484,"byte_end":245566,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245571,"byte_end":245650,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245655,"byte_end":245670,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2561},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":246315,"byte_end":246326,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245762,"byte_end":245836,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245841,"byte_end":245872,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245877,"byte_end":245880,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245885,"byte_end":245958,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":245963,"byte_end":246018,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":246023,"byte_end":246026,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":246031,"byte_end":246112,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":246117,"byte_end":246199,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":246204,"byte_end":246283,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":246288,"byte_end":246303,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":246959,"byte_end":246969,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":246439,"byte_end":246501,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":246506,"byte_end":246509,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":246514,"byte_end":246586,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":246591,"byte_end":246662,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":246667,"byte_end":246670,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":246675,"byte_end":246756,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":246761,"byte_end":246843,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":246848,"byte_end":246927,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":246932,"byte_end":246947,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10026},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":170721,"byte_end":170728,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":10029}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10092},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\map.rs","byte_start":248016,"byte_end":248019,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":10095},{"krate":0,"index":10096}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10145},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":171089,"byte_end":171096,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":10149}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10224},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\next.rs","byte_start":249746,"byte_end":249750,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":10227}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\next.rs","byte_start":249590,"byte_end":249649,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\next.rs","byte_start":249667,"byte_end":249734,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10232},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\select_next_some.rs","byte_start":250781,"byte_end":250795,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":10235}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\select_next_some.rs","byte_start":250597,"byte_end":250672,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\select_next_some.rs","byte_start":250673,"byte_end":250684,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\select_next_some.rs","byte_start":250702,"byte_end":250769,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10245},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":252386,"byte_end":252394,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":10247},{"krate":0,"index":10248}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2760},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":252867,"byte_end":252871,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":252712,"byte_end":252785,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":252790,"byte_end":252855,"line_start":40,"line_end":40,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":253196,"byte_end":253205,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":252958,"byte_end":253020,"line_start":45,"line_end":45,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":253025,"byte_end":253028,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":253033,"byte_end":253106,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":253111,"byte_end":253184,"line_start":48,"line_end":48,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2762},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255169,"byte_end":255176,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"pub fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: FnOnce(&St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":253641,"byte_end":253714,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":253719,"byte_end":253753,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":253758,"byte_end":253761,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":253766,"byte_end":253841,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":253846,"byte_end":253886,"line_start":67,"line_end":67,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":253891,"byte_end":253894,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":253899,"byte_end":253913,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":253918,"byte_end":253921,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":253926,"byte_end":253966,"line_start":71,"line_end":71,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":253971,"byte_end":253974,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":253979,"byte_end":253986,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":253991,"byte_end":254032,"line_start":74,"line_end":74,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254037,"byte_end":254080,"line_start":75,"line_end":75,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254085,"byte_end":254110,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254115,"byte_end":254118,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254123,"byte_end":254170,"line_start":78,"line_end":78,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254175,"byte_end":254196,"line_start":79,"line_end":79,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254201,"byte_end":254254,"line_start":80,"line_end":80,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254259,"byte_end":254327,"line_start":81,"line_end":81,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254332,"byte_end":254405,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254410,"byte_end":254475,"line_start":83,"line_end":83,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254480,"byte_end":254564,"line_start":84,"line_end":84,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254569,"byte_end":254614,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254619,"byte_end":254628,"line_start":86,"line_end":86,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254633,"byte_end":254640,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254645,"byte_end":254648,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254653,"byte_end":254689,"line_start":89,"line_end":89,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254694,"byte_end":254697,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254702,"byte_end":254709,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254714,"byte_end":254755,"line_start":92,"line_end":92,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254760,"byte_end":254803,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254808,"byte_end":254833,"line_start":94,"line_end":94,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254838,"byte_end":254841,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254846,"byte_end":254894,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254899,"byte_end":254920,"line_start":97,"line_end":97,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254925,"byte_end":254964,"line_start":98,"line_end":98,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":254969,"byte_end":255034,"line_start":99,"line_end":99,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255039,"byte_end":255080,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255085,"byte_end":255131,"line_start":101,"line_end":101,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255136,"byte_end":255145,"line_start":102,"line_end":102,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255150,"byte_end":255157,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":256221,"byte_end":256231,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"pub fn next_if_eq<'a, T: ?Sized>(Pin<&'a mut Self>, &'a T) -> NextIfEq where\nT, St::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255363,"byte_end":255436,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255441,"byte_end":255465,"line_start":114,"line_end":114,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255470,"byte_end":255473,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255478,"byte_end":255491,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255496,"byte_end":255499,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255504,"byte_end":255544,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255549,"byte_end":255552,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255557,"byte_end":255564,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255569,"byte_end":255610,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255615,"byte_end":255658,"line_start":122,"line_end":122,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255663,"byte_end":255688,"line_start":123,"line_end":123,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255693,"byte_end":255696,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255701,"byte_end":255748,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255753,"byte_end":255774,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255779,"byte_end":255832,"line_start":127,"line_end":127,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255837,"byte_end":255899,"line_start":128,"line_end":128,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255904,"byte_end":255977,"line_start":129,"line_end":129,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":255982,"byte_end":256041,"line_start":130,"line_end":130,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":256046,"byte_end":256133,"line_start":131,"line_end":131,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":256138,"byte_end":256183,"line_start":132,"line_end":132,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":256188,"byte_end":256197,"line_start":133,"line_end":133,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":256202,"byte_end":256209,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":10284},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":257906,"byte_end":257910,"line_start":197,"line_end":197,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":10287}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10325},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":258966,"byte_end":258972,"line_start":239,"line_end":239,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":10329}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10374},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":260862,"byte_end":260870,"line_start":300,"line_end":300,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":10378}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10428},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\skip.rs","byte_start":262487,"byte_end":262491,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":10430},{"krate":0,"index":10431}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10467},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\skip_while.rs","byte_start":264310,"byte_end":264319,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":10471},{"krate":0,"index":10472},{"krate":0,"index":10473},{"krate":0,"index":10474},{"krate":0,"index":10475}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10541},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take.rs","byte_start":267963,"byte_end":267967,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":10543},{"krate":0,"index":10544}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10580},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_while.rs","byte_start":270058,"byte_end":270067,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":10584},{"krate":0,"index":10585},{"krate":0,"index":10586},{"krate":0,"index":10587},{"krate":0,"index":10588}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10649},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":273675,"byte_end":273684,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":10652},{"krate":0,"index":10653},{"krate":0,"index":10654},{"krate":0,"index":10655}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275064,"byte_end":275075,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":274764,"byte_end":274818,"line_start":60,"line_end":60,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":274823,"byte_end":274917,"line_start":61,"line_end":61,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":274922,"byte_end":274985,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":274990,"byte_end":275052,"line_start":63,"line_end":63,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3069},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276359,"byte_end":276370,"line_start":108,"line_end":108,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275212,"byte_end":275277,"line_start":72,"line_end":72,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275282,"byte_end":275339,"line_start":73,"line_end":73,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275344,"byte_end":275347,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275352,"byte_end":275417,"line_start":75,"line_end":75,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275422,"byte_end":275482,"line_start":76,"line_end":76,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275487,"byte_end":275490,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275495,"byte_end":275563,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275568,"byte_end":275611,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275616,"byte_end":275619,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275624,"byte_end":275638,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275643,"byte_end":275646,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275651,"byte_end":275658,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275663,"byte_end":275704,"line_start":84,"line_end":84,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275709,"byte_end":275733,"line_start":85,"line_end":85,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275738,"byte_end":275781,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275786,"byte_end":275814,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275819,"byte_end":275822,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275827,"byte_end":275865,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275870,"byte_end":275873,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275878,"byte_end":275896,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275901,"byte_end":275943,"line_start":92,"line_end":92,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275948,"byte_end":275963,"line_start":93,"line_end":93,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275968,"byte_end":275987,"line_start":94,"line_end":94,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":275992,"byte_end":276017,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276022,"byte_end":276038,"line_start":96,"line_end":96,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276043,"byte_end":276076,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276081,"byte_end":276090,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276095,"byte_end":276102,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276107,"byte_end":276110,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276115,"byte_end":276164,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276169,"byte_end":276223,"line_start":102,"line_end":102,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276228,"byte_end":276231,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276236,"byte_end":276283,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276288,"byte_end":276321,"line_start":105,"line_end":105,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276326,"byte_end":276335,"line_start":106,"line_end":106,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276340,"byte_end":276347,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276546,"byte_end":276556,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276449,"byte_end":276510,"line_start":112,"line_end":112,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276515,"byte_end":276534,"line_start":113,"line_end":113,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":10706},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\then.rs","byte_start":278488,"byte_end":278492,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":10710},{"krate":0,"index":10711},{"krate":0,"index":10712}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10774},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":281169,"byte_end":281172,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":10777},{"krate":0,"index":10778},{"krate":0,"index":10779},{"krate":0,"index":10780}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":281747,"byte_end":281754,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":281639,"byte_end":281713,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":281718,"byte_end":281735,"line_start":33,"line_end":33,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3175},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":282110,"byte_end":282117,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":281848,"byte_end":281916,"line_start":38,"line_end":38,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":281921,"byte_end":281952,"line_start":39,"line_end":39,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":281957,"byte_end":281960,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":281965,"byte_end":282038,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":282043,"byte_end":282098,"line_start":42,"line_end":42,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3176},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":282492,"byte_end":282503,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":282223,"byte_end":282298,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":282303,"byte_end":282334,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":282339,"byte_end":282342,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":282347,"byte_end":282420,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":282425,"byte_end":282480,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":282909,"byte_end":282919,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":282673,"byte_end":282736,"line_start":57,"line_end":57,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":282741,"byte_end":282744,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":282749,"byte_end":282821,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":282826,"byte_end":282897,"line_start":60,"line_end":60,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":10829},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\chunks.rs","byte_start":285761,"byte_end":285767,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":10831},{"krate":0,"index":10832},{"krate":0,"index":10833}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10877},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\ready_chunks.rs","byte_start":288887,"byte_end":288898,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":10879},{"krate":0,"index":10880},{"krate":0,"index":10881}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10920},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\scan.rs","byte_start":292378,"byte_end":292382,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":10925},{"krate":0,"index":10926},{"krate":0,"index":10927}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14664},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\buffer_unordered.rs","byte_start":12710852,"byte_end":12710867,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":14666},{"krate":0,"index":14667},{"krate":0,"index":14668}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14623},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\buffered.rs","byte_start":12714201,"byte_end":12714209,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":14625},{"krate":0,"index":14626},{"krate":0,"index":14627}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14562},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":12717271,"byte_end":12717288,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":14566},{"krate":0,"index":14567},{"krate":0,"index":14568},{"krate":0,"index":14569}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11168},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\catch_unwind.rs","byte_start":295820,"byte_end":295831,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":11170},{"krate":0,"index":11171}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3409},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174395,"byte_end":174404,"line_start":212,"line_end":212,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":3410},{"krate":0,"index":3411},{"krate":0,"index":3412},{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":3419},{"krate":0,"index":3423},{"krate":0,"index":3426},{"krate":0,"index":3428},{"krate":0,"index":3433},{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3443},{"krate":0,"index":3448},{"krate":0,"index":3451},{"krate":0,"index":3454},{"krate":0,"index":3456},{"krate":0,"index":3459},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3470},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3476},{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3483},{"krate":0,"index":3485},{"krate":0,"index":3487},{"krate":0,"index":3488}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174284,"byte_end":174358,"line_start":210,"line_end":210,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174359,"byte_end":174384,"line_start":211,"line_end":211,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3410},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175314,"byte_end":175318,"line_start":236,"line_end":236,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174419,"byte_end":174485,"line_start":213,"line_end":213,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174490,"byte_end":174493,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174498,"byte_end":174566,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174571,"byte_end":174646,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174651,"byte_end":174726,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174731,"byte_end":174785,"line_start":218,"line_end":218,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174790,"byte_end":174865,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174870,"byte_end":174880,"line_start":220,"line_end":220,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174885,"byte_end":174888,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174893,"byte_end":174907,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174912,"byte_end":174915,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174920,"byte_end":174927,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174932,"byte_end":174973,"line_start":225,"line_end":225,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174978,"byte_end":175021,"line_start":226,"line_end":226,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175026,"byte_end":175029,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175034,"byte_end":175075,"line_start":228,"line_end":228,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175080,"byte_end":175083,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175088,"byte_end":175133,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175138,"byte_end":175183,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175188,"byte_end":175233,"line_start":232,"line_end":232,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175238,"byte_end":175280,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175285,"byte_end":175294,"line_start":234,"line_end":234,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175299,"byte_end":175306,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3411},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176557,"byte_end":176568,"line_start":271,"line_end":271,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175460,"byte_end":175532,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175537,"byte_end":175598,"line_start":244,"line_end":244,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175603,"byte_end":175606,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175611,"byte_end":175686,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175691,"byte_end":175745,"line_start":247,"line_end":247,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175750,"byte_end":175753,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175758,"byte_end":175831,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175836,"byte_end":175898,"line_start":250,"line_end":250,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175903,"byte_end":175978,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":175983,"byte_end":176037,"line_start":252,"line_end":252,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176042,"byte_end":176117,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176122,"byte_end":176132,"line_start":254,"line_end":254,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176137,"byte_end":176140,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176145,"byte_end":176159,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176164,"byte_end":176167,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176172,"byte_end":176179,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176184,"byte_end":176225,"line_start":259,"line_end":259,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176230,"byte_end":176273,"line_start":260,"line_end":260,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176278,"byte_end":176281,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176286,"byte_end":176323,"line_start":262,"line_end":262,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176328,"byte_end":176331,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176336,"byte_end":176388,"line_start":264,"line_end":264,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176393,"byte_end":176423,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176428,"byte_end":176431,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176436,"byte_end":176488,"line_start":267,"line_end":267,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176493,"byte_end":176523,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176528,"byte_end":176537,"line_start":269,"line_end":269,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176542,"byte_end":176549,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3412},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177569,"byte_end":177572,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176733,"byte_end":176808,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176813,"byte_end":176836,"line_start":279,"line_end":279,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176841,"byte_end":176844,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176849,"byte_end":176921,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176926,"byte_end":176990,"line_start":282,"line_end":282,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":176995,"byte_end":177032,"line_start":283,"line_end":283,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177037,"byte_end":177040,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177045,"byte_end":177121,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177126,"byte_end":177197,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177202,"byte_end":177223,"line_start":287,"line_end":287,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177228,"byte_end":177231,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177236,"byte_end":177250,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177255,"byte_end":177258,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177263,"byte_end":177270,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177275,"byte_end":177316,"line_start":292,"line_end":292,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177321,"byte_end":177364,"line_start":293,"line_end":293,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177369,"byte_end":177372,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177377,"byte_end":177414,"line_start":295,"line_end":295,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177419,"byte_end":177458,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177463,"byte_end":177466,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177471,"byte_end":177535,"line_start":298,"line_end":298,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177540,"byte_end":177549,"line_start":299,"line_end":299,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177554,"byte_end":177561,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3415},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179132,"byte_end":179141,"line_start":347,"line_end":347,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177739,"byte_end":177810,"line_start":309,"line_end":309,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177815,"byte_end":177834,"line_start":310,"line_end":310,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177839,"byte_end":177842,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177847,"byte_end":177912,"line_start":312,"line_end":312,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177917,"byte_end":177986,"line_start":313,"line_end":313,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":177991,"byte_end":178002,"line_start":314,"line_end":314,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178007,"byte_end":178010,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178015,"byte_end":178090,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178095,"byte_end":178177,"line_start":317,"line_end":317,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178182,"byte_end":178200,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178205,"byte_end":178208,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178213,"byte_end":178236,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178241,"byte_end":178244,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178249,"byte_end":178324,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178329,"byte_end":178416,"line_start":323,"line_end":323,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178421,"byte_end":178477,"line_start":324,"line_end":324,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178482,"byte_end":178485,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178490,"byte_end":178502,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178507,"byte_end":178510,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178515,"byte_end":178584,"line_start":328,"line_end":328,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178589,"byte_end":178614,"line_start":329,"line_end":329,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178619,"byte_end":178622,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178627,"byte_end":178641,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178646,"byte_end":178649,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178654,"byte_end":178661,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178666,"byte_end":178707,"line_start":334,"line_end":334,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178712,"byte_end":178755,"line_start":335,"line_end":335,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178760,"byte_end":178763,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178768,"byte_end":178819,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178824,"byte_end":178827,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178832,"byte_end":178872,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178877,"byte_end":178880,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178885,"byte_end":178937,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178942,"byte_end":178994,"line_start":342,"line_end":342,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":178999,"byte_end":179051,"line_start":343,"line_end":343,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179056,"byte_end":179098,"line_start":344,"line_end":344,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179103,"byte_end":179112,"line_start":345,"line_end":345,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179117,"byte_end":179124,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3416},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180370,"byte_end":180376,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179285,"byte_end":179357,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179362,"byte_end":179389,"line_start":355,"line_end":355,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179394,"byte_end":179397,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179402,"byte_end":179477,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179482,"byte_end":179553,"line_start":358,"line_end":358,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179558,"byte_end":179630,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179635,"byte_end":179709,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179714,"byte_end":179772,"line_start":361,"line_end":361,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179777,"byte_end":179780,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179785,"byte_end":179861,"line_start":363,"line_end":363,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179866,"byte_end":179940,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179945,"byte_end":179966,"line_start":365,"line_end":365,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179971,"byte_end":179974,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179979,"byte_end":179993,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":179998,"byte_end":180001,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180006,"byte_end":180013,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180018,"byte_end":180059,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180064,"byte_end":180088,"line_start":371,"line_end":371,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180093,"byte_end":180136,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180141,"byte_end":180144,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180149,"byte_end":180187,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180192,"byte_end":180253,"line_start":375,"line_end":375,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180258,"byte_end":180261,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180266,"byte_end":180336,"line_start":377,"line_end":377,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180341,"byte_end":180350,"line_start":378,"line_end":378,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180355,"byte_end":180362,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3419},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181701,"byte_end":181711,"line_start":414,"line_end":414,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180604,"byte_end":180679,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180684,"byte_end":180760,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180765,"byte_end":180768,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180773,"byte_end":180848,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180853,"byte_end":180928,"line_start":393,"line_end":393,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":180933,"byte_end":181009,"line_start":394,"line_end":394,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181014,"byte_end":181079,"line_start":395,"line_end":395,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181084,"byte_end":181087,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181092,"byte_end":181168,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181173,"byte_end":181247,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181252,"byte_end":181277,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181282,"byte_end":181285,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181290,"byte_end":181304,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181309,"byte_end":181316,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181321,"byte_end":181362,"line_start":403,"line_end":403,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181367,"byte_end":181410,"line_start":404,"line_end":404,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181415,"byte_end":181418,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181423,"byte_end":181461,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181466,"byte_end":181516,"line_start":407,"line_end":407,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181521,"byte_end":181572,"line_start":408,"line_end":408,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181577,"byte_end":181584,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181589,"byte_end":181592,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181597,"byte_end":181667,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181672,"byte_end":181681,"line_start":412,"line_end":412,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181686,"byte_end":181693,"line_start":413,"line_end":413,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3423},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182740,"byte_end":182744,"line_start":445,"line_end":445,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":181943,"byte_end":182016,"line_start":423,"line_end":423,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182021,"byte_end":182049,"line_start":424,"line_end":424,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182054,"byte_end":182057,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182062,"byte_end":182136,"line_start":426,"line_end":426,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182141,"byte_end":182208,"line_start":427,"line_end":427,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182213,"byte_end":182258,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182263,"byte_end":182266,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182271,"byte_end":182347,"line_start":430,"line_end":430,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182352,"byte_end":182378,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182383,"byte_end":182386,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182391,"byte_end":182405,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182410,"byte_end":182413,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182418,"byte_end":182425,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182430,"byte_end":182471,"line_start":436,"line_end":436,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182476,"byte_end":182519,"line_start":437,"line_end":437,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182524,"byte_end":182527,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182532,"byte_end":182569,"line_start":439,"line_end":439,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182574,"byte_end":182629,"line_start":440,"line_end":440,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182634,"byte_end":182637,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182642,"byte_end":182706,"line_start":442,"line_end":442,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182711,"byte_end":182720,"line_start":443,"line_end":443,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182725,"byte_end":182732,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3426},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183678,"byte_end":183685,"line_start":479,"line_end":479,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":182953,"byte_end":183007,"line_start":454,"line_end":454,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183012,"byte_end":183067,"line_start":455,"line_end":455,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183072,"byte_end":183075,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183080,"byte_end":183148,"line_start":457,"line_end":457,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183153,"byte_end":183156,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183161,"byte_end":183175,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183180,"byte_end":183183,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183188,"byte_end":183195,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183200,"byte_end":183241,"line_start":462,"line_end":462,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183246,"byte_end":183277,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183282,"byte_end":183317,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183322,"byte_end":183342,"line_start":465,"line_end":465,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183347,"byte_end":183350,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183355,"byte_end":183392,"line_start":467,"line_end":467,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183397,"byte_end":183400,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183405,"byte_end":183432,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183437,"byte_end":183461,"line_start":470,"line_end":470,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183466,"byte_end":183508,"line_start":471,"line_end":471,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183513,"byte_end":183522,"line_start":472,"line_end":472,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183527,"byte_end":183534,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183539,"byte_end":183542,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183547,"byte_end":183595,"line_start":475,"line_end":475,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183600,"byte_end":183644,"line_start":476,"line_end":476,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183649,"byte_end":183658,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183663,"byte_end":183670,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3428},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184804,"byte_end":184809,"line_start":516,"line_end":516,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183843,"byte_end":183894,"line_start":486,"line_end":486,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183899,"byte_end":183934,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183939,"byte_end":183942,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":183947,"byte_end":184001,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184006,"byte_end":184063,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184068,"byte_end":184104,"line_start":491,"line_end":491,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184109,"byte_end":184112,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184117,"byte_end":184185,"line_start":493,"line_end":493,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184190,"byte_end":184193,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184198,"byte_end":184212,"line_start":495,"line_end":495,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184217,"byte_end":184220,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184225,"byte_end":184232,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184237,"byte_end":184278,"line_start":498,"line_end":498,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184283,"byte_end":184314,"line_start":499,"line_end":499,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184319,"byte_end":184354,"line_start":500,"line_end":500,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184359,"byte_end":184379,"line_start":501,"line_end":501,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184384,"byte_end":184387,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184392,"byte_end":184429,"line_start":503,"line_end":503,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184434,"byte_end":184437,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184442,"byte_end":184469,"line_start":505,"line_end":505,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184474,"byte_end":184517,"line_start":506,"line_end":506,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184522,"byte_end":184565,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184570,"byte_end":184613,"line_start":508,"line_end":508,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184618,"byte_end":184625,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184630,"byte_end":184633,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184638,"byte_end":184692,"line_start":511,"line_end":511,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184697,"byte_end":184731,"line_start":512,"line_end":512,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184736,"byte_end":184770,"line_start":513,"line_end":513,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184775,"byte_end":184784,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":184789,"byte_end":184796,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3433},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186105,"byte_end":186111,"line_start":557,"line_end":557,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185070,"byte_end":185132,"line_start":525,"line_end":525,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185137,"byte_end":185201,"line_start":526,"line_end":526,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185206,"byte_end":185209,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185214,"byte_end":185278,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185283,"byte_end":185348,"line_start":529,"line_end":529,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185353,"byte_end":185399,"line_start":530,"line_end":530,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185404,"byte_end":185407,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185412,"byte_end":185461,"line_start":532,"line_end":532,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185466,"byte_end":185506,"line_start":533,"line_end":533,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185511,"byte_end":185514,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185519,"byte_end":185533,"line_start":535,"line_end":535,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185538,"byte_end":185541,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185546,"byte_end":185553,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185558,"byte_end":185599,"line_start":538,"line_end":538,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185604,"byte_end":185635,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185640,"byte_end":185675,"line_start":540,"line_end":540,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185680,"byte_end":185700,"line_start":541,"line_end":541,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185705,"byte_end":185708,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185713,"byte_end":185750,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185755,"byte_end":185758,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185763,"byte_end":185790,"line_start":545,"line_end":545,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185795,"byte_end":185826,"line_start":546,"line_end":546,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185831,"byte_end":185857,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185862,"byte_end":185928,"line_start":548,"line_end":548,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185933,"byte_end":185942,"line_start":549,"line_end":549,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185947,"byte_end":185954,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185959,"byte_end":185962,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":185967,"byte_end":186002,"line_start":552,"line_end":552,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186007,"byte_end":186010,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186015,"byte_end":186071,"line_start":554,"line_end":554,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186076,"byte_end":186085,"line_start":555,"line_end":555,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186090,"byte_end":186097,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3434},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187175,"byte_end":187180,"line_start":588,"line_end":588,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186341,"byte_end":186372,"line_start":565,"line_end":565,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186377,"byte_end":186380,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186385,"byte_end":186452,"line_start":567,"line_end":567,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186457,"byte_end":186529,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186534,"byte_end":186591,"line_start":569,"line_end":569,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186596,"byte_end":186599,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186604,"byte_end":186618,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186623,"byte_end":186626,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186631,"byte_end":186638,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186643,"byte_end":186684,"line_start":574,"line_end":574,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186689,"byte_end":186732,"line_start":575,"line_end":575,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186737,"byte_end":186759,"line_start":576,"line_end":576,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186764,"byte_end":186811,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186816,"byte_end":186819,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186824,"byte_end":186865,"line_start":579,"line_end":579,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186870,"byte_end":186911,"line_start":580,"line_end":580,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186916,"byte_end":186957,"line_start":581,"line_end":581,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":186962,"byte_end":187003,"line_start":582,"line_end":582,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187008,"byte_end":187049,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187054,"byte_end":187095,"line_start":584,"line_end":584,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187100,"byte_end":187141,"line_start":585,"line_end":585,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187146,"byte_end":187155,"line_start":586,"line_end":586,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187160,"byte_end":187167,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3435},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188130,"byte_end":188134,"line_start":615,"line_end":615,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187315,"byte_end":187382,"line_start":595,"line_end":595,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187387,"byte_end":187439,"line_start":596,"line_end":596,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187444,"byte_end":187447,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187452,"byte_end":187522,"line_start":598,"line_end":598,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187527,"byte_end":187603,"line_start":599,"line_end":599,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187608,"byte_end":187684,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187689,"byte_end":187759,"line_start":601,"line_end":601,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187764,"byte_end":187790,"line_start":602,"line_end":602,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187795,"byte_end":187798,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187803,"byte_end":187817,"line_start":604,"line_end":604,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187822,"byte_end":187825,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187830,"byte_end":187837,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187842,"byte_end":187883,"line_start":607,"line_end":607,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187888,"byte_end":187931,"line_start":608,"line_end":608,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187936,"byte_end":187939,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187944,"byte_end":187987,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":187992,"byte_end":188061,"line_start":611,"line_end":611,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188066,"byte_end":188096,"line_start":612,"line_end":612,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188101,"byte_end":188110,"line_start":613,"line_end":613,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188115,"byte_end":188122,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189328,"byte_end":189335,"line_start":655,"line_end":655,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188369,"byte_end":188434,"line_start":624,"line_end":624,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188439,"byte_end":188442,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188447,"byte_end":188461,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188466,"byte_end":188469,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188474,"byte_end":188481,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188486,"byte_end":188527,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188532,"byte_end":188563,"line_start":630,"line_end":630,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188568,"byte_end":188603,"line_start":631,"line_end":631,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188608,"byte_end":188628,"line_start":632,"line_end":632,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188633,"byte_end":188636,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188641,"byte_end":188680,"line_start":634,"line_end":634,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188685,"byte_end":188724,"line_start":635,"line_end":635,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188729,"byte_end":188768,"line_start":636,"line_end":636,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188773,"byte_end":188776,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188781,"byte_end":188808,"line_start":638,"line_end":638,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188813,"byte_end":188852,"line_start":639,"line_end":639,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188857,"byte_end":188896,"line_start":640,"line_end":640,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188901,"byte_end":188908,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188913,"byte_end":188940,"line_start":642,"line_end":642,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188945,"byte_end":188984,"line_start":643,"line_end":643,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":188989,"byte_end":189028,"line_start":644,"line_end":644,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189033,"byte_end":189040,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189045,"byte_end":189072,"line_start":646,"line_end":646,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189077,"byte_end":189118,"line_start":647,"line_end":647,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189123,"byte_end":189164,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189169,"byte_end":189176,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189181,"byte_end":189184,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189189,"byte_end":189248,"line_start":651,"line_end":651,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189253,"byte_end":189294,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189299,"byte_end":189308,"line_start":653,"line_end":653,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189313,"byte_end":189320,"line_start":654,"line_end":654,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3440},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190597,"byte_end":190605,"line_start":688,"line_end":688,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189512,"byte_end":189584,"line_start":663,"line_end":663,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189589,"byte_end":189592,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189597,"byte_end":189674,"line_start":665,"line_end":665,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189679,"byte_end":189754,"line_start":666,"line_end":666,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189759,"byte_end":189835,"line_start":667,"line_end":667,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189840,"byte_end":189843,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189848,"byte_end":189930,"line_start":669,"line_end":669,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":189935,"byte_end":190018,"line_start":670,"line_end":670,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190023,"byte_end":190026,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190031,"byte_end":190107,"line_start":672,"line_end":672,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190112,"byte_end":190188,"line_start":673,"line_end":673,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190193,"byte_end":190214,"line_start":674,"line_end":674,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190219,"byte_end":190222,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190227,"byte_end":190241,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190246,"byte_end":190249,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190254,"byte_end":190261,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190266,"byte_end":190307,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190312,"byte_end":190355,"line_start":680,"line_end":680,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190360,"byte_end":190363,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190368,"byte_end":190405,"line_start":682,"line_end":682,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190410,"byte_end":190477,"line_start":683,"line_end":683,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190482,"byte_end":190485,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190490,"byte_end":190563,"line_start":685,"line_end":685,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190568,"byte_end":190577,"line_start":686,"line_end":686,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190582,"byte_end":190589,"line_start":687,"line_end":687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3443},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191617,"byte_end":191621,"line_start":721,"line_end":721,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190808,"byte_end":190879,"line_start":697,"line_end":697,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190884,"byte_end":190914,"line_start":698,"line_end":698,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190919,"byte_end":190922,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":190927,"byte_end":191002,"line_start":700,"line_end":700,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191007,"byte_end":191078,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191083,"byte_end":191123,"line_start":702,"line_end":702,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191128,"byte_end":191131,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191136,"byte_end":191150,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191155,"byte_end":191158,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191163,"byte_end":191170,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191175,"byte_end":191216,"line_start":707,"line_end":707,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191221,"byte_end":191245,"line_start":708,"line_end":708,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191250,"byte_end":191293,"line_start":709,"line_end":709,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191298,"byte_end":191301,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191306,"byte_end":191344,"line_start":711,"line_end":711,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191349,"byte_end":191352,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191357,"byte_end":191401,"line_start":713,"line_end":713,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191406,"byte_end":191426,"line_start":714,"line_end":714,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191431,"byte_end":191494,"line_start":715,"line_end":715,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191499,"byte_end":191506,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191511,"byte_end":191514,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191519,"byte_end":191583,"line_start":718,"line_end":718,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191588,"byte_end":191597,"line_start":719,"line_end":719,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191602,"byte_end":191609,"line_start":720,"line_end":720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3448},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192668,"byte_end":192678,"line_start":752,"line_end":752,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191890,"byte_end":191964,"line_start":730,"line_end":730,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191969,"byte_end":191992,"line_start":731,"line_end":731,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":191997,"byte_end":192000,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192005,"byte_end":192078,"line_start":733,"line_end":733,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192083,"byte_end":192155,"line_start":734,"line_end":734,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192160,"byte_end":192237,"line_start":735,"line_end":735,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192242,"byte_end":192253,"line_start":736,"line_end":736,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192258,"byte_end":192261,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192266,"byte_end":192280,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192285,"byte_end":192288,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192293,"byte_end":192300,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192305,"byte_end":192346,"line_start":741,"line_end":741,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192351,"byte_end":192375,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192380,"byte_end":192423,"line_start":743,"line_end":743,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192428,"byte_end":192431,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192436,"byte_end":192474,"line_start":745,"line_end":745,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192479,"byte_end":192482,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192487,"byte_end":192550,"line_start":747,"line_end":747,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192555,"byte_end":192558,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192563,"byte_end":192634,"line_start":749,"line_end":749,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192639,"byte_end":192648,"line_start":750,"line_end":750,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192653,"byte_end":192660,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3451},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193667,"byte_end":193677,"line_start":782,"line_end":782,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192912,"byte_end":192988,"line_start":761,"line_end":761,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":192993,"byte_end":193016,"line_start":762,"line_end":762,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193021,"byte_end":193024,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193029,"byte_end":193104,"line_start":764,"line_end":764,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193109,"byte_end":193181,"line_start":765,"line_end":765,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193186,"byte_end":193253,"line_start":766,"line_end":766,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193258,"byte_end":193261,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193266,"byte_end":193280,"line_start":768,"line_end":768,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193285,"byte_end":193288,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193293,"byte_end":193300,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193305,"byte_end":193346,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193351,"byte_end":193375,"line_start":772,"line_end":772,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193380,"byte_end":193423,"line_start":773,"line_end":773,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193428,"byte_end":193431,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193436,"byte_end":193474,"line_start":775,"line_end":775,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193479,"byte_end":193482,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193487,"byte_end":193550,"line_start":777,"line_end":777,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193555,"byte_end":193558,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193563,"byte_end":193633,"line_start":779,"line_end":779,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193638,"byte_end":193647,"line_start":780,"line_end":780,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193652,"byte_end":193659,"line_start":781,"line_end":781,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3454},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195193,"byte_end":195203,"line_start":827,"line_end":827,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193911,"byte_end":193981,"line_start":791,"line_end":791,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193986,"byte_end":193989,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":193994,"byte_end":194065,"line_start":793,"line_end":793,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194070,"byte_end":194142,"line_start":794,"line_end":794,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194147,"byte_end":194217,"line_start":795,"line_end":795,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194222,"byte_end":194225,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194230,"byte_end":194301,"line_start":797,"line_end":797,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194306,"byte_end":194392,"line_start":798,"line_end":798,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194397,"byte_end":194464,"line_start":799,"line_end":799,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194469,"byte_end":194533,"line_start":800,"line_end":800,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194538,"byte_end":194541,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194546,"byte_end":194560,"line_start":802,"line_end":802,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194565,"byte_end":194568,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194573,"byte_end":194580,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194585,"byte_end":194626,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194631,"byte_end":194655,"line_start":806,"line_end":806,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194660,"byte_end":194703,"line_start":807,"line_end":807,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194708,"byte_end":194736,"line_start":808,"line_end":808,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194741,"byte_end":194744,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194749,"byte_end":194787,"line_start":810,"line_end":810,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194792,"byte_end":194795,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194800,"byte_end":194818,"line_start":812,"line_end":812,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194823,"byte_end":194865,"line_start":813,"line_end":813,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194870,"byte_end":194885,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194890,"byte_end":194909,"line_start":815,"line_end":815,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194914,"byte_end":194939,"line_start":816,"line_end":816,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194944,"byte_end":194960,"line_start":817,"line_end":817,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194965,"byte_end":194992,"line_start":818,"line_end":818,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":194997,"byte_end":195006,"line_start":819,"line_end":819,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195011,"byte_end":195018,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195023,"byte_end":195026,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195031,"byte_end":195076,"line_start":822,"line_end":822,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195081,"byte_end":195084,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195089,"byte_end":195159,"line_start":824,"line_end":824,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195164,"byte_end":195173,"line_start":825,"line_end":825,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195178,"byte_end":195185,"line_start":826,"line_end":826,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3456},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196442,"byte_end":196450,"line_start":868,"line_end":868,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195384,"byte_end":195455,"line_start":835,"line_end":835,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195460,"byte_end":195503,"line_start":836,"line_end":836,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195508,"byte_end":195511,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195516,"byte_end":195591,"line_start":838,"line_end":838,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195596,"byte_end":195666,"line_start":839,"line_end":839,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195671,"byte_end":195709,"line_start":840,"line_end":840,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195714,"byte_end":195717,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195722,"byte_end":195797,"line_start":842,"line_end":842,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195802,"byte_end":195845,"line_start":843,"line_end":843,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195850,"byte_end":195853,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195858,"byte_end":195931,"line_start":845,"line_end":845,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195936,"byte_end":195979,"line_start":846,"line_end":846,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195984,"byte_end":195987,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":195992,"byte_end":196006,"line_start":848,"line_end":848,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196011,"byte_end":196014,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196019,"byte_end":196026,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196031,"byte_end":196072,"line_start":851,"line_end":851,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196077,"byte_end":196101,"line_start":852,"line_end":852,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196106,"byte_end":196149,"line_start":853,"line_end":853,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196154,"byte_end":196157,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196162,"byte_end":196180,"line_start":855,"line_end":855,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196185,"byte_end":196188,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196193,"byte_end":196198,"line_start":857,"line_end":857,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196203,"byte_end":196264,"line_start":858,"line_end":858,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196269,"byte_end":196291,"line_start":859,"line_end":859,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196296,"byte_end":196325,"line_start":860,"line_end":860,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196330,"byte_end":196341,"line_start":861,"line_end":861,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196346,"byte_end":196364,"line_start":862,"line_end":862,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196369,"byte_end":196374,"line_start":863,"line_end":863,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196379,"byte_end":196382,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196387,"byte_end":196408,"line_start":865,"line_end":865,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196413,"byte_end":196422,"line_start":866,"line_end":866,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196427,"byte_end":196434,"line_start":867,"line_end":867,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3459},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198656,"byte_end":198675,"line_start":924,"line_end":924,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196669,"byte_end":196740,"line_start":877,"line_end":877,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196745,"byte_end":196819,"line_start":878,"line_end":878,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196824,"byte_end":196838,"line_start":879,"line_end":879,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196843,"byte_end":196846,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196851,"byte_end":196914,"line_start":881,"line_end":881,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196919,"byte_end":196990,"line_start":882,"line_end":882,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":196995,"byte_end":197047,"line_start":883,"line_end":883,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197052,"byte_end":197055,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197060,"byte_end":197135,"line_start":885,"line_end":885,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197140,"byte_end":197210,"line_start":886,"line_end":886,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197215,"byte_end":197279,"line_start":887,"line_end":887,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197284,"byte_end":197287,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197292,"byte_end":197363,"line_start":889,"line_end":889,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197368,"byte_end":197438,"line_start":890,"line_end":890,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197443,"byte_end":197504,"line_start":891,"line_end":891,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197509,"byte_end":197576,"line_start":892,"line_end":892,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197581,"byte_end":197650,"line_start":893,"line_end":893,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197655,"byte_end":197727,"line_start":894,"line_end":894,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197732,"byte_end":197735,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197740,"byte_end":197815,"line_start":896,"line_end":896,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197820,"byte_end":197877,"line_start":897,"line_end":897,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197882,"byte_end":197885,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197890,"byte_end":197904,"line_start":899,"line_end":899,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197909,"byte_end":197912,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197917,"byte_end":197924,"line_start":901,"line_end":901,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197929,"byte_end":197970,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":197975,"byte_end":198009,"line_start":903,"line_end":903,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198014,"byte_end":198057,"line_start":904,"line_end":904,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198062,"byte_end":198065,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198070,"byte_end":198110,"line_start":906,"line_end":906,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198115,"byte_end":198155,"line_start":907,"line_end":907,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198160,"byte_end":198200,"line_start":908,"line_end":908,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198205,"byte_end":198208,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198213,"byte_end":198281,"line_start":910,"line_end":910,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198286,"byte_end":198308,"line_start":911,"line_end":911,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198313,"byte_end":198338,"line_start":912,"line_end":912,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198343,"byte_end":198373,"line_start":913,"line_end":913,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198378,"byte_end":198387,"line_start":914,"line_end":914,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198392,"byte_end":198398,"line_start":915,"line_end":915,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198403,"byte_end":198429,"line_start":916,"line_end":916,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198434,"byte_end":198460,"line_start":917,"line_end":917,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198465,"byte_end":198491,"line_start":918,"line_end":918,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198496,"byte_end":198510,"line_start":919,"line_end":919,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198515,"byte_end":198523,"line_start":920,"line_end":920,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198528,"byte_end":198535,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198623,"byte_end":198648,"line_start":923,"line_end":923,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3463},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199500,"byte_end":199504,"line_start":953,"line_end":953,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":198992,"byte_end":199063,"line_start":937,"line_end":937,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199068,"byte_end":199071,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199076,"byte_end":199149,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199154,"byte_end":199189,"line_start":940,"line_end":940,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199194,"byte_end":199197,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199202,"byte_end":199216,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199221,"byte_end":199224,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199229,"byte_end":199236,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199241,"byte_end":199282,"line_start":945,"line_end":945,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199287,"byte_end":199330,"line_start":946,"line_end":946,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199335,"byte_end":199338,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199343,"byte_end":199389,"line_start":948,"line_end":948,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199394,"byte_end":199397,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199402,"byte_end":199466,"line_start":950,"line_end":950,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199471,"byte_end":199480,"line_start":951,"line_end":951,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199485,"byte_end":199492,"line_start":952,"line_end":952,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3464},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200169,"byte_end":200173,"line_start":976,"line_end":976,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199642,"byte_end":199714,"line_start":960,"line_end":960,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199719,"byte_end":199722,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199727,"byte_end":199800,"line_start":962,"line_end":962,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199805,"byte_end":199851,"line_start":963,"line_end":963,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199856,"byte_end":199859,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199864,"byte_end":199878,"line_start":965,"line_end":965,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199883,"byte_end":199886,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199891,"byte_end":199898,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199903,"byte_end":199944,"line_start":968,"line_end":968,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199949,"byte_end":199992,"line_start":969,"line_end":969,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":199997,"byte_end":200000,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200005,"byte_end":200051,"line_start":971,"line_end":971,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200056,"byte_end":200059,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200064,"byte_end":200135,"line_start":973,"line_end":973,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200140,"byte_end":200149,"line_start":974,"line_end":974,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200154,"byte_end":200161,"line_start":975,"line_end":975,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3465},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201794,"byte_end":201798,"line_start":1022,"line_end":1022,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200311,"byte_end":200382,"line_start":983,"line_end":983,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200387,"byte_end":200460,"line_start":984,"line_end":984,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200465,"byte_end":200503,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200508,"byte_end":200511,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200516,"byte_end":200570,"line_start":987,"line_end":987,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200575,"byte_end":200647,"line_start":988,"line_end":988,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200652,"byte_end":200728,"line_start":989,"line_end":989,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200733,"byte_end":200801,"line_start":990,"line_end":990,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200806,"byte_end":200882,"line_start":991,"line_end":991,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200887,"byte_end":200909,"line_start":992,"line_end":992,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200914,"byte_end":200917,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200922,"byte_end":200989,"line_start":994,"line_end":994,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":200994,"byte_end":201062,"line_start":995,"line_end":995,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201067,"byte_end":201080,"line_start":996,"line_end":996,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201085,"byte_end":201088,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201093,"byte_end":201107,"line_start":998,"line_end":998,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201112,"byte_end":201115,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201120,"byte_end":201127,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201132,"byte_end":201175,"line_start":1001,"line_end":1001,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201180,"byte_end":201223,"line_start":1002,"line_end":1002,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201228,"byte_end":201256,"line_start":1003,"line_end":1003,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201261,"byte_end":201264,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201269,"byte_end":201287,"line_start":1005,"line_end":1005,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201292,"byte_end":201330,"line_start":1006,"line_end":1006,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201335,"byte_end":201350,"line_start":1007,"line_end":1007,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201355,"byte_end":201372,"line_start":1008,"line_end":1008,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201377,"byte_end":201419,"line_start":1009,"line_end":1009,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201424,"byte_end":201459,"line_start":1010,"line_end":1010,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201464,"byte_end":201508,"line_start":1011,"line_end":1011,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201513,"byte_end":201522,"line_start":1012,"line_end":1012,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201527,"byte_end":201541,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201546,"byte_end":201549,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201554,"byte_end":201597,"line_start":1015,"line_end":1015,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201602,"byte_end":201639,"line_start":1016,"line_end":1016,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201644,"byte_end":201681,"line_start":1017,"line_end":1017,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201686,"byte_end":201720,"line_start":1018,"line_end":1018,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201725,"byte_end":201759,"line_start":1019,"line_end":1019,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201764,"byte_end":201774,"line_start":1020,"line_end":1020,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201779,"byte_end":201786,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3466},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202727,"byte_end":202733,"line_start":1055,"line_end":1055,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201923,"byte_end":201970,"line_start":1029,"line_end":1029,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201975,"byte_end":201978,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":201983,"byte_end":202057,"line_start":1031,"line_end":1031,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202062,"byte_end":202099,"line_start":1032,"line_end":1032,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202104,"byte_end":202107,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202112,"byte_end":202126,"line_start":1034,"line_end":1034,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202131,"byte_end":202134,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202139,"byte_end":202146,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202151,"byte_end":202192,"line_start":1037,"line_end":1037,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202197,"byte_end":202240,"line_start":1038,"line_end":1038,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202245,"byte_end":202248,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202253,"byte_end":202293,"line_start":1040,"line_end":1040,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202298,"byte_end":202301,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202306,"byte_end":202335,"line_start":1042,"line_end":1042,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202340,"byte_end":202368,"line_start":1043,"line_end":1043,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202373,"byte_end":202430,"line_start":1044,"line_end":1044,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202435,"byte_end":202462,"line_start":1045,"line_end":1045,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202467,"byte_end":202490,"line_start":1046,"line_end":1046,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202495,"byte_end":202498,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202503,"byte_end":202538,"line_start":1048,"line_end":1048,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202543,"byte_end":202571,"line_start":1049,"line_end":1049,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202576,"byte_end":202633,"line_start":1050,"line_end":1050,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202638,"byte_end":202665,"line_start":1051,"line_end":1051,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202670,"byte_end":202693,"line_start":1052,"line_end":1052,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202698,"byte_end":202707,"line_start":1053,"line_end":1053,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202712,"byte_end":202719,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3467},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204492,"byte_end":204504,"line_start":1100,"line_end":1100,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202784,"byte_end":202838,"line_start":1059,"line_end":1059,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202843,"byte_end":202846,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202851,"byte_end":202926,"line_start":1061,"line_end":1061,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202931,"byte_end":202934,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":202939,"byte_end":203014,"line_start":1063,"line_end":1063,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203019,"byte_end":203093,"line_start":1064,"line_end":1064,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203098,"byte_end":203172,"line_start":1065,"line_end":1065,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203177,"byte_end":203226,"line_start":1066,"line_end":1066,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203231,"byte_end":203234,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203239,"byte_end":203314,"line_start":1068,"line_end":1068,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203319,"byte_end":203389,"line_start":1069,"line_end":1069,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203394,"byte_end":203461,"line_start":1070,"line_end":1070,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203466,"byte_end":203538,"line_start":1071,"line_end":1071,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203543,"byte_end":203612,"line_start":1072,"line_end":1072,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203617,"byte_end":203632,"line_start":1073,"line_end":1073,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203637,"byte_end":203640,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203645,"byte_end":203709,"line_start":1075,"line_end":1075,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203714,"byte_end":203771,"line_start":1076,"line_end":1076,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203776,"byte_end":203779,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203784,"byte_end":203798,"line_start":1078,"line_end":1078,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203803,"byte_end":203806,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203811,"byte_end":203818,"line_start":1080,"line_end":1080,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203823,"byte_end":203864,"line_start":1081,"line_end":1081,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203869,"byte_end":203912,"line_start":1082,"line_end":1082,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203917,"byte_end":203920,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203925,"byte_end":203987,"line_start":1084,"line_end":1084,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":203992,"byte_end":204022,"line_start":1085,"line_end":1085,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204027,"byte_end":204081,"line_start":1086,"line_end":1086,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204086,"byte_end":204116,"line_start":1087,"line_end":1087,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204121,"byte_end":204170,"line_start":1088,"line_end":1088,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204175,"byte_end":204178,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204183,"byte_end":204245,"line_start":1090,"line_end":1090,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204250,"byte_end":204272,"line_start":1091,"line_end":1091,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204277,"byte_end":204297,"line_start":1092,"line_end":1092,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204302,"byte_end":204344,"line_start":1093,"line_end":1093,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204349,"byte_end":204354,"line_start":1094,"line_end":1094,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204359,"byte_end":204392,"line_start":1095,"line_end":1095,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204397,"byte_end":204430,"line_start":1096,"line_end":1096,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204435,"byte_end":204444,"line_start":1097,"line_end":1097,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204449,"byte_end":204456,"line_start":1098,"line_end":1098,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204461,"byte_end":204484,"line_start":1099,"line_end":1099,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3468},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204880,"byte_end":204885,"line_start":1112,"line_end":1112,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204651,"byte_end":204692,"line_start":1107,"line_end":1107,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204697,"byte_end":204700,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204705,"byte_end":204780,"line_start":1109,"line_end":1109,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204785,"byte_end":204842,"line_start":1110,"line_end":1110,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":204847,"byte_end":204872,"line_start":1111,"line_end":1111,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3470},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":205341,"byte_end":205352,"line_start":1126,"line_end":1126,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":205040,"byte_end":205081,"line_start":1119,"line_end":1119,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":205086,"byte_end":205089,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":205094,"byte_end":205153,"line_start":1121,"line_end":1121,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":205158,"byte_end":205161,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":205166,"byte_end":205241,"line_start":1123,"line_end":1123,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":205246,"byte_end":205303,"line_start":1124,"line_end":1124,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":205308,"byte_end":205333,"line_start":1125,"line_end":1125,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3472},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":206289,"byte_end":206297,"line_start":1147,"line_end":1147,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":205505,"byte_end":205568,"line_start":1133,"line_end":1133,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":205573,"byte_end":205576,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":205581,"byte_end":205656,"line_start":1135,"line_end":1135,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":205661,"byte_end":205737,"line_start":1136,"line_end":1136,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":205742,"byte_end":205815,"line_start":1137,"line_end":1137,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":205820,"byte_end":205893,"line_start":1138,"line_end":1138,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":205898,"byte_end":205940,"line_start":1139,"line_end":1139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":205945,"byte_end":205948,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":205953,"byte_end":206018,"line_start":1141,"line_end":1141,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":206023,"byte_end":206026,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":206031,"byte_end":206106,"line_start":1143,"line_end":1143,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":206111,"byte_end":206168,"line_start":1144,"line_end":1144,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":206256,"byte_end":206281,"line_start":1146,"line_end":1146,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208021,"byte_end":208037,"line_start":1192,"line_end":1192,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":206491,"byte_end":206566,"line_start":1155,"line_end":1155,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":206571,"byte_end":206574,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":206579,"byte_end":206654,"line_start":1157,"line_end":1157,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":206659,"byte_end":206733,"line_start":1158,"line_end":1158,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":206738,"byte_end":206810,"line_start":1159,"line_end":1159,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":206815,"byte_end":206889,"line_start":1160,"line_end":1160,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":206894,"byte_end":206923,"line_start":1161,"line_end":1161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":206928,"byte_end":206931,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":206936,"byte_end":207001,"line_start":1163,"line_end":1163,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207006,"byte_end":207009,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207014,"byte_end":207089,"line_start":1165,"line_end":1165,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207094,"byte_end":207151,"line_start":1166,"line_end":1166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207156,"byte_end":207159,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207164,"byte_end":207178,"line_start":1168,"line_end":1168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207183,"byte_end":207186,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207191,"byte_end":207198,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207203,"byte_end":207244,"line_start":1171,"line_end":1171,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207249,"byte_end":207283,"line_start":1172,"line_end":1172,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207288,"byte_end":207331,"line_start":1173,"line_end":1173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207336,"byte_end":207339,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207344,"byte_end":207394,"line_start":1175,"line_end":1175,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207399,"byte_end":207449,"line_start":1176,"line_end":1176,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207454,"byte_end":207457,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207462,"byte_end":207529,"line_start":1178,"line_end":1178,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207534,"byte_end":207596,"line_start":1179,"line_end":1179,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207601,"byte_end":207604,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207609,"byte_end":207634,"line_start":1181,"line_end":1181,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207639,"byte_end":207693,"line_start":1182,"line_end":1182,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207698,"byte_end":207701,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207706,"byte_end":207731,"line_start":1184,"line_end":1184,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207736,"byte_end":207790,"line_start":1185,"line_end":1185,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207795,"byte_end":207798,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207803,"byte_end":207847,"line_start":1187,"line_end":1187,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207852,"byte_end":207888,"line_start":1188,"line_end":1188,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207893,"byte_end":207900,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":207988,"byte_end":208013,"line_start":1191,"line_end":1191,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3474},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208933,"byte_end":208936,"line_start":1222,"line_end":1222,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208245,"byte_end":208293,"line_start":1200,"line_end":1200,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208298,"byte_end":208301,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208306,"byte_end":208379,"line_start":1202,"line_end":1202,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208384,"byte_end":208456,"line_start":1203,"line_end":1203,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208461,"byte_end":208474,"line_start":1204,"line_end":1204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208479,"byte_end":208482,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208487,"byte_end":208501,"line_start":1206,"line_end":1206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208506,"byte_end":208509,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208514,"byte_end":208521,"line_start":1208,"line_end":1208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208526,"byte_end":208567,"line_start":1209,"line_end":1209,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208572,"byte_end":208615,"line_start":1210,"line_end":1210,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208620,"byte_end":208623,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208628,"byte_end":208666,"line_start":1212,"line_end":1212,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208671,"byte_end":208710,"line_start":1213,"line_end":1213,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208715,"byte_end":208718,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208723,"byte_end":208757,"line_start":1215,"line_end":1215,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208762,"byte_end":208803,"line_start":1216,"line_end":1216,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208808,"byte_end":208836,"line_start":1217,"line_end":1217,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208841,"byte_end":208891,"line_start":1218,"line_end":1218,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208896,"byte_end":208905,"line_start":1219,"line_end":1219,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208910,"byte_end":208917,"line_start":1220,"line_end":1220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":208922,"byte_end":208925,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3476},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209844,"byte_end":209849,"line_start":1253,"line_end":1253,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209117,"byte_end":209154,"line_start":1230,"line_end":1230,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209159,"byte_end":209162,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209167,"byte_end":209238,"line_start":1232,"line_end":1232,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209243,"byte_end":209319,"line_start":1233,"line_end":1233,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209324,"byte_end":209327,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209332,"byte_end":209339,"line_start":1235,"line_end":1235,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209344,"byte_end":209385,"line_start":1236,"line_end":1236,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209390,"byte_end":209433,"line_start":1237,"line_end":1237,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209438,"byte_end":209441,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209446,"byte_end":209503,"line_start":1239,"line_end":1239,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209508,"byte_end":209564,"line_start":1240,"line_end":1240,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209569,"byte_end":209572,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209577,"byte_end":209617,"line_start":1242,"line_end":1242,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209622,"byte_end":209625,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209630,"byte_end":209678,"line_start":1244,"line_end":1244,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209683,"byte_end":209711,"line_start":1245,"line_end":1245,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209716,"byte_end":209731,"line_start":1246,"line_end":1246,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209736,"byte_end":209755,"line_start":1247,"line_end":1247,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209760,"byte_end":209778,"line_start":1248,"line_end":1248,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209783,"byte_end":209798,"line_start":1249,"line_end":1249,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209803,"byte_end":209810,"line_start":1250,"line_end":1250,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209815,"byte_end":209824,"line_start":1251,"line_end":1251,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":209829,"byte_end":209836,"line_start":1252,"line_end":1252,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3478},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":210187,"byte_end":210195,"line_start":1264,"line_end":1264,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":210041,"byte_end":210096,"line_start":1261,"line_end":1261,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":210101,"byte_end":210104,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":210109,"byte_end":210179,"line_start":1263,"line_end":1263,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3479},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211230,"byte_end":211236,"line_start":1290,"line_end":1290,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":210328,"byte_end":210395,"line_start":1271,"line_end":1271,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":210400,"byte_end":210403,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":210408,"byte_end":210482,"line_start":1273,"line_end":1273,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":210487,"byte_end":210559,"line_start":1274,"line_end":1274,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":210564,"byte_end":210616,"line_start":1275,"line_end":1275,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":210621,"byte_end":210624,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":210629,"byte_end":210702,"line_start":1277,"line_end":1277,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":210707,"byte_end":210781,"line_start":1278,"line_end":1278,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":210786,"byte_end":210861,"line_start":1279,"line_end":1279,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":210866,"byte_end":210938,"line_start":1280,"line_end":1280,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":210943,"byte_end":210955,"line_start":1281,"line_end":1281,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":210960,"byte_end":210963,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":210968,"byte_end":211043,"line_start":1283,"line_end":1283,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211048,"byte_end":211105,"line_start":1284,"line_end":1284,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211110,"byte_end":211113,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211118,"byte_end":211130,"line_start":1286,"line_end":1286,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211135,"byte_end":211138,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211143,"byte_end":211192,"line_start":1288,"line_end":1288,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211197,"byte_end":211222,"line_start":1289,"line_end":1289,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3480},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":212333,"byte_end":212345,"line_start":1316,"line_end":1316,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211397,"byte_end":211470,"line_start":1297,"line_end":1297,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211475,"byte_end":211478,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211483,"byte_end":211556,"line_start":1299,"line_end":1299,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211561,"byte_end":211631,"line_start":1300,"line_end":1300,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211636,"byte_end":211711,"line_start":1301,"line_end":1301,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211716,"byte_end":211793,"line_start":1302,"line_end":1302,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211798,"byte_end":211826,"line_start":1303,"line_end":1303,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211831,"byte_end":211834,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211839,"byte_end":211912,"line_start":1305,"line_end":1305,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211917,"byte_end":211992,"line_start":1306,"line_end":1306,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":211997,"byte_end":212058,"line_start":1307,"line_end":1307,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":212063,"byte_end":212066,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":212071,"byte_end":212146,"line_start":1309,"line_end":1309,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":212151,"byte_end":212208,"line_start":1310,"line_end":1310,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":212213,"byte_end":212216,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":212221,"byte_end":212233,"line_start":1312,"line_end":1312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":212238,"byte_end":212241,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":212246,"byte_end":212295,"line_start":1314,"line_end":1314,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":212300,"byte_end":212325,"line_start":1315,"line_end":1315,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3481},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":215067,"byte_end":215074,"line_start":1375,"line_end":1375,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":214764,"byte_end":214837,"line_start":1370,"line_end":1370,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":214842,"byte_end":214845,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":214850,"byte_end":214919,"line_start":1372,"line_end":1372,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":214924,"byte_end":214993,"line_start":1373,"line_end":1373,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":214998,"byte_end":215059,"line_start":1374,"line_end":1374,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3483},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":215530,"byte_end":215541,"line_start":1388,"line_end":1388,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":215251,"byte_end":215326,"line_start":1383,"line_end":1383,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":215331,"byte_end":215352,"line_start":1384,"line_end":1384,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":215357,"byte_end":215360,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":215365,"byte_end":215445,"line_start":1386,"line_end":1386,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":215450,"byte_end":215522,"line_start":1387,"line_end":1387,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3485},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":215994,"byte_end":216006,"line_start":1401,"line_end":1401,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":215715,"byte_end":215791,"line_start":1396,"line_end":1396,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":215796,"byte_end":215817,"line_start":1397,"line_end":1397,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":215822,"byte_end":215825,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":215830,"byte_end":215909,"line_start":1399,"line_end":1399,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":215914,"byte_end":215986,"line_start":1400,"line_end":1400,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3487},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":216282,"byte_end":216297,"line_start":1411,"line_end":1411,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":216181,"byte_end":216252,"line_start":1409,"line_end":1409,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":216257,"byte_end":216274,"line_start":1410,"line_end":1410,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3488},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":218398,"byte_end":218414,"line_start":1466,"line_end":1466,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":216444,"byte_end":216519,"line_start":1418,"line_end":1418,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":216524,"byte_end":216534,"line_start":1419,"line_end":1419,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":216539,"byte_end":216542,"line_start":1420,"line_end":1420,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":216547,"byte_end":216620,"line_start":1421,"line_end":1421,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":216625,"byte_end":216693,"line_start":1422,"line_end":1422,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":216698,"byte_end":216746,"line_start":1423,"line_end":1423,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":216751,"byte_end":216826,"line_start":1424,"line_end":1424,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":216831,"byte_end":216907,"line_start":1425,"line_end":1425,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":216912,"byte_end":216938,"line_start":1426,"line_end":1426,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":216943,"byte_end":216946,"line_start":1427,"line_end":1427,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":216951,"byte_end":217024,"line_start":1428,"line_end":1428,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217029,"byte_end":217099,"line_start":1429,"line_end":1429,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217104,"byte_end":217144,"line_start":1430,"line_end":1430,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217149,"byte_end":217152,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217157,"byte_end":217211,"line_start":1432,"line_end":1432,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217216,"byte_end":217300,"line_start":1433,"line_end":1433,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217305,"byte_end":217308,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217313,"byte_end":217327,"line_start":1435,"line_end":1435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217332,"byte_end":217335,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217340,"byte_end":217347,"line_start":1437,"line_end":1437,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217352,"byte_end":217393,"line_start":1438,"line_end":1438,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217398,"byte_end":217432,"line_start":1439,"line_end":1439,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217437,"byte_end":217492,"line_start":1440,"line_end":1440,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217497,"byte_end":217500,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217505,"byte_end":217540,"line_start":1442,"line_end":1442,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217545,"byte_end":217595,"line_start":1443,"line_end":1443,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217600,"byte_end":217622,"line_start":1444,"line_end":1444,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217627,"byte_end":217637,"line_start":1445,"line_end":1445,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217642,"byte_end":217659,"line_start":1446,"line_end":1446,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217664,"byte_end":217690,"line_start":1447,"line_end":1447,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217695,"byte_end":217750,"line_start":1448,"line_end":1448,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217755,"byte_end":217784,"line_start":1449,"line_end":1449,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217789,"byte_end":217852,"line_start":1450,"line_end":1450,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217857,"byte_end":217903,"line_start":1451,"line_end":1451,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217908,"byte_end":217922,"line_start":1452,"line_end":1452,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":217927,"byte_end":217996,"line_start":1453,"line_end":1453,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":218001,"byte_end":218026,"line_start":1454,"line_end":1454,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":218031,"byte_end":218084,"line_start":1455,"line_end":1455,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":218089,"byte_end":218118,"line_start":1456,"line_end":1456,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":218123,"byte_end":218136,"line_start":1457,"line_end":1457,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":218141,"byte_end":218211,"line_start":1458,"line_end":1458,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":218216,"byte_end":218275,"line_start":1459,"line_end":1459,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":218280,"byte_end":218310,"line_start":1460,"line_end":1460,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":218315,"byte_end":218324,"line_start":1461,"line_end":1461,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":218329,"byte_end":218334,"line_start":1462,"line_end":1462,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":218339,"byte_end":218364,"line_start":1463,"line_end":1463,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":218369,"byte_end":218378,"line_start":1464,"line_end":1464,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":218383,"byte_end":218390,"line_start":1465,"line_end":1465,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":11207},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\and_then.rs","byte_start":333893,"byte_end":333900,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":11211},{"krate":0,"index":11212},{"krate":0,"index":11213}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11271},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":297993,"byte_end":298000,"line_start":27,"line_end":27,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":11274}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11340},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":298248,"byte_end":298257,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":11343}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11409},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":298558,"byte_end":298568,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":11412}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11480},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_stream.rs","byte_start":336701,"byte_end":336711,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":11482}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11518},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":298994,"byte_end":298999,"line_start":52,"line_end":52,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":11521}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11587},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":299276,"byte_end":299282,"line_start":59,"line_end":59,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":11590}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11653},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\or_else.rs","byte_start":338082,"byte_end":338088,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":11657},{"krate":0,"index":11658},{"krate":0,"index":11659}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11714},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_next.rs","byte_start":340984,"byte_end":340991,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":11717}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_next.rs","byte_start":340817,"byte_end":340887,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_next.rs","byte_start":340905,"byte_end":340972,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11722},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_for_each.rs","byte_start":342099,"byte_end":342109,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":11726},{"krate":0,"index":11727},{"krate":0,"index":11728}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11779},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter.rs","byte_start":344052,"byte_end":344061,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":11783},{"krate":0,"index":11784},{"krate":0,"index":11785},{"krate":0,"index":11786}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11844},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":347301,"byte_end":347313,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":11848},{"krate":0,"index":11849},{"krate":0,"index":11850}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11910},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_flatten.rs","byte_start":350365,"byte_end":350375,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":11912},{"krate":0,"index":11913}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11956},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_collect.rs","byte_start":352553,"byte_end":352563,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":11959},{"krate":0,"index":11960}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12003},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_concat.rs","byte_start":353968,"byte_end":353977,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":12005},{"krate":0,"index":12006}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12038},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_fold.rs","byte_start":355424,"byte_end":355431,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":12043},{"krate":0,"index":12044},{"krate":0,"index":12045},{"krate":0,"index":12046}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4247},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359960,"byte_end":359970,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358103,"byte_end":358179,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358180,"byte_end":358183,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358184,"byte_end":358260,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358261,"byte_end":358331,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358332,"byte_end":358391,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358392,"byte_end":358395,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358396,"byte_end":358474,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358475,"byte_end":358552,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358553,"byte_end":358617,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358618,"byte_end":358621,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358622,"byte_end":358694,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358695,"byte_end":358773,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358774,"byte_end":358803,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358804,"byte_end":358807,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358808,"byte_end":358885,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358886,"byte_end":358950,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358951,"byte_end":359003,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359004,"byte_end":359007,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359008,"byte_end":359085,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359086,"byte_end":359158,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359159,"byte_end":359228,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359229,"byte_end":359307,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359308,"byte_end":359311,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359312,"byte_end":359325,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359326,"byte_end":359329,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359330,"byte_end":359337,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359338,"byte_end":359371,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359372,"byte_end":359395,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359396,"byte_end":359437,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359438,"byte_end":359484,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359485,"byte_end":359488,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359489,"byte_end":359548,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359549,"byte_end":359571,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359572,"byte_end":359606,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359607,"byte_end":359616,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359617,"byte_end":359620,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359621,"byte_end":359644,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359645,"byte_end":359684,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359685,"byte_end":359721,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359722,"byte_end":359765,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359766,"byte_end":359782,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359783,"byte_end":359803,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359804,"byte_end":359813,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359814,"byte_end":359821,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359822,"byte_end":359825,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359826,"byte_end":359891,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359892,"byte_end":359934,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359935,"byte_end":359944,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359945,"byte_end":359952,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12107},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":360362,"byte_end":360371,"line_start":74,"line_end":74,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":12111},{"krate":0,"index":12112},{"krate":0,"index":12113}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12164},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":362341,"byte_end":362353,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":12168},{"krate":0,"index":12169},{"krate":0,"index":12170},{"krate":0,"index":12171},{"krate":0,"index":12172}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12233},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_take_while.rs","byte_start":366025,"byte_end":366037,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":12237},{"krate":0,"index":12238},{"krate":0,"index":12239},{"krate":0,"index":12240},{"krate":0,"index":12241}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14523},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":12720965,"byte_end":12720983,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":14525},{"krate":0,"index":14526},{"krate":0,"index":14527}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14479},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_buffered.rs","byte_start":12723564,"byte_end":12723575,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":14481},{"krate":0,"index":14482},{"krate":0,"index":14483}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14413},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":12726130,"byte_end":12726150,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":14417},{"krate":0,"index":14418},{"krate":0,"index":14419},{"krate":0,"index":14420}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12483},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_async_read.rs","byte_start":369790,"byte_end":369803,"line_start":14,"line_end":14,"column_start":12,"column_end":25},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":12485},{"krate":0,"index":12486}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_async_read.rs","byte_start":369582,"byte_end":369666,"line_start":10,"line_end":10,"column_start":1,"column_end":85}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_async_read.rs","byte_start":369684,"byte_end":369732,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":4449},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302168,"byte_end":302180,"line_start":144,"line_end":144,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":4450},{"krate":0,"index":4452},{"krate":0,"index":4455},{"krate":0,"index":4458},{"krate":0,"index":4461},{"krate":0,"index":4464},{"krate":0,"index":4466},{"krate":0,"index":4468},{"krate":0,"index":4469},{"krate":0,"index":4470},{"krate":0,"index":4473},{"krate":0,"index":4476},{"krate":0,"index":4479},{"krate":0,"index":4483},{"krate":0,"index":4485},{"krate":0,"index":4488},{"krate":0,"index":4492},{"krate":0,"index":4493},{"krate":0,"index":4497},{"krate":0,"index":4498},{"krate":0,"index":4499},{"krate":0,"index":4500},{"krate":0,"index":4501}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302106,"byte_end":302157,"line_start":143,"line_end":143,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4450},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302722,"byte_end":302730,"line_start":162,"line_end":162,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302198,"byte_end":302272,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302277,"byte_end":302303,"line_start":146,"line_end":146,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302308,"byte_end":302311,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302316,"byte_end":302330,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302335,"byte_end":302338,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302343,"byte_end":302350,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302355,"byte_end":302396,"line_start":151,"line_end":151,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302401,"byte_end":302447,"line_start":152,"line_end":152,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302452,"byte_end":302455,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302460,"byte_end":302480,"line_start":154,"line_end":154,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302485,"byte_end":302530,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302535,"byte_end":302566,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302571,"byte_end":302574,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302579,"byte_end":302633,"line_start":158,"line_end":158,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302638,"byte_end":302689,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302694,"byte_end":302702,"line_start":160,"line_end":160,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302707,"byte_end":302714,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4452},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303426,"byte_end":303432,"line_start":187,"line_end":187,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302906,"byte_end":302979,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302984,"byte_end":303015,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303020,"byte_end":303023,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303028,"byte_end":303042,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303047,"byte_end":303050,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303055,"byte_end":303062,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303067,"byte_end":303108,"line_start":176,"line_end":176,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303113,"byte_end":303159,"line_start":177,"line_end":177,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303164,"byte_end":303167,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303172,"byte_end":303192,"line_start":179,"line_end":179,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303197,"byte_end":303238,"line_start":180,"line_end":180,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303243,"byte_end":303274,"line_start":181,"line_end":181,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303279,"byte_end":303282,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303287,"byte_end":303340,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303345,"byte_end":303393,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303398,"byte_end":303406,"line_start":185,"line_end":185,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303411,"byte_end":303418,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4455},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304141,"byte_end":304148,"line_start":212,"line_end":212,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303622,"byte_end":303693,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303698,"byte_end":303729,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303734,"byte_end":303737,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303742,"byte_end":303756,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303761,"byte_end":303764,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303769,"byte_end":303776,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303781,"byte_end":303822,"line_start":201,"line_end":201,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303827,"byte_end":303873,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303878,"byte_end":303881,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303886,"byte_end":303906,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303911,"byte_end":303952,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303957,"byte_end":303989,"line_start":206,"line_end":206,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":303994,"byte_end":303997,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304002,"byte_end":304055,"line_start":208,"line_end":208,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304060,"byte_end":304108,"line_start":209,"line_end":209,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304113,"byte_end":304121,"line_start":210,"line_end":210,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304126,"byte_end":304133,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4458},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305753,"byte_end":305761,"line_start":258,"line_end":258,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304340,"byte_end":304416,"line_start":220,"line_end":220,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304421,"byte_end":304461,"line_start":221,"line_end":221,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304466,"byte_end":304469,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304474,"byte_end":304550,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304555,"byte_end":304631,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304636,"byte_end":304709,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304714,"byte_end":304756,"line_start":226,"line_end":226,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304761,"byte_end":304764,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304769,"byte_end":304842,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304847,"byte_end":304878,"line_start":229,"line_end":229,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304883,"byte_end":304886,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304891,"byte_end":304965,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":304970,"byte_end":305044,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305049,"byte_end":305065,"line_start":233,"line_end":233,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305070,"byte_end":305073,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305078,"byte_end":305149,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305154,"byte_end":305180,"line_start":236,"line_end":236,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305185,"byte_end":305188,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305193,"byte_end":305265,"line_start":238,"line_end":238,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305270,"byte_end":305319,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305324,"byte_end":305327,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305332,"byte_end":305346,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305351,"byte_end":305354,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305359,"byte_end":305366,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305371,"byte_end":305402,"line_start":244,"line_end":244,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305407,"byte_end":305431,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305436,"byte_end":305474,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305479,"byte_end":305482,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305487,"byte_end":305543,"line_start":248,"line_end":248,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305548,"byte_end":305551,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305556,"byte_end":305591,"line_start":250,"line_end":250,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305596,"byte_end":305635,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305640,"byte_end":305664,"line_start":252,"line_end":252,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305669,"byte_end":305685,"line_start":253,"line_end":253,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305690,"byte_end":305706,"line_start":254,"line_end":254,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305711,"byte_end":305721,"line_start":255,"line_end":255,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305726,"byte_end":305733,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":305738,"byte_end":305745,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4461},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306913,"byte_end":306920,"line_start":284,"line_end":284,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306014,"byte_end":306079,"line_start":267,"line_end":267,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306084,"byte_end":306133,"line_start":268,"line_end":268,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306138,"byte_end":306141,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306146,"byte_end":306225,"line_start":270,"line_end":270,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306230,"byte_end":306304,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306309,"byte_end":306385,"line_start":272,"line_end":272,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306390,"byte_end":306435,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306440,"byte_end":306443,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306448,"byte_end":306523,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306528,"byte_end":306568,"line_start":276,"line_end":276,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306573,"byte_end":306576,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306581,"byte_end":306690,"line_start":278,"line_end":278,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306695,"byte_end":306769,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306774,"byte_end":306790,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306795,"byte_end":306798,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306803,"byte_end":306874,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":306879,"byte_end":306905,"line_start":283,"line_end":283,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4464},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":307472,"byte_end":307482,"line_start":299,"line_end":299,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":307169,"byte_end":307243,"line_start":293,"line_end":293,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":307248,"byte_end":307258,"line_start":294,"line_end":294,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":307263,"byte_end":307266,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":307271,"byte_end":307341,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":307346,"byte_end":307422,"line_start":297,"line_end":297,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":307427,"byte_end":307464,"line_start":298,"line_end":298,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4466},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":307971,"byte_end":307982,"line_start":312,"line_end":312,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":307680,"byte_end":307759,"line_start":307,"line_end":307,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":307764,"byte_end":307767,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":307772,"byte_end":307842,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":307847,"byte_end":307921,"line_start":310,"line_end":310,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":307926,"byte_end":307963,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4468},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308903,"byte_end":308914,"line_start":341,"line_end":341,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308185,"byte_end":308238,"line_start":320,"line_end":320,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308243,"byte_end":308287,"line_start":321,"line_end":321,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308292,"byte_end":308295,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308300,"byte_end":308349,"line_start":323,"line_end":323,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308354,"byte_end":308427,"line_start":324,"line_end":324,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308432,"byte_end":308452,"line_start":325,"line_end":325,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308457,"byte_end":308460,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308465,"byte_end":308479,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308484,"byte_end":308487,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308492,"byte_end":308499,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308504,"byte_end":308563,"line_start":330,"line_end":330,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308568,"byte_end":308571,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308576,"byte_end":308595,"line_start":332,"line_end":332,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308600,"byte_end":308618,"line_start":333,"line_end":333,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308623,"byte_end":308695,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308700,"byte_end":308730,"line_start":335,"line_end":335,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308735,"byte_end":308742,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308747,"byte_end":308821,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308826,"byte_end":308829,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308834,"byte_end":308883,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":308888,"byte_end":308895,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4469},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309809,"byte_end":309817,"line_start":368,"line_end":368,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309070,"byte_end":309144,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309149,"byte_end":309223,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309228,"byte_end":309240,"line_start":350,"line_end":350,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309245,"byte_end":309248,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309253,"byte_end":309320,"line_start":352,"line_end":352,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309325,"byte_end":309397,"line_start":353,"line_end":353,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309402,"byte_end":309441,"line_start":354,"line_end":354,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309446,"byte_end":309449,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309454,"byte_end":309468,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309473,"byte_end":309476,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309481,"byte_end":309488,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309493,"byte_end":309534,"line_start":359,"line_end":359,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309539,"byte_end":309585,"line_start":360,"line_end":360,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309590,"byte_end":309593,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309598,"byte_end":309655,"line_start":362,"line_end":362,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309660,"byte_end":309663,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309668,"byte_end":309722,"line_start":364,"line_end":364,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309727,"byte_end":309776,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309781,"byte_end":309789,"line_start":366,"line_end":366,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309794,"byte_end":309801,"line_start":367,"line_end":367,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4470},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311169,"byte_end":311181,"line_start":408,"line_end":408,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":309984,"byte_end":310053,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310058,"byte_end":310114,"line_start":376,"line_end":376,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310119,"byte_end":310122,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310127,"byte_end":310202,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310207,"byte_end":310277,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310282,"byte_end":310320,"line_start":380,"line_end":380,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310325,"byte_end":310328,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310333,"byte_end":310411,"line_start":382,"line_end":382,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310416,"byte_end":310476,"line_start":383,"line_end":383,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310481,"byte_end":310538,"line_start":384,"line_end":384,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310543,"byte_end":310610,"line_start":385,"line_end":385,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310615,"byte_end":310645,"line_start":386,"line_end":386,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310650,"byte_end":310653,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310658,"byte_end":310672,"line_start":388,"line_end":388,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310677,"byte_end":310680,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310685,"byte_end":310692,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310697,"byte_end":310738,"line_start":391,"line_end":391,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310743,"byte_end":310767,"line_start":392,"line_end":392,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310772,"byte_end":310818,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310823,"byte_end":310826,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310831,"byte_end":310852,"line_start":395,"line_end":395,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310857,"byte_end":310860,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310865,"byte_end":310870,"line_start":397,"line_end":397,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310875,"byte_end":310936,"line_start":398,"line_end":398,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310941,"byte_end":310963,"line_start":399,"line_end":399,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":310968,"byte_end":311032,"line_start":400,"line_end":400,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311037,"byte_end":311048,"line_start":401,"line_end":401,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311053,"byte_end":311092,"line_start":402,"line_end":402,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311097,"byte_end":311102,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311107,"byte_end":311110,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311115,"byte_end":311136,"line_start":405,"line_end":405,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311141,"byte_end":311149,"line_start":406,"line_end":406,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311154,"byte_end":311161,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4473},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312194,"byte_end":312208,"line_start":438,"line_end":438,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311445,"byte_end":311519,"line_start":417,"line_end":417,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311524,"byte_end":311547,"line_start":418,"line_end":418,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311552,"byte_end":311555,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311560,"byte_end":311591,"line_start":420,"line_end":420,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311596,"byte_end":311673,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311678,"byte_end":311707,"line_start":422,"line_end":422,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311712,"byte_end":311715,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311720,"byte_end":311734,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311739,"byte_end":311742,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311747,"byte_end":311754,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311759,"byte_end":311800,"line_start":427,"line_end":427,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311805,"byte_end":311829,"line_start":428,"line_end":428,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311834,"byte_end":311880,"line_start":429,"line_end":429,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311885,"byte_end":311888,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311893,"byte_end":311962,"line_start":431,"line_end":431,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":311967,"byte_end":312037,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312042,"byte_end":312045,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312050,"byte_end":312117,"line_start":434,"line_end":434,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312122,"byte_end":312161,"line_start":435,"line_end":435,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312166,"byte_end":312174,"line_start":436,"line_end":436,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312179,"byte_end":312186,"line_start":437,"line_end":437,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4476},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":313241,"byte_end":313255,"line_start":468,"line_end":468,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312485,"byte_end":312559,"line_start":447,"line_end":447,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312564,"byte_end":312587,"line_start":448,"line_end":448,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312592,"byte_end":312595,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312600,"byte_end":312631,"line_start":450,"line_end":450,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312636,"byte_end":312713,"line_start":451,"line_end":451,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312718,"byte_end":312747,"line_start":452,"line_end":452,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312752,"byte_end":312755,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312760,"byte_end":312774,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312779,"byte_end":312782,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312787,"byte_end":312794,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312799,"byte_end":312840,"line_start":457,"line_end":457,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312845,"byte_end":312869,"line_start":458,"line_end":458,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312874,"byte_end":312920,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312925,"byte_end":312928,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":312933,"byte_end":313009,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":313014,"byte_end":313084,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":313089,"byte_end":313092,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":313097,"byte_end":313164,"line_start":464,"line_end":464,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":313169,"byte_end":313208,"line_start":465,"line_end":465,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":313213,"byte_end":313221,"line_start":466,"line_end":466,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":313226,"byte_end":313233,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4479},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":315214,"byte_end":315237,"line_start":520,"line_end":520,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":313532,"byte_end":313614,"line_start":477,"line_end":477,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":313619,"byte_end":313693,"line_start":478,"line_end":478,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":313698,"byte_end":313748,"line_start":479,"line_end":479,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":313753,"byte_end":313756,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":313761,"byte_end":313783,"line_start":481,"line_end":481,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":313788,"byte_end":313874,"line_start":482,"line_end":482,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":313879,"byte_end":313964,"line_start":483,"line_end":483,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":313969,"byte_end":313997,"line_start":484,"line_end":484,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314002,"byte_end":314005,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314010,"byte_end":314085,"line_start":486,"line_end":486,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314090,"byte_end":314147,"line_start":487,"line_end":487,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314152,"byte_end":314155,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314160,"byte_end":314174,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314179,"byte_end":314182,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314187,"byte_end":314194,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314199,"byte_end":314240,"line_start":492,"line_end":492,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314245,"byte_end":314279,"line_start":493,"line_end":493,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314284,"byte_end":314341,"line_start":494,"line_end":494,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314346,"byte_end":314349,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314354,"byte_end":314394,"line_start":496,"line_end":496,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314399,"byte_end":314439,"line_start":497,"line_end":497,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314444,"byte_end":314485,"line_start":498,"line_end":498,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314490,"byte_end":314493,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314498,"byte_end":314549,"line_start":500,"line_end":500,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314554,"byte_end":314607,"line_start":501,"line_end":501,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314612,"byte_end":314634,"line_start":502,"line_end":502,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314639,"byte_end":314664,"line_start":503,"line_end":503,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314669,"byte_end":314731,"line_start":504,"line_end":504,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314736,"byte_end":314751,"line_start":505,"line_end":505,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314756,"byte_end":314765,"line_start":506,"line_end":506,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314770,"byte_end":314776,"line_start":507,"line_end":507,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314781,"byte_end":314784,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314789,"byte_end":314815,"line_start":509,"line_end":509,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314820,"byte_end":314887,"line_start":510,"line_end":510,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314892,"byte_end":314906,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314911,"byte_end":314914,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314919,"byte_end":314980,"line_start":513,"line_end":513,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":314985,"byte_end":315013,"line_start":514,"line_end":514,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":315018,"byte_end":315068,"line_start":515,"line_end":515,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":315073,"byte_end":315081,"line_start":516,"line_end":516,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":315086,"byte_end":315093,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":315181,"byte_end":315206,"line_start":519,"line_end":519,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4483},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316686,"byte_end":316697,"line_start":567,"line_end":567,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":315647,"byte_end":315699,"line_start":537,"line_end":537,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":315704,"byte_end":315771,"line_start":538,"line_end":538,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":315776,"byte_end":315779,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":315784,"byte_end":315858,"line_start":540,"line_end":540,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":315863,"byte_end":315944,"line_start":541,"line_end":541,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":315949,"byte_end":316019,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316024,"byte_end":316027,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316032,"byte_end":316100,"line_start":544,"line_end":544,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316105,"byte_end":316108,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316113,"byte_end":316127,"line_start":546,"line_end":546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316132,"byte_end":316135,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316140,"byte_end":316147,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316152,"byte_end":316193,"line_start":549,"line_end":549,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316198,"byte_end":316229,"line_start":550,"line_end":550,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316234,"byte_end":316272,"line_start":551,"line_end":551,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316277,"byte_end":316297,"line_start":552,"line_end":552,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316302,"byte_end":316305,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316310,"byte_end":316347,"line_start":554,"line_end":554,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316352,"byte_end":316355,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316360,"byte_end":316387,"line_start":556,"line_end":556,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316392,"byte_end":316416,"line_start":557,"line_end":557,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316421,"byte_end":316467,"line_start":558,"line_end":558,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316472,"byte_end":316481,"line_start":559,"line_end":559,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316486,"byte_end":316529,"line_start":560,"line_end":560,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316534,"byte_end":316541,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316546,"byte_end":316549,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316554,"byte_end":316617,"line_start":563,"line_end":563,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316622,"byte_end":316653,"line_start":564,"line_end":564,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316658,"byte_end":316666,"line_start":565,"line_end":565,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316671,"byte_end":316678,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4485},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":318168,"byte_end":318178,"line_start":604,"line_end":604,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316880,"byte_end":316953,"line_start":574,"line_end":574,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316958,"byte_end":316992,"line_start":575,"line_end":575,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":316997,"byte_end":317000,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317005,"byte_end":317080,"line_start":577,"line_end":577,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317085,"byte_end":317160,"line_start":578,"line_end":578,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317165,"byte_end":317238,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317243,"byte_end":317314,"line_start":580,"line_end":580,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317319,"byte_end":317369,"line_start":581,"line_end":581,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317374,"byte_end":317377,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317382,"byte_end":317453,"line_start":583,"line_end":583,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317458,"byte_end":317461,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317466,"byte_end":317542,"line_start":585,"line_end":585,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317547,"byte_end":317617,"line_start":586,"line_end":586,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317622,"byte_end":317647,"line_start":587,"line_end":587,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317652,"byte_end":317655,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317660,"byte_end":317674,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317679,"byte_end":317686,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317691,"byte_end":317732,"line_start":591,"line_end":591,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317737,"byte_end":317761,"line_start":592,"line_end":592,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317766,"byte_end":317823,"line_start":593,"line_end":593,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317828,"byte_end":317831,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317836,"byte_end":317916,"line_start":595,"line_end":595,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317921,"byte_end":317964,"line_start":596,"line_end":596,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":317969,"byte_end":318002,"line_start":597,"line_end":597,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":318007,"byte_end":318014,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":318019,"byte_end":318022,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":318027,"byte_end":318075,"line_start":600,"line_end":600,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":318080,"byte_end":318135,"line_start":601,"line_end":601,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":318140,"byte_end":318148,"line_start":602,"line_end":602,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":318153,"byte_end":318160,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4488},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319805,"byte_end":319819,"line_start":645,"line_end":645,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":318429,"byte_end":318491,"line_start":613,"line_end":613,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":318496,"byte_end":318564,"line_start":614,"line_end":614,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":318569,"byte_end":318603,"line_start":615,"line_end":615,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":318608,"byte_end":318611,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":318616,"byte_end":318691,"line_start":617,"line_end":617,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":318696,"byte_end":318771,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":318776,"byte_end":318852,"line_start":619,"line_end":619,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":318857,"byte_end":318922,"line_start":620,"line_end":620,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":318927,"byte_end":318930,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":318935,"byte_end":319006,"line_start":622,"line_end":622,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319011,"byte_end":319014,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319019,"byte_end":319095,"line_start":624,"line_end":624,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319100,"byte_end":319174,"line_start":625,"line_end":625,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319179,"byte_end":319204,"line_start":626,"line_end":626,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319209,"byte_end":319212,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319217,"byte_end":319231,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319236,"byte_end":319243,"line_start":629,"line_end":629,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319248,"byte_end":319289,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319294,"byte_end":319351,"line_start":631,"line_end":631,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319356,"byte_end":319381,"line_start":632,"line_end":632,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319386,"byte_end":319389,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319394,"byte_end":319464,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319469,"byte_end":319524,"line_start":635,"line_end":635,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319529,"byte_end":319591,"line_start":636,"line_end":636,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319596,"byte_end":319611,"line_start":637,"line_end":637,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319616,"byte_end":319623,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319628,"byte_end":319631,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319636,"byte_end":319657,"line_start":640,"line_end":640,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319662,"byte_end":319711,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319716,"byte_end":319772,"line_start":642,"line_end":642,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319777,"byte_end":319785,"line_start":643,"line_end":643,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":319790,"byte_end":319797,"line_start":644,"line_end":644,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4492},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321511,"byte_end":321522,"line_start":692,"line_end":692,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320096,"byte_end":320161,"line_start":654,"line_end":654,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320166,"byte_end":320169,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320174,"byte_end":320247,"line_start":656,"line_end":656,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320252,"byte_end":320325,"line_start":657,"line_end":657,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320330,"byte_end":320403,"line_start":658,"line_end":658,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320408,"byte_end":320478,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320483,"byte_end":320486,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320491,"byte_end":320505,"line_start":661,"line_end":661,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320510,"byte_end":320513,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320518,"byte_end":320525,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320530,"byte_end":320571,"line_start":664,"line_end":664,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320576,"byte_end":320607,"line_start":665,"line_end":665,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320612,"byte_end":320663,"line_start":666,"line_end":666,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320668,"byte_end":320688,"line_start":667,"line_end":667,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320693,"byte_end":320696,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320701,"byte_end":320740,"line_start":669,"line_end":669,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320745,"byte_end":320784,"line_start":670,"line_end":670,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320789,"byte_end":320828,"line_start":671,"line_end":671,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320833,"byte_end":320836,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320841,"byte_end":320868,"line_start":673,"line_end":673,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320873,"byte_end":320916,"line_start":674,"line_end":674,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320921,"byte_end":320928,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320933,"byte_end":320960,"line_start":676,"line_end":676,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":320965,"byte_end":321008,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321013,"byte_end":321057,"line_start":678,"line_end":678,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321062,"byte_end":321069,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321074,"byte_end":321101,"line_start":680,"line_end":680,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321106,"byte_end":321151,"line_start":681,"line_end":681,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321156,"byte_end":321201,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321206,"byte_end":321250,"line_start":683,"line_end":683,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321255,"byte_end":321262,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321267,"byte_end":321270,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321275,"byte_end":321314,"line_start":686,"line_end":686,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321319,"byte_end":321368,"line_start":687,"line_end":687,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321373,"byte_end":321422,"line_start":688,"line_end":688,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321427,"byte_end":321477,"line_start":689,"line_end":689,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321482,"byte_end":321491,"line_start":690,"line_end":690,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321496,"byte_end":321503,"line_start":691,"line_end":691,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4493},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":323114,"byte_end":323122,"line_start":731,"line_end":731,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321827,"byte_end":321897,"line_start":703,"line_end":703,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321902,"byte_end":321962,"line_start":704,"line_end":704,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321967,"byte_end":321970,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":321975,"byte_end":322045,"line_start":706,"line_end":706,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322050,"byte_end":322126,"line_start":707,"line_end":707,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322131,"byte_end":322207,"line_start":708,"line_end":708,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322212,"byte_end":322282,"line_start":709,"line_end":709,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322287,"byte_end":322313,"line_start":710,"line_end":710,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322318,"byte_end":322321,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322326,"byte_end":322406,"line_start":712,"line_end":712,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322411,"byte_end":322480,"line_start":713,"line_end":713,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322485,"byte_end":322506,"line_start":714,"line_end":714,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322511,"byte_end":322514,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322519,"byte_end":322533,"line_start":716,"line_end":716,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322538,"byte_end":322541,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322546,"byte_end":322553,"line_start":718,"line_end":718,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322558,"byte_end":322599,"line_start":719,"line_end":719,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322604,"byte_end":322650,"line_start":720,"line_end":720,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322655,"byte_end":322658,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322663,"byte_end":322732,"line_start":722,"line_end":722,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322737,"byte_end":322814,"line_start":723,"line_end":723,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322819,"byte_end":322852,"line_start":724,"line_end":724,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322857,"byte_end":322860,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322865,"byte_end":322951,"line_start":726,"line_end":726,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":322956,"byte_end":323042,"line_start":727,"line_end":727,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":323047,"byte_end":323081,"line_start":728,"line_end":728,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":323086,"byte_end":323094,"line_start":729,"line_end":729,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":323099,"byte_end":323106,"line_start":730,"line_end":730,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4497},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324648,"byte_end":324658,"line_start":774,"line_end":774,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":323402,"byte_end":323464,"line_start":740,"line_end":740,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":323469,"byte_end":323544,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":323549,"byte_end":323552,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":323557,"byte_end":323628,"line_start":743,"line_end":743,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":323633,"byte_end":323709,"line_start":744,"line_end":744,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":323714,"byte_end":323753,"line_start":745,"line_end":745,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":323758,"byte_end":323761,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":323766,"byte_end":323852,"line_start":747,"line_end":747,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":323857,"byte_end":323860,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":323865,"byte_end":323949,"line_start":749,"line_end":749,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":323954,"byte_end":324010,"line_start":750,"line_end":750,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324015,"byte_end":324018,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324023,"byte_end":324037,"line_start":752,"line_end":752,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324042,"byte_end":324045,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324050,"byte_end":324057,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324062,"byte_end":324103,"line_start":755,"line_end":755,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324108,"byte_end":324139,"line_start":756,"line_end":756,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324144,"byte_end":324182,"line_start":757,"line_end":757,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324187,"byte_end":324207,"line_start":758,"line_end":758,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324212,"byte_end":324215,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324220,"byte_end":324281,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324286,"byte_end":324289,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324294,"byte_end":324321,"line_start":762,"line_end":762,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324326,"byte_end":324357,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324362,"byte_end":324388,"line_start":764,"line_end":764,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324393,"byte_end":324463,"line_start":765,"line_end":765,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324468,"byte_end":324477,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324482,"byte_end":324489,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324494,"byte_end":324497,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324502,"byte_end":324541,"line_start":769,"line_end":769,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324546,"byte_end":324549,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324554,"byte_end":324614,"line_start":771,"line_end":771,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324619,"byte_end":324628,"line_start":772,"line_end":772,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324633,"byte_end":324640,"line_start":773,"line_end":773,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4498},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":327424,"byte_end":327444,"line_start":841,"line_end":841,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324912,"byte_end":324990,"line_start":782,"line_end":782,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":324995,"byte_end":324998,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325003,"byte_end":325108,"line_start":784,"line_end":784,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325113,"byte_end":325156,"line_start":785,"line_end":785,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325161,"byte_end":325164,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325169,"byte_end":325237,"line_start":787,"line_end":787,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325242,"byte_end":325315,"line_start":788,"line_end":788,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325320,"byte_end":325376,"line_start":789,"line_end":789,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325381,"byte_end":325384,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325389,"byte_end":325464,"line_start":791,"line_end":791,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325469,"byte_end":325542,"line_start":792,"line_end":792,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325547,"byte_end":325612,"line_start":793,"line_end":793,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325617,"byte_end":325620,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325625,"byte_end":325700,"line_start":795,"line_end":795,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325705,"byte_end":325762,"line_start":796,"line_end":796,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325767,"byte_end":325770,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325775,"byte_end":325789,"line_start":798,"line_end":798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325794,"byte_end":325797,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325802,"byte_end":325854,"line_start":800,"line_end":800,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325859,"byte_end":325866,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325871,"byte_end":325912,"line_start":802,"line_end":802,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325917,"byte_end":325951,"line_start":803,"line_end":803,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":325956,"byte_end":326013,"line_start":804,"line_end":804,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326018,"byte_end":326021,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326026,"byte_end":326076,"line_start":806,"line_end":806,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326081,"byte_end":326131,"line_start":807,"line_end":807,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326136,"byte_end":326139,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326144,"byte_end":326219,"line_start":809,"line_end":809,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326224,"byte_end":326227,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326232,"byte_end":326298,"line_start":811,"line_end":811,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326303,"byte_end":326306,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326311,"byte_end":326336,"line_start":813,"line_end":813,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326341,"byte_end":326395,"line_start":814,"line_end":814,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326400,"byte_end":326403,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326408,"byte_end":326433,"line_start":816,"line_end":816,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326438,"byte_end":326492,"line_start":817,"line_end":817,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326497,"byte_end":326500,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326505,"byte_end":326549,"line_start":819,"line_end":819,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326554,"byte_end":326590,"line_start":820,"line_end":820,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326595,"byte_end":326602,"line_start":821,"line_end":821,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326607,"byte_end":326610,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326615,"byte_end":326675,"line_start":823,"line_end":823,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326680,"byte_end":326687,"line_start":824,"line_end":824,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326692,"byte_end":326733,"line_start":825,"line_end":825,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326738,"byte_end":326769,"line_start":826,"line_end":826,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326774,"byte_end":326825,"line_start":827,"line_end":827,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326830,"byte_end":326833,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326838,"byte_end":326892,"line_start":829,"line_end":829,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326897,"byte_end":326963,"line_start":830,"line_end":830,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326968,"byte_end":326971,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":326976,"byte_end":327025,"line_start":832,"line_end":832,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":327030,"byte_end":327084,"line_start":833,"line_end":833,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":327089,"byte_end":327092,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":327097,"byte_end":327150,"line_start":835,"line_end":835,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":327155,"byte_end":327227,"line_start":836,"line_end":836,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":327232,"byte_end":327291,"line_start":837,"line_end":837,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":327296,"byte_end":327303,"line_start":838,"line_end":838,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":327391,"byte_end":327416,"line_start":840,"line_end":840,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4499},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":330469,"byte_end":330481,"line_start":917,"line_end":917,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"pub fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":327721,"byte_end":327787,"line_start":851,"line_end":851,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":327792,"byte_end":327795,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":327800,"byte_end":327905,"line_start":853,"line_end":853,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":327910,"byte_end":327953,"line_start":854,"line_end":854,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":327958,"byte_end":327961,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":327966,"byte_end":328034,"line_start":856,"line_end":856,"column_start":5,"column_end":73}},{"value":"/ outputs in the order. If the underlying stream returns an error, it will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328039,"byte_end":328115,"line_start":857,"line_end":857,"column_start":5,"column_end":81}},{"value":"/ be immediately propagated.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328120,"byte_end":328150,"line_start":858,"line_end":858,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328155,"byte_end":328158,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328163,"byte_end":328238,"line_start":860,"line_end":860,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328243,"byte_end":328316,"line_start":861,"line_end":861,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328321,"byte_end":328386,"line_start":862,"line_end":862,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328391,"byte_end":328394,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328399,"byte_end":328474,"line_start":864,"line_end":864,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328479,"byte_end":328536,"line_start":865,"line_end":865,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328541,"byte_end":328544,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328549,"byte_end":328563,"line_start":867,"line_end":867,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328568,"byte_end":328571,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328576,"byte_end":328626,"line_start":869,"line_end":869,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328631,"byte_end":328638,"line_start":870,"line_end":870,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328643,"byte_end":328684,"line_start":871,"line_end":871,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328689,"byte_end":328723,"line_start":872,"line_end":872,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328728,"byte_end":328758,"line_start":873,"line_end":873,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328763,"byte_end":328820,"line_start":874,"line_end":874,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328825,"byte_end":328828,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328833,"byte_end":328883,"line_start":876,"line_end":876,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328888,"byte_end":328938,"line_start":877,"line_end":877,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328943,"byte_end":328946,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328951,"byte_end":328990,"line_start":879,"line_end":879,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":328995,"byte_end":329074,"line_start":880,"line_end":880,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329079,"byte_end":329082,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329087,"byte_end":329149,"line_start":882,"line_end":882,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329154,"byte_end":329157,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329162,"byte_end":329225,"line_start":884,"line_end":884,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329230,"byte_end":329233,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329238,"byte_end":329267,"line_start":886,"line_end":886,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329272,"byte_end":329335,"line_start":887,"line_end":887,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329340,"byte_end":329370,"line_start":888,"line_end":888,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329375,"byte_end":329389,"line_start":889,"line_end":889,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329394,"byte_end":329397,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329402,"byte_end":329427,"line_start":891,"line_end":891,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329432,"byte_end":329486,"line_start":892,"line_end":892,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329491,"byte_end":329545,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329550,"byte_end":329553,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329558,"byte_end":329602,"line_start":895,"line_end":895,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329607,"byte_end":329643,"line_start":896,"line_end":896,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329648,"byte_end":329655,"line_start":897,"line_end":897,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329660,"byte_end":329663,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329668,"byte_end":329728,"line_start":899,"line_end":899,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329733,"byte_end":329740,"line_start":900,"line_end":900,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329745,"byte_end":329786,"line_start":901,"line_end":901,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329791,"byte_end":329822,"line_start":902,"line_end":902,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329827,"byte_end":329878,"line_start":903,"line_end":903,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329883,"byte_end":329886,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329891,"byte_end":329945,"line_start":905,"line_end":905,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":329950,"byte_end":330008,"line_start":906,"line_end":906,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":330013,"byte_end":330016,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":330021,"byte_end":330070,"line_start":908,"line_end":908,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":330075,"byte_end":330129,"line_start":909,"line_end":909,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":330134,"byte_end":330137,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":330142,"byte_end":330195,"line_start":911,"line_end":911,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":330200,"byte_end":330272,"line_start":912,"line_end":912,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":330277,"byte_end":330336,"line_start":913,"line_end":913,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":330341,"byte_end":330348,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":330436,"byte_end":330461,"line_start":916,"line_end":916,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4500},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":330913,"byte_end":330932,"line_start":929,"line_end":929,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":330805,"byte_end":330883,"line_start":927,"line_end":927,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":330888,"byte_end":330905,"line_start":928,"line_end":928,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4501},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":333226,"byte_end":333241,"line_start":995,"line_end":995,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"pub fn into_async_read(Self) -> IntoAsyncRead<Self> where Self: Sized +\nTryStreamExt<Error = std::io::Error> + Unpin, Self::Ok: AsRef<[u8]>","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332004,"byte_end":332086,"line_start":967,"line_end":967,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332091,"byte_end":332094,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_async_read` moves the stream, the [`Stream`](futures_core::stream::Stream) type must be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332099,"byte_end":332214,"line_start":969,"line_end":969,"column_start":5,"column_end":120}},{"value":"/ [`Unpin`]. If you want to use `into_async_read` with a [`!Unpin`](Unpin) stream, you'll","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332219,"byte_end":332310,"line_start":970,"line_end":970,"column_start":5,"column_end":96}},{"value":"/ first have to pin the stream. This can be done by boxing the stream using [`Box::pin`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332315,"byte_end":332405,"line_start":971,"line_end":971,"column_start":5,"column_end":95}},{"value":"/ or pinning it to the stack using the `pin_mut!` macro from the `pin_utils` crate.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332410,"byte_end":332495,"line_start":972,"line_end":972,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332500,"byte_end":332503,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332508,"byte_end":332572,"line_start":974,"line_end":974,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332577,"byte_end":332634,"line_start":975,"line_end":975,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332639,"byte_end":332642,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332647,"byte_end":332661,"line_start":977,"line_end":977,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332666,"byte_end":332669,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332674,"byte_end":332681,"line_start":979,"line_end":979,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332686,"byte_end":332727,"line_start":980,"line_end":980,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332732,"byte_end":332778,"line_start":981,"line_end":981,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332783,"byte_end":332817,"line_start":982,"line_end":982,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332822,"byte_end":332825,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(vec![1, 2, 3, 4, 5])]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332830,"byte_end":332891,"line_start":984,"line_end":984,"column_start":5,"column_end":66}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332896,"byte_end":332942,"line_start":985,"line_end":985,"column_start":5,"column_end":51}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332947,"byte_end":332976,"line_start":986,"line_end":986,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332981,"byte_end":332984,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ assert!(reader.read_to_end(&mut buf).await.is_ok());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":332989,"byte_end":333045,"line_start":988,"line_end":988,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, &[1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":333050,"byte_end":333088,"line_start":989,"line_end":989,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":333093,"byte_end":333101,"line_start":990,"line_end":990,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":333106,"byte_end":333113,"line_start":991,"line_end":991,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":333118,"byte_end":333140,"line_start":992,"line_end":992,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":333195,"byte_end":333218,"line_start":994,"line_end":994,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":12502},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375106,"byte_end":375110,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":12504}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":374984,"byte_end":375021,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375046,"byte_end":375094,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4598},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375628,"byte_end":375632,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375162,"byte_end":375226,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375227,"byte_end":375255,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375256,"byte_end":375259,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375260,"byte_end":375333,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375334,"byte_end":375389,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375390,"byte_end":375393,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375394,"byte_end":375401,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375402,"byte_end":375443,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375444,"byte_end":375487,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375488,"byte_end":375491,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375492,"byte_end":375536,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375537,"byte_end":375602,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375603,"byte_end":375612,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375613,"byte_end":375620,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12511},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376336,"byte_end":376342,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":12513}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376212,"byte_end":376251,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376276,"byte_end":376324,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4633},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376866,"byte_end":376872,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376364,"byte_end":376424,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376425,"byte_end":376428,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376429,"byte_end":376496,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376497,"byte_end":376569,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376570,"byte_end":376627,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376628,"byte_end":376631,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376632,"byte_end":376639,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376640,"byte_end":376681,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376682,"byte_end":376725,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376726,"byte_end":376729,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376730,"byte_end":376765,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376766,"byte_end":376840,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376841,"byte_end":376850,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376851,"byte_end":376858,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12520},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":377861,"byte_end":377871,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":12522}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":377559,"byte_end":377619,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":377620,"byte_end":377672,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":377673,"byte_end":377676,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":377677,"byte_end":377740,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":377741,"byte_end":377776,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":377801,"byte_end":377849,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4686},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":380159,"byte_end":380170,"line_start":92,"line_end":92,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378387,"byte_end":378458,"line_start":38,"line_end":38,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378459,"byte_end":378526,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378527,"byte_end":378530,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378531,"byte_end":378603,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378604,"byte_end":378607,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378608,"byte_end":378682,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378683,"byte_end":378735,"line_start":44,"line_end":44,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378736,"byte_end":378739,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378740,"byte_end":378812,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378813,"byte_end":378886,"line_start":47,"line_end":47,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378887,"byte_end":378924,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378925,"byte_end":378928,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378929,"byte_end":378943,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378944,"byte_end":378947,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378948,"byte_end":378964,"line_start":52,"line_end":52,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378965,"byte_end":378968,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378969,"byte_end":378976,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378977,"byte_end":379018,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379019,"byte_end":379062,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379063,"byte_end":379066,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379067,"byte_end":379135,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379136,"byte_end":379214,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379215,"byte_end":379246,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379247,"byte_end":379268,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379269,"byte_end":379272,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379273,"byte_end":379307,"line_start":63,"line_end":63,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379308,"byte_end":379363,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379364,"byte_end":379367,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379368,"byte_end":379421,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379422,"byte_end":379475,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379476,"byte_end":379529,"line_start":68,"line_end":68,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379530,"byte_end":379539,"line_start":69,"line_end":69,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379540,"byte_end":379547,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379548,"byte_end":379551,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379552,"byte_end":379588,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379589,"byte_end":379592,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379593,"byte_end":379604,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379605,"byte_end":379646,"line_start":75,"line_end":75,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379647,"byte_end":379690,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379691,"byte_end":379694,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379695,"byte_end":379744,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379745,"byte_end":379766,"line_start":79,"line_end":79,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379767,"byte_end":379844,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379845,"byte_end":379878,"line_start":81,"line_end":81,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379879,"byte_end":379882,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379883,"byte_end":379926,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379927,"byte_end":379970,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":379971,"byte_end":380014,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":380015,"byte_end":380058,"line_start":86,"line_end":86,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":380059,"byte_end":380062,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":380063,"byte_end":380092,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":380093,"byte_end":380133,"line_start":89,"line_end":89,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":380134,"byte_end":380143,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":380144,"byte_end":380151,"line_start":91,"line_end":91,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12529},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\empty.rs","byte_start":380561,"byte_end":380566,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":12531}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\empty.rs","byte_start":380445,"byte_end":380483,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\empty.rs","byte_start":380501,"byte_end":380549,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4720},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\empty.rs","byte_start":380734,"byte_end":380739,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\empty.rs","byte_start":380604,"byte_end":380652,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\empty.rs","byte_start":380653,"byte_end":380656,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\empty.rs","byte_start":380657,"byte_end":380726,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":4772},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":381836,"byte_end":381840,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":381529,"byte_end":381570,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":381571,"byte_end":381574,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":381575,"byte_end":381582,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":381583,"byte_end":381624,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":381625,"byte_end":381668,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":381669,"byte_end":381672,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":381673,"byte_end":381717,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":381718,"byte_end":381773,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":381774,"byte_end":381810,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":381811,"byte_end":381820,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":381821,"byte_end":381828,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12540},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":382102,"byte_end":382106,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":12542}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12571},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\pending.rs","byte_start":383282,"byte_end":383289,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":12573}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\pending.rs","byte_start":383162,"byte_end":383204,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\pending.rs","byte_start":383222,"byte_end":383270,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4816},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\pending.rs","byte_start":383465,"byte_end":383472,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\pending.rs","byte_start":383333,"byte_end":383387,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\pending.rs","byte_start":383388,"byte_end":383391,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\pending.rs","byte_start":383392,"byte_end":383457,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4858},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384315,"byte_end":384321,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":4860}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384214,"byte_end":384254,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384255,"byte_end":384303,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4866},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":385009,"byte_end":385016,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384521,"byte_end":384594,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384595,"byte_end":384598,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384599,"byte_end":384658,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384659,"byte_end":384662,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384663,"byte_end":384677,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384678,"byte_end":384681,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384682,"byte_end":384689,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384690,"byte_end":384723,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384724,"byte_end":384752,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384753,"byte_end":384756,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384757,"byte_end":384786,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384787,"byte_end":384790,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384791,"byte_end":384855,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384856,"byte_end":384909,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384910,"byte_end":384931,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384932,"byte_end":384985,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384986,"byte_end":384993,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384994,"byte_end":385001,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12584},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":385736,"byte_end":385742,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":12587},{"krate":0,"index":12588},{"krate":0,"index":12589}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4912},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386346,"byte_end":386352,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":385870,"byte_end":385938,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":385939,"byte_end":386015,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386016,"byte_end":386064,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386065,"byte_end":386068,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386069,"byte_end":386143,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386144,"byte_end":386213,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386214,"byte_end":386241,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386242,"byte_end":386245,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386246,"byte_end":386317,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386318,"byte_end":386338,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4918},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386762,"byte_end":386769,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386654,"byte_end":386728,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386733,"byte_end":386750,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4919},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":387125,"byte_end":387132,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386863,"byte_end":386931,"line_start":49,"line_end":49,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386936,"byte_end":386967,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386972,"byte_end":386975,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386980,"byte_end":387053,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":387058,"byte_end":387113,"line_start":53,"line_end":53,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4920},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":387507,"byte_end":387518,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":387238,"byte_end":387313,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":387318,"byte_end":387349,"line_start":59,"line_end":59,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":387354,"byte_end":387357,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":387362,"byte_end":387435,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":387440,"byte_end":387495,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4921},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":387924,"byte_end":387934,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":387688,"byte_end":387751,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":387756,"byte_end":387759,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":387764,"byte_end":387836,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":387841,"byte_end":387912,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":4977},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":391201,"byte_end":391207,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":389759,"byte_end":389829,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":389830,"byte_end":389833,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":389834,"byte_end":389903,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":389904,"byte_end":389985,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":389986,"byte_end":390017,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390018,"byte_end":390021,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390022,"byte_end":390101,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390102,"byte_end":390181,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390182,"byte_end":390236,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390237,"byte_end":390240,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390241,"byte_end":390321,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390322,"byte_end":390392,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390393,"byte_end":390415,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390416,"byte_end":390419,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390420,"byte_end":390497,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390498,"byte_end":390570,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390571,"byte_end":390648,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390649,"byte_end":390709,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390710,"byte_end":390713,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390714,"byte_end":390727,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390728,"byte_end":390731,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390732,"byte_end":390739,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390740,"byte_end":390781,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390782,"byte_end":390825,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390826,"byte_end":390829,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390830,"byte_end":390885,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390886,"byte_end":390909,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390910,"byte_end":390949,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390950,"byte_end":390987,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":390988,"byte_end":391027,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":391028,"byte_end":391044,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":391045,"byte_end":391061,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":391062,"byte_end":391071,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":391072,"byte_end":391079,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":391080,"byte_end":391083,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":391084,"byte_end":391136,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":391137,"byte_end":391175,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":391176,"byte_end":391185,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":391186,"byte_end":391193,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12630},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":391575,"byte_end":391581,"line_start":64,"line_end":64,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":12634},{"krate":0,"index":12635}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12753},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733518,"byte_end":12733532,"line_start":98,"line_end":98,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":12755},{"krate":0,"index":12756},{"krate":0,"index":12757},{"krate":0,"index":12758}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12731452,"byte_end":12731486,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12731487,"byte_end":12731490,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12731491,"byte_end":12731570,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12731571,"byte_end":12731642,"line_start":65,"line_end":65,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12731643,"byte_end":12731719,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12731720,"byte_end":12731768,"line_start":67,"line_end":67,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12731769,"byte_end":12731772,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12731773,"byte_end":12731852,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12731853,"byte_end":12731928,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12731929,"byte_end":12732007,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12732008,"byte_end":12732088,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12732089,"byte_end":12732118,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12732119,"byte_end":12732122,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12732123,"byte_end":12732201,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12732202,"byte_end":12732276,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12732277,"byte_end":12732352,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12732353,"byte_end":12732428,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12732429,"byte_end":12732504,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12732505,"byte_end":12732563,"line_start":80,"line_end":80,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12732564,"byte_end":12732567,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12732568,"byte_end":12732641,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12732642,"byte_end":12732720,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12732721,"byte_end":12732779,"line_start":84,"line_end":84,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12732780,"byte_end":12732853,"line_start":85,"line_end":85,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12732854,"byte_end":12732922,"line_start":86,"line_end":86,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12732923,"byte_end":12732999,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733000,"byte_end":12733068,"line_start":88,"line_end":88,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733069,"byte_end":12733122,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733123,"byte_end":12733126,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733127,"byte_end":12733193,"line_start":91,"line_end":91,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733194,"byte_end":12733273,"line_start":92,"line_end":92,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733274,"byte_end":12733321,"line_start":93,"line_end":93,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733322,"byte_end":12733325,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733326,"byte_end":12733399,"line_start":95,"line_end":95,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733400,"byte_end":12733457,"line_start":96,"line_end":96,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733458,"byte_end":12733506,"line_start":97,"line_end":97,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":12763},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12734040,"byte_end":12734043,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733820,"byte_end":12733864,"line_start":108,"line_end":108,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733869,"byte_end":12733872,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733877,"byte_end":12733952,"line_start":110,"line_end":110,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733957,"byte_end":12734028,"line_start":111,"line_end":111,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":12764},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12734540,"byte_end":12734543,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12734267,"byte_end":12734324,"line_start":121,"line_end":121,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12734329,"byte_end":12734332,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12734337,"byte_end":12734400,"line_start":123,"line_end":123,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12734405,"byte_end":12734469,"line_start":124,"line_end":124,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12734474,"byte_end":12734528,"line_start":125,"line_end":125,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":12765},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12734701,"byte_end":12734709,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12734638,"byte_end":12734689,"line_start":130,"line_end":130,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":12766},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12735133,"byte_end":12735137,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12734814,"byte_end":12734847,"line_start":135,"line_end":135,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12734852,"byte_end":12734855,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12734860,"byte_end":12734936,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12734941,"byte_end":12735015,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12735020,"byte_end":12735093,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12735098,"byte_end":12735121,"line_start":140,"line_end":140,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":12793},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","parent":null,"children":[{"krate":0,"index":12794},{"krate":0,"index":12797},{"krate":0,"index":12798},{"krate":0,"index":12801},{"krate":0,"index":12804},{"krate":0,"index":12805},{"krate":0,"index":12808},{"krate":0,"index":12811},{"krate":0,"index":12812},{"krate":0,"index":12815},{"krate":0,"index":12818},{"krate":0,"index":12821},{"krate":0,"index":12824},{"krate":0,"index":12827},{"krate":0,"index":12830},{"krate":0,"index":12833},{"krate":0,"index":12834},{"krate":0,"index":12837},{"krate":0,"index":12838},{"krate":0,"index":12840},{"krate":0,"index":12843},{"krate":0,"index":12844},{"krate":0,"index":12846},{"krate":0,"index":12849},{"krate":0,"index":12852},{"krate":0,"index":12855},{"krate":0,"index":12856},{"krate":0,"index":12857},{"krate":0,"index":12859},{"krate":0,"index":12860},{"krate":0,"index":12862},{"krate":0,"index":12863},{"krate":0,"index":12865},{"krate":0,"index":12866},{"krate":0,"index":12868},{"krate":0,"index":12869},{"krate":0,"index":12871},{"krate":0,"index":12872},{"krate":0,"index":12875},{"krate":0,"index":12878},{"krate":0,"index":12879},{"krate":0,"index":12882},{"krate":0,"index":12885},{"krate":0,"index":12891},{"krate":0,"index":12939},{"krate":0,"index":12940},{"krate":0,"index":12941},{"krate":0,"index":12943},{"krate":0,"index":12944},{"krate":0,"index":12946},{"krate":0,"index":12949},{"krate":0,"index":12952},{"krate":0,"index":13016},{"krate":0,"index":13019},{"krate":0,"index":13077},{"krate":0,"index":13078},{"krate":0,"index":13081},{"krate":0,"index":13084},{"krate":0,"index":13089},{"krate":0,"index":13091},{"krate":0,"index":13093},{"krate":0,"index":13095},{"krate":0,"index":13097},{"krate":0,"index":13099},{"krate":0,"index":13102},{"krate":0,"index":13117},{"krate":0,"index":13130},{"krate":0,"index":13133},{"krate":0,"index":13136},{"krate":0,"index":13141},{"krate":0,"index":13144}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":167332,"byte_end":167357,"line_start":100,"line_end":100,"column_start":5,"column_end":30}},{"value":"/ An unbounded set of futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12737535,"byte_end":12737567,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12737568,"byte_end":12737571,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12737572,"byte_end":12737647,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12737648,"byte_end":12737705,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":13234},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12763884,"byte_end":12763894,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":13237},{"krate":0,"index":13238},{"krate":0,"index":13239}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12763813,"byte_end":12763872,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":13244},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12764130,"byte_end":12764137,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12764059,"byte_end":12764118,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":13253},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12764279,"byte_end":12764289,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":13256},{"krate":0,"index":13257},{"krate":0,"index":13258},{"krate":0,"index":13259}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12764206,"byte_end":12764267,"line_start":20,"line_end":20,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":13264},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12764576,"byte_end":12764580,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12764499,"byte_end":12764564,"line_start":29,"line_end":29,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":13084},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739563,"byte_end":12739579,"line_start":55,"line_end":55,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":13086},{"krate":0,"index":13087},{"krate":0,"index":13088}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12738468,"byte_end":12738521,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12738522,"byte_end":12738525,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12738526,"byte_end":12738594,"line_start":36,"line_end":36,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12738595,"byte_end":12738668,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12738669,"byte_end":12738745,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12738746,"byte_end":12738790,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12738791,"byte_end":12738794,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12738795,"byte_end":12738873,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12738874,"byte_end":12738932,"line_start":42,"line_end":42,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12738933,"byte_end":12738997,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12738998,"byte_end":12739051,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739052,"byte_end":12739131,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739132,"byte_end":12739161,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739162,"byte_end":12739165,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739166,"byte_end":12739236,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739237,"byte_end":12739314,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739315,"byte_end":12739366,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739367,"byte_end":12739370,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739371,"byte_end":12739444,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739445,"byte_end":12739502,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739503,"byte_end":12739551,"line_start":54,"line_end":54,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":13104},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12742220,"byte_end":12742223,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12741949,"byte_end":12741998,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12742003,"byte_end":12742006,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12742011,"byte_end":12742078,"line_start":117,"line_end":117,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12742083,"byte_end":12742157,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12742162,"byte_end":12742208,"line_start":119,"line_end":119,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":13105},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12743218,"byte_end":12743221,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12743080,"byte_end":12743135,"line_start":145,"line_end":145,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12743140,"byte_end":12743143,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12743148,"byte_end":12743206,"line_start":147,"line_end":147,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":13106},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12743385,"byte_end":12743393,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12743323,"byte_end":12743373,"line_start":153,"line_end":153,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":13107},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12743976,"byte_end":12743980,"line_start":166,"line_end":166,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12743606,"byte_end":12743637,"line_start":160,"line_end":160,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12743642,"byte_end":12743645,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12743650,"byte_end":12743720,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12743725,"byte_end":12743811,"line_start":163,"line_end":163,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12743816,"byte_end":12743892,"line_start":164,"line_end":164,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12743897,"byte_end":12743964,"line_start":165,"line_end":165,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":13108},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12745255,"byte_end":12745259,"line_start":194,"line_end":194,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12745173,"byte_end":12745243,"line_start":193,"line_end":193,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":13110},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12745803,"byte_end":12745811,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12745722,"byte_end":12745791,"line_start":210,"line_end":210,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":13111},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12746001,"byte_end":12746013,"line_start":216,"line_end":216,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12745920,"byte_end":12745989,"line_start":215,"line_end":215,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":13195},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12775911,"byte_end":12775920,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":13197}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"/ An unbounded set of streams","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12775287,"byte_end":12775318,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12775319,"byte_end":12775322,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" provides the ability to maintain a set of streams","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12775323,"byte_end":12775394,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ and drive them all to completion.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12775395,"byte_end":12775432,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12775433,"byte_end":12775436,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Streams are pushed into this set and their realized values are","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12775437,"byte_end":12775503,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/ yielded as they become ready. Streams will only be polled when they","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12775504,"byte_end":12775575,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ generate notifications. This allows to coordinate a large number of streams.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12775576,"byte_end":12775656,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12775657,"byte_end":12775660,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `SelectAll` via the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12775661,"byte_end":12775722,"line_start":23,"line_end":23,"column_start":1,"column_end":62}},{"value":"/ `select_all` function in the `stream` module, or you can start with an","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12775723,"byte_end":12775797,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ empty set with the `SelectAll::new` constructor.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12775798,"byte_end":12775850,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12775851,"byte_end":12775899,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":13203},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776377,"byte_end":12776380,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776177,"byte_end":12776216,"line_start":38,"line_end":38,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776221,"byte_end":12776224,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776229,"byte_end":12776299,"line_start":40,"line_end":40,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776304,"byte_end":12776365,"line_start":41,"line_end":41,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":13204},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776590,"byte_end":12776593,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776452,"byte_end":12776507,"line_start":46,"line_end":46,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776512,"byte_end":12776515,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776520,"byte_end":12776578,"line_start":48,"line_end":48,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":13205},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776709,"byte_end":12776717,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776648,"byte_end":12776697,"line_start":53,"line_end":53,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":13206},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12777079,"byte_end":12777083,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776776,"byte_end":12776807,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776812,"byte_end":12776815,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776820,"byte_end":12776892,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776897,"byte_end":12776971,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776976,"byte_end":12777044,"line_start":62,"line_end":62,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12777049,"byte_end":12777067,"line_start":63,"line_end":63,"column_start":5,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":13217},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12778845,"byte_end":12778855,"line_start":118,"line_end":118,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12778224,"byte_end":12778298,"line_start":106,"line_end":106,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12778299,"byte_end":12778302,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12778303,"byte_end":12778382,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12778383,"byte_end":12778434,"line_start":109,"line_end":109,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12778435,"byte_end":12778509,"line_start":110,"line_end":110,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12778510,"byte_end":12778569,"line_start":111,"line_end":111,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12778570,"byte_end":12778573,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12778574,"byte_end":12778646,"line_start":113,"line_end":113,"column_start":1,"column_end":73}},{"value":"/ futures into the set as they become available.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12778647,"byte_end":12778697,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12778698,"byte_end":12778701,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12778702,"byte_end":12778779,"line_start":116,"line_end":116,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12778780,"byte_end":12778837,"line_start":117,"line_end":117,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":5023},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":5024},{"krate":0,"index":5025},{"krate":0,"index":5028},{"krate":0,"index":5031},{"krate":0,"index":5034},{"krate":0,"index":5037},{"krate":0,"index":5040},{"krate":0,"index":5041},{"krate":0,"index":5044},{"krate":0,"index":5047},{"krate":0,"index":5050},{"krate":0,"index":5053},{"krate":0,"index":5056},{"krate":0,"index":5059},{"krate":0,"index":5062},{"krate":0,"index":13273},{"krate":0,"index":13276},{"krate":0,"index":13279},{"krate":0,"index":13280},{"krate":0,"index":13283},{"krate":0,"index":13286},{"krate":0,"index":5065},{"krate":0,"index":5099},{"krate":0,"index":5100},{"krate":0,"index":5103}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393175,"byte_end":393208,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393209,"byte_end":393212,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393213,"byte_end":393238,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393239,"byte_end":393242,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393243,"byte_end":393291,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393292,"byte_end":393345,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393346,"byte_end":393394,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393395,"byte_end":393442,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393443,"byte_end":393446,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393447,"byte_end":393521,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\mod.rs","byte_start":393522,"byte_end":393594,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":5093},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":394794,"byte_end":394802,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":5094}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":394751,"byte_end":394783,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":5094},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395799,"byte_end":395804,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":5093},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":394816,"byte_end":394881,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":394886,"byte_end":394901,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":394906,"byte_end":394909,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":394914,"byte_end":394984,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":394989,"byte_end":395008,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395013,"byte_end":395016,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395021,"byte_end":395090,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395095,"byte_end":395168,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395173,"byte_end":395212,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395217,"byte_end":395220,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395225,"byte_end":395291,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395296,"byte_end":395362,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395367,"byte_end":395438,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395443,"byte_end":395499,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395504,"byte_end":395507,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395512,"byte_end":395519,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395524,"byte_end":395562,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395567,"byte_end":395599,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395604,"byte_end":395607,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395612,"byte_end":395658,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395663,"byte_end":395666,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395671,"byte_end":395708,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395713,"byte_end":395749,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395754,"byte_end":395761,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":395766,"byte_end":395791,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":5096},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":397558,"byte_end":397571,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":5097}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":397510,"byte_end":397547,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5097},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":398614,"byte_end":398625,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":5096},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":397590,"byte_end":397655,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":397660,"byte_end":397675,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":397680,"byte_end":397683,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":397688,"byte_end":397758,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":397763,"byte_end":397782,"line_start":102,"line_end":102,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":397787,"byte_end":397790,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":397795,"byte_end":397864,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":397869,"byte_end":397942,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":397947,"byte_end":397986,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":397991,"byte_end":397994,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":397999,"byte_end":398065,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":398070,"byte_end":398136,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":398141,"byte_end":398212,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":398217,"byte_end":398273,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":398278,"byte_end":398281,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":398286,"byte_end":398293,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":398298,"byte_end":398335,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":398340,"byte_end":398377,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":398382,"byte_end":398385,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":398390,"byte_end":398426,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":398431,"byte_end":398468,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":398473,"byte_end":398476,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":398481,"byte_end":398518,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":398523,"byte_end":398564,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":398569,"byte_end":398576,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":398581,"byte_end":398606,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":5106},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","parent":null,"children":[{"krate":0,"index":5107}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":400030,"byte_end":400072,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":400073,"byte_end":400076,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":400077,"byte_end":400143,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":5107},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":400780,"byte_end":400785,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":400145,"byte_end":400180,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":400181,"byte_end":400184,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":400185,"byte_end":400260,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":400261,"byte_end":400298,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":400299,"byte_end":400302,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":400303,"byte_end":400367,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":400368,"byte_end":400371,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":400372,"byte_end":400443,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":400444,"byte_end":400495,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":400496,"byte_end":400588,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":400589,"byte_end":400592,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":400593,"byte_end":400664,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\never.rs","byte_start":400665,"byte_end":400770,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":5108},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":5109},{"krate":0,"index":5112},{"krate":0,"index":5115},{"krate":0,"index":5116},{"krate":0,"index":5119},{"krate":0,"index":5122},{"krate":0,"index":5123},{"krate":0,"index":5126},{"krate":0,"index":5129},{"krate":0,"index":5132},{"krate":0,"index":5135},{"krate":0,"index":5138},{"krate":0,"index":5141},{"krate":0,"index":5142},{"krate":0,"index":5145},{"krate":0,"index":5148},{"krate":0,"index":5151},{"krate":0,"index":5154},{"krate":0,"index":5155},{"krate":0,"index":5157},{"krate":0,"index":5244},{"krate":0,"index":5247},{"krate":0,"index":5323},{"krate":0,"index":5326},{"krate":0,"index":5398},{"krate":0,"index":5401},{"krate":0,"index":5457},{"krate":0,"index":5460},{"krate":0,"index":5490},{"krate":0,"index":5493},{"krate":0,"index":5538},{"krate":0,"index":5539},{"krate":0,"index":5542},{"krate":0,"index":5545},{"krate":0,"index":5583},{"krate":0,"index":5584},{"krate":0,"index":5587},{"krate":0,"index":5590},{"krate":0,"index":5650},{"krate":0,"index":5653},{"krate":0,"index":5687},{"krate":0,"index":5688},{"krate":0,"index":5691},{"krate":0,"index":5694},{"krate":0,"index":5725},{"krate":0,"index":5728},{"krate":0,"index":5758},{"krate":0,"index":5761},{"krate":0,"index":5800},{"krate":0,"index":5803},{"krate":0,"index":5833},{"krate":0,"index":5836},{"krate":0,"index":5870},{"krate":0,"index":5873},{"krate":0,"index":5909},{"krate":0,"index":5912},{"krate":0,"index":5957},{"krate":0,"index":5960},{"krate":0,"index":6004},{"krate":0,"index":6007},{"krate":0,"index":6056},{"krate":0,"index":6059},{"krate":0,"index":6097},{"krate":0,"index":6100},{"krate":0,"index":6135},{"krate":0,"index":6136},{"krate":0,"index":6139},{"krate":0,"index":6142},{"krate":0,"index":6176},{"krate":0,"index":6179},{"krate":0,"index":6214},{"krate":0,"index":6215},{"krate":0,"index":6218},{"krate":0,"index":6221},{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6304},{"krate":0,"index":6307},{"krate":0,"index":6308},{"krate":0,"index":6310},{"krate":0,"index":6353},{"krate":0,"index":6356},{"krate":0,"index":6383},{"krate":0,"index":6386},{"krate":0,"index":6416},{"krate":0,"index":6419},{"krate":0,"index":6453},{"krate":0,"index":6456},{"krate":0,"index":6492},{"krate":0,"index":6495},{"krate":0,"index":6510},{"krate":0,"index":6512},{"krate":0,"index":6521},{"krate":0,"index":6523},{"krate":0,"index":6526},{"krate":0,"index":6528},{"krate":0,"index":6536},{"krate":0,"index":6538},{"krate":0,"index":6540}],"decl_id":null,"docs":" Asynchronous I/O.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":12070,"byte_end":12092,"line_start":333,"line_end":333,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":12139,"byte_end":12162,"line_start":335,"line_end":335,"column_start":1,"column_end":24}},{"value":"/ Asynchronous I/O.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":400816,"byte_end":400837,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":400838,"byte_end":400841,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. It defines four","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":400842,"byte_end":400915,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ traits, [`AsyncRead`], [`AsyncWrite`], [`AsyncSeek`], and [`AsyncBufRead`],","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":400916,"byte_end":400995,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ which mirror the `Read`, `Write`, `Seek`, and `BufRead` traits of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":400996,"byte_end":401069,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ standard library. However, these traits integrate with the asynchronous","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":401070,"byte_end":401145,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ task system, so that if an I/O object isn't ready for reading (or writing),","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":401146,"byte_end":401225,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ the thread is not blocked, and instead the current task is queued to be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":401226,"byte_end":401301,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ woken when I/O is ready.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":401302,"byte_end":401330,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":401331,"byte_end":401334,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In addition, the [`AsyncReadExt`], [`AsyncWriteExt`], [`AsyncSeekExt`], and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":401335,"byte_end":401414,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`AsyncBufReadExt`] extension traits offer a variety of useful combinators","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":401415,"byte_end":401493,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ for operating with asynchronous I/O objects, including ways to work with","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":401494,"byte_end":401570,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ them using futures, streams and sinks.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":401571,"byte_end":401613,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":401614,"byte_end":401617,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":401618,"byte_end":401682,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":401683,"byte_end":401740,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":13289},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":429151,"byte_end":429161,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":428502,"byte_end":428567,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":428568,"byte_end":428617,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":428618,"byte_end":428689,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":428690,"byte_end":428693,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":428694,"byte_end":428770,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":428771,"byte_end":428842,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":428843,"byte_end":428911,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":428912,"byte_end":428980,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":428981,"byte_end":429056,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":429057,"byte_end":429071,"line_start":17,"line_end":17,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":5202},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":429725,"byte_end":429728,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":429655,"byte_end":429713,"line_start":42,"line_end":42,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5203},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":429837,"byte_end":429844,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":429774,"byte_end":429825,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5204},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":429958,"byte_end":429965,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":429887,"byte_end":429946,"line_start":52,"line_end":52,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5205},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":430086,"byte_end":430096,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":430020,"byte_end":430074,"line_start":57,"line_end":57,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":13322},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":435124,"byte_end":435133,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":13324},{"krate":0,"index":13325},{"krate":0,"index":13326},{"krate":0,"index":13327}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5302},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":435428,"byte_end":435431,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":435286,"byte_end":435378,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":435383,"byte_end":435416,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5303},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":435593,"byte_end":435606,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":435516,"byte_end":435581,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5304},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":436189,"byte_end":436195,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":436029,"byte_end":436085,"line_start":65,"line_end":65,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":436090,"byte_end":436093,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":436098,"byte_end":436177,"line_start":67,"line_end":67,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":13375},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":443227,"byte_end":443236,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":13377},{"krate":0,"index":13378},{"krate":0,"index":13379}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5377},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":443511,"byte_end":443514,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":443369,"byte_end":443461,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":443466,"byte_end":443499,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5378},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":443676,"byte_end":443689,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":443599,"byte_end":443664,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5380},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":444846,"byte_end":444852,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":444778,"byte_end":444834,"line_start":86,"line_end":86,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":13424},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":447732,"byte_end":447737,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":13427},{"krate":0,"index":13428},{"krate":0,"index":13429}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5438},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":448148,"byte_end":448155,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":448074,"byte_end":448136,"line_start":36,"line_end":36,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5439},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":448487,"byte_end":448494,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":448224,"byte_end":448294,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":448299,"byte_end":448302,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":448307,"byte_end":448380,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":448385,"byte_end":448458,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":448463,"byte_end":448475,"line_start":45,"line_end":45,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":5440},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":448853,"byte_end":448864,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":448583,"byte_end":448660,"line_start":50,"line_end":50,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":448665,"byte_end":448668,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":448673,"byte_end":448746,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":448751,"byte_end":448824,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":448829,"byte_end":448841,"line_start":54,"line_end":54,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":5441},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":449067,"byte_end":449077,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":448999,"byte_end":449055,"line_start":60,"line_end":60,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":13473},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\close.rs","byte_start":451891,"byte_end":451896,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":13476}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\close.rs","byte_start":451729,"byte_end":451794,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\close.rs","byte_start":451812,"byte_end":451879,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":5530},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453449,"byte_end":453453,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"pub fn copy<R, W: ?Sized>(R, &mut W) -> Copy<, R, W> where R: AsyncRead,\nW: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":452600,"byte_end":452675,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":452676,"byte_end":452679,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":452680,"byte_end":452763,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":452764,"byte_end":452844,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":452845,"byte_end":452917,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":452918,"byte_end":452931,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":452932,"byte_end":452935,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":452936,"byte_end":452983,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":452984,"byte_end":452987,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":452988,"byte_end":453002,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453003,"byte_end":453006,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453007,"byte_end":453014,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453015,"byte_end":453056,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453057,"byte_end":453108,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453109,"byte_end":453112,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453113,"byte_end":453156,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453157,"byte_end":453204,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453205,"byte_end":453208,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453209,"byte_end":453262,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453263,"byte_end":453289,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453290,"byte_end":453293,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453294,"byte_end":453319,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453320,"byte_end":453373,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453374,"byte_end":453433,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453434,"byte_end":453441,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":13490},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453811,"byte_end":453815,"line_start":48,"line_end":48,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":13494}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5575},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":455215,"byte_end":455223,"line_start":34,"line_end":34,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"pub fn copy_buf<R, W: ?Sized>(R, &mut W) -> CopyBuf<, R, W> where\nR: AsyncBufRead, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454359,"byte_end":454434,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454435,"byte_end":454438,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454439,"byte_end":454525,"line_start":11,"line_end":11,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454526,"byte_end":454606,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454607,"byte_end":454679,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454680,"byte_end":454693,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454694,"byte_end":454697,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454698,"byte_end":454745,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454746,"byte_end":454749,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454750,"byte_end":454764,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454765,"byte_end":454768,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454769,"byte_end":454776,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454777,"byte_end":454818,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454819,"byte_end":454870,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454871,"byte_end":454874,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454875,"byte_end":454918,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454919,"byte_end":454966,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454967,"byte_end":454970,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":454971,"byte_end":455028,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":455029,"byte_end":455055,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":455056,"byte_end":455059,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":455060,"byte_end":455085,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":455086,"byte_end":455139,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":455140,"byte_end":455199,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":455200,"byte_end":455207,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":13544},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":455585,"byte_end":455592,"line_start":50,"line_end":50,"column_start":16,"column_end":23},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":13548},{"krate":0,"index":13549},{"krate":0,"index":13550}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13597},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457519,"byte_end":457525,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":13599}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":456752,"byte_end":456815,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":456816,"byte_end":456849,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":456850,"byte_end":456853,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":456854,"byte_end":456922,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":456923,"byte_end":457005,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457006,"byte_end":457085,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457086,"byte_end":457111,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457112,"byte_end":457115,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This library implements some I/O traits on various types which","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457116,"byte_end":457182,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457183,"byte_end":457250,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457251,"byte_end":457284,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457285,"byte_end":457288,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457289,"byte_end":457328,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457329,"byte_end":457368,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457369,"byte_end":457410,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457411,"byte_end":457474,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5628},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458105,"byte_end":458108,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457584,"byte_end":457659,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457664,"byte_end":457667,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457672,"byte_end":457746,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457751,"byte_end":457819,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457824,"byte_end":457862,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457867,"byte_end":457870,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457875,"byte_end":457889,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457894,"byte_end":457897,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457902,"byte_end":457909,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457914,"byte_end":457942,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457947,"byte_end":457950,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457955,"byte_end":457994,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457999,"byte_end":458047,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458052,"byte_end":458081,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458086,"byte_end":458093,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5629},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458553,"byte_end":458563,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458208,"byte_end":458265,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458270,"byte_end":458273,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458278,"byte_end":458292,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458297,"byte_end":458300,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458305,"byte_end":458312,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458317,"byte_end":458345,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458350,"byte_end":458353,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458358,"byte_end":458397,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458402,"byte_end":458450,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458455,"byte_end":458484,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458489,"byte_end":458492,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458497,"byte_end":458529,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458534,"byte_end":458541,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5630},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458971,"byte_end":458978,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458620,"byte_end":458680,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458685,"byte_end":458688,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458693,"byte_end":458707,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458712,"byte_end":458715,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458720,"byte_end":458727,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458732,"byte_end":458760,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458765,"byte_end":458768,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458773,"byte_end":458812,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458817,"byte_end":458865,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458870,"byte_end":458899,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458904,"byte_end":458907,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458912,"byte_end":458947,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":458952,"byte_end":458959,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5631},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459550,"byte_end":459557,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459034,"byte_end":459102,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459107,"byte_end":459110,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459115,"byte_end":459188,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459193,"byte_end":459255,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459260,"byte_end":459263,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459268,"byte_end":459282,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459287,"byte_end":459290,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459295,"byte_end":459302,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459307,"byte_end":459335,"line_start":93,"line_end":93,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459340,"byte_end":459343,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459348,"byte_end":459391,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459396,"byte_end":459444,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459449,"byte_end":459478,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459483,"byte_end":459486,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459491,"byte_end":459526,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459531,"byte_end":459538,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5632},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460215,"byte_end":460223,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459621,"byte_end":459669,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459674,"byte_end":459677,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459682,"byte_end":459696,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459701,"byte_end":459704,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459709,"byte_end":459716,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459721,"byte_end":459762,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459767,"byte_end":459821,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459826,"byte_end":459829,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459834,"byte_end":459886,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459891,"byte_end":459894,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459899,"byte_end":459934,"line_start":115,"line_end":115,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459939,"byte_end":459942,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459947,"byte_end":459990,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":459995,"byte_end":460030,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460035,"byte_end":460038,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460043,"byte_end":460087,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460092,"byte_end":460127,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460132,"byte_end":460191,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460196,"byte_end":460203,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5633},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460691,"byte_end":460703,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460281,"byte_end":460318,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460323,"byte_end":460326,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460331,"byte_end":460345,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460350,"byte_end":460353,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460358,"byte_end":460365,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460370,"byte_end":460398,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460403,"byte_end":460406,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460411,"byte_end":460463,"line_start":135,"line_end":135,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460468,"byte_end":460471,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460476,"byte_end":460511,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460516,"byte_end":460519,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460524,"byte_end":460549,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460554,"byte_end":460589,"line_start":140,"line_end":140,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460594,"byte_end":460597,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460602,"byte_end":460627,"line_start":142,"line_end":142,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460632,"byte_end":460667,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460672,"byte_end":460679,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5677},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463484,"byte_end":463489,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":5678}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463383,"byte_end":463423,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463424,"byte_end":463472,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5679},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":464049,"byte_end":464054,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463510,"byte_end":463557,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463558,"byte_end":463561,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463562,"byte_end":463634,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463635,"byte_end":463638,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463639,"byte_end":463653,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463654,"byte_end":463657,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463658,"byte_end":463723,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463724,"byte_end":463727,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463728,"byte_end":463735,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463736,"byte_end":463777,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463778,"byte_end":463820,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463821,"byte_end":463824,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463825,"byte_end":463860,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463861,"byte_end":463894,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463895,"byte_end":463941,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463942,"byte_end":463973,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":463974,"byte_end":464033,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":464034,"byte_end":464041,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":13625},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\fill_buf.rs","byte_start":465122,"byte_end":465129,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FillBuf","qualname":"::io::fill_buf::FillBuf","value":"FillBuf {  }","parent":null,"children":[{"krate":0,"index":13628}],"decl_id":null,"docs":" Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\fill_buf.rs","byte_start":464952,"byte_end":465025,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\fill_buf.rs","byte_start":465043,"byte_end":465110,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13633},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\flush.rs","byte_start":466901,"byte_end":466906,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":13636}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\flush.rs","byte_start":466739,"byte_end":466804,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\flush.rs","byte_start":466822,"byte_end":466889,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13646},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\lines.rs","byte_start":467826,"byte_end":467831,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":13648},{"krate":0,"index":13649},{"krate":0,"index":13650},{"krate":0,"index":13651}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13689},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read.rs","byte_start":469087,"byte_end":469091,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":13692},{"krate":0,"index":13693}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read.rs","byte_start":468928,"byte_end":468990,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read.rs","byte_start":469008,"byte_end":469075,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13698},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_vectored.rs","byte_start":469983,"byte_end":469995,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":13701},{"krate":0,"index":13702}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_vectored.rs","byte_start":469806,"byte_end":469886,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_vectored.rs","byte_start":469904,"byte_end":469971,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13707},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_exact.rs","byte_start":470961,"byte_end":470970,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":13710},{"krate":0,"index":13711}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_exact.rs","byte_start":470790,"byte_end":470864,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_exact.rs","byte_start":470882,"byte_end":470949,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13716},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_line.rs","byte_start":472309,"byte_end":472317,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":13719},{"krate":0,"index":13720},{"krate":0,"index":13721},{"krate":0,"index":13722}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_line.rs","byte_start":472137,"byte_end":472212,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_line.rs","byte_start":472230,"byte_end":472297,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13727},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_end.rs","byte_start":474182,"byte_end":474191,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":13730},{"krate":0,"index":13731},{"krate":0,"index":13732}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_end.rs","byte_start":474009,"byte_end":474085,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_end.rs","byte_start":474103,"byte_end":474170,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13737},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_string.rs","byte_start":477263,"byte_end":477275,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":13740},{"krate":0,"index":13741},{"krate":0,"index":13742},{"krate":0,"index":13743}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_string.rs","byte_start":477084,"byte_end":477166,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_string.rs","byte_start":477184,"byte_end":477251,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13748},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_until.rs","byte_start":479217,"byte_end":479226,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":13751},{"krate":0,"index":13752},{"krate":0,"index":13753},{"krate":0,"index":13754}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_until.rs","byte_start":479043,"byte_end":479120,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_until.rs","byte_start":479138,"byte_end":479205,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6127},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481005,"byte_end":481011,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":6128}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":480903,"byte_end":480944,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":480945,"byte_end":480993,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6129},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481568,"byte_end":481574,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481031,"byte_end":481100,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481101,"byte_end":481104,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481105,"byte_end":481185,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481186,"byte_end":481205,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481206,"byte_end":481209,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481210,"byte_end":481224,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481225,"byte_end":481228,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481229,"byte_end":481236,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481237,"byte_end":481278,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481279,"byte_end":481321,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481322,"byte_end":481325,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481326,"byte_end":481354,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481355,"byte_end":481394,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481395,"byte_end":481445,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481446,"byte_end":481492,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481493,"byte_end":481552,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481553,"byte_end":481560,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":13759},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\seek.rs","byte_start":482846,"byte_end":482850,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":13762},{"krate":0,"index":13763}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\seek.rs","byte_start":482683,"byte_end":482749,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\seek.rs","byte_start":482767,"byte_end":482834,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6203},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":483620,"byte_end":483624,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":6204}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":483520,"byte_end":483559,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":483560,"byte_end":483608,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6205},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":484232,"byte_end":484236,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":483645,"byte_end":483722,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":483723,"byte_end":483726,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":483727,"byte_end":483822,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":483823,"byte_end":483880,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":483881,"byte_end":483884,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":483885,"byte_end":483899,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":483900,"byte_end":483903,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":483904,"byte_end":483915,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":483916,"byte_end":483957,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":483958,"byte_end":484001,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":484002,"byte_end":484005,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":484006,"byte_end":484043,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":484044,"byte_end":484076,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":484077,"byte_end":484126,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":484127,"byte_end":484156,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":484157,"byte_end":484216,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":484217,"byte_end":484224,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":13768},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":485423,"byte_end":485431,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":13770}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":485326,"byte_end":485394,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":13774},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":485560,"byte_end":485569,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":13776}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":485463,"byte_end":485531,"line_start":15,"line_end":15,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6266},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":486315,"byte_end":486322,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"pub fn reunite(Self, WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":486069,"byte_end":486146,"line_start":38,"line_end":38,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":486151,"byte_end":486222,"line_start":39,"line_end":39,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":486227,"byte_end":486303,"line_start":40,"line_end":40,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":6270},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":486822,"byte_end":486829,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"pub fn reunite(Self, ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":486576,"byte_end":486653,"line_start":49,"line_end":49,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":486658,"byte_end":486729,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":486734,"byte_end":486810,"line_start":51,"line_end":51,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":6287},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":488341,"byte_end":488353,"line_start":95,"line_end":95,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":488185,"byte_end":488260,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":488261,"byte_end":488329,"line_start":94,"line_end":94,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":6290},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":488357,"byte_end":488372,"line_start":95,"line_end":95,"column_start":28,"column_end":43},"name":"0","qualname":"::io::split::ReuniteError::0","value":"io::split::ReadHalf<T>","parent":{"krate":0,"index":6287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6291},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":488374,"byte_end":488390,"line_start":95,"line_end":95,"column_start":45,"column_end":61},"name":"1","qualname":"::io::split::ReuniteError::1","value":"io::split::WriteHalf<T>","parent":{"krate":0,"index":6287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13785},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":489325,"byte_end":489329,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":13787},{"krate":0,"index":13788}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":12609530,"byte_end":12609539,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6344},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490342,"byte_end":490347,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":489589,"byte_end":489642,"line_start":27,"line_end":27,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":489647,"byte_end":489693,"line_start":28,"line_end":28,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":489698,"byte_end":489701,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":489706,"byte_end":489716,"line_start":30,"line_end":30,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":489721,"byte_end":489724,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":489729,"byte_end":489806,"line_start":32,"line_end":32,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":489811,"byte_end":489880,"line_start":33,"line_end":33,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":489885,"byte_end":489888,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":489893,"byte_end":489907,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":489912,"byte_end":489915,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":489920,"byte_end":489927,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":489932,"byte_end":489973,"line_start":38,"line_end":38,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":489978,"byte_end":490022,"line_start":39,"line_end":39,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490027,"byte_end":490030,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490035,"byte_end":490082,"line_start":41,"line_end":41,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490087,"byte_end":490115,"line_start":42,"line_end":42,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490120,"byte_end":490123,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490128,"byte_end":490162,"line_start":44,"line_end":44,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490167,"byte_end":490209,"line_start":45,"line_end":45,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490214,"byte_end":490217,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490222,"byte_end":490254,"line_start":47,"line_end":47,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490259,"byte_end":490318,"line_start":48,"line_end":48,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490323,"byte_end":490330,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6345},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":491259,"byte_end":491268,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490395,"byte_end":490466,"line_start":54,"line_end":54,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490471,"byte_end":490545,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490550,"byte_end":490625,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490630,"byte_end":490654,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490659,"byte_end":490662,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490667,"byte_end":490681,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490686,"byte_end":490689,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490694,"byte_end":490701,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490706,"byte_end":490747,"line_start":62,"line_end":62,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490752,"byte_end":490796,"line_start":63,"line_end":63,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490801,"byte_end":490804,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490809,"byte_end":490856,"line_start":65,"line_end":65,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490861,"byte_end":490889,"line_start":66,"line_end":66,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490894,"byte_end":490897,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490902,"byte_end":490936,"line_start":68,"line_end":68,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490941,"byte_end":490983,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490988,"byte_end":490991,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":490996,"byte_end":491017,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":491022,"byte_end":491054,"line_start":72,"line_end":72,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":491059,"byte_end":491062,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":491067,"byte_end":491090,"line_start":74,"line_end":74,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":491095,"byte_end":491137,"line_start":75,"line_end":75,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":491142,"byte_end":491163,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":491168,"byte_end":491171,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":491176,"byte_end":491235,"line_start":78,"line_end":78,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":491240,"byte_end":491247,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":13824},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493831,"byte_end":493837,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":13826},{"krate":0,"index":13827}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":492876,"byte_end":492923,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":492924,"byte_end":492927,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":492928,"byte_end":493004,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493005,"byte_end":493083,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493084,"byte_end":493160,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493161,"byte_end":493236,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493237,"byte_end":493310,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493311,"byte_end":493342,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493343,"byte_end":493346,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493347,"byte_end":493418,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493419,"byte_end":493498,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493499,"byte_end":493526,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493527,"byte_end":493530,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493531,"byte_end":493605,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493606,"byte_end":493680,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493681,"byte_end":493760,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493761,"byte_end":493802,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":6369},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494146,"byte_end":494149,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493922,"byte_end":493993,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493998,"byte_end":494008,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494013,"byte_end":494016,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494021,"byte_end":494095,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494100,"byte_end":494134,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":6370},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494361,"byte_end":494368,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494264,"byte_end":494331,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494336,"byte_end":494349,"line_start":40,"line_end":40,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6371},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494513,"byte_end":494520,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494415,"byte_end":494483,"line_start":45,"line_end":45,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494488,"byte_end":494501,"line_start":46,"line_end":46,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6372},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494651,"byte_end":494661,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494579,"byte_end":494639,"line_start":51,"line_end":51,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":6373},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494802,"byte_end":494807,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494705,"byte_end":494777,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494782,"byte_end":494790,"line_start":57,"line_end":57,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":6374},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494954,"byte_end":494957,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494862,"byte_end":494929,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":494934,"byte_end":494942,"line_start":63,"line_end":63,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":6375},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":495403,"byte_end":495406,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"pub fn set<R: RangeBounds<usize>>(&mut Self, R)","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":495010,"byte_end":495070,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":495075,"byte_end":495078,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":495083,"byte_end":495095,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":495100,"byte_end":495103,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":495108,"byte_end":495181,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":495186,"byte_end":495263,"line_start":73,"line_end":73,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":495268,"byte_end":495271,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":495276,"byte_end":495333,"line_start":75,"line_end":75,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":495338,"byte_end":495391,"line_start":76,"line_end":76,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":13831},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write.rs","byte_start":496593,"byte_end":496598,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":13834},{"krate":0,"index":13835}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write.rs","byte_start":496431,"byte_end":496496,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write.rs","byte_start":496514,"byte_end":496581,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13840},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_vectored.rs","byte_start":497489,"byte_end":497502,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":13843},{"krate":0,"index":13844}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_vectored.rs","byte_start":497309,"byte_end":497392,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_vectored.rs","byte_start":497410,"byte_end":497477,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13849},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_all.rs","byte_start":498461,"byte_end":498469,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":13852},{"krate":0,"index":13853}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_all.rs","byte_start":498291,"byte_end":498364,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_all.rs","byte_start":498382,"byte_end":498449,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":6495},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404767,"byte_end":404779,"line_start":152,"line_end":152,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":6496},{"krate":0,"index":6498},{"krate":0,"index":6500},{"krate":0,"index":6502},{"krate":0,"index":6504},{"krate":0,"index":6506},{"krate":0,"index":6508},{"krate":0,"index":6509}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404685,"byte_end":404756,"line_start":151,"line_end":151,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6496},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405632,"byte_end":405637,"line_start":176,"line_end":176,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":6495},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404797,"byte_end":404862,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404867,"byte_end":404870,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404875,"byte_end":404955,"line_start":155,"line_end":155,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404960,"byte_end":405032,"line_start":156,"line_end":156,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405037,"byte_end":405058,"line_start":157,"line_end":157,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405063,"byte_end":405066,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405071,"byte_end":405085,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405090,"byte_end":405093,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405098,"byte_end":405105,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405110,"byte_end":405151,"line_start":162,"line_end":162,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405156,"byte_end":405200,"line_start":163,"line_end":163,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405205,"byte_end":405208,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405213,"byte_end":405257,"line_start":165,"line_end":165,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405262,"byte_end":405306,"line_start":166,"line_end":166,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405311,"byte_end":405314,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405319,"byte_end":405363,"line_start":168,"line_end":168,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405368,"byte_end":405400,"line_start":169,"line_end":169,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405405,"byte_end":405408,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405413,"byte_end":405446,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405451,"byte_end":405494,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405499,"byte_end":405548,"line_start":173,"line_end":173,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405553,"byte_end":405612,"line_start":174,"line_end":174,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405617,"byte_end":405624,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6498},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406690,"byte_end":406694,"line_start":208,"line_end":208,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":6495},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405788,"byte_end":405862,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405867,"byte_end":405903,"line_start":185,"line_end":185,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405908,"byte_end":405911,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405916,"byte_end":405994,"line_start":187,"line_end":187,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":405999,"byte_end":406026,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406031,"byte_end":406034,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406039,"byte_end":406053,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406058,"byte_end":406061,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406066,"byte_end":406073,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406078,"byte_end":406119,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406124,"byte_end":406168,"line_start":194,"line_end":194,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406173,"byte_end":406176,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406181,"byte_end":406228,"line_start":196,"line_end":196,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406233,"byte_end":406263,"line_start":197,"line_end":197,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406268,"byte_end":406271,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406276,"byte_end":406328,"line_start":199,"line_end":199,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406333,"byte_end":406336,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406341,"byte_end":406412,"line_start":201,"line_end":201,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406417,"byte_end":406481,"line_start":202,"line_end":202,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406486,"byte_end":406531,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406536,"byte_end":406561,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406566,"byte_end":406606,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406611,"byte_end":406670,"line_start":206,"line_end":206,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406675,"byte_end":406682,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6500},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407096,"byte_end":407109,"line_start":219,"line_end":219,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectored\nwhere Self: Unpin","parent":{"krate":0,"index":6495},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406858,"byte_end":406942,"line_start":214,"line_end":214,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406947,"byte_end":406965,"line_start":215,"line_end":215,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406970,"byte_end":406973,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":406978,"byte_end":407056,"line_start":217,"line_end":217,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407061,"byte_end":407088,"line_start":218,"line_end":218,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6502},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408516,"byte_end":408526,"line_start":262,"line_end":262,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":6495},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407303,"byte_end":407375,"line_start":225,"line_end":225,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407380,"byte_end":407438,"line_start":226,"line_end":226,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407443,"byte_end":407446,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407451,"byte_end":407525,"line_start":228,"line_end":228,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407530,"byte_end":407533,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407538,"byte_end":407615,"line_start":230,"line_end":230,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407620,"byte_end":407642,"line_start":231,"line_end":231,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407647,"byte_end":407650,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407655,"byte_end":407669,"line_start":233,"line_end":233,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407674,"byte_end":407677,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407682,"byte_end":407689,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407694,"byte_end":407735,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407740,"byte_end":407784,"line_start":237,"line_end":237,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407789,"byte_end":407792,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407797,"byte_end":407844,"line_start":239,"line_end":239,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407849,"byte_end":407879,"line_start":240,"line_end":240,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407884,"byte_end":407887,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407892,"byte_end":407934,"line_start":242,"line_end":242,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407939,"byte_end":407942,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407947,"byte_end":407984,"line_start":244,"line_end":244,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":407989,"byte_end":408048,"line_start":245,"line_end":245,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408053,"byte_end":408060,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408065,"byte_end":408068,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408073,"byte_end":408113,"line_start":248,"line_end":248,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408118,"byte_end":408121,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408126,"byte_end":408133,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408138,"byte_end":408179,"line_start":251,"line_end":251,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408184,"byte_end":408234,"line_start":252,"line_end":252,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408239,"byte_end":408242,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408247,"byte_end":408294,"line_start":254,"line_end":254,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408299,"byte_end":408329,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408334,"byte_end":408337,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408342,"byte_end":408396,"line_start":257,"line_end":257,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408401,"byte_end":408404,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408409,"byte_end":408482,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408487,"byte_end":408496,"line_start":260,"line_end":260,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408501,"byte_end":408508,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6504},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409350,"byte_end":409361,"line_start":290,"line_end":290,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":6495},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408720,"byte_end":408793,"line_start":271,"line_end":271,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408798,"byte_end":408801,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408806,"byte_end":408864,"line_start":273,"line_end":273,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408869,"byte_end":408872,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408877,"byte_end":408891,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408896,"byte_end":408899,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408904,"byte_end":408911,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408916,"byte_end":408957,"line_start":278,"line_end":278,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":408962,"byte_end":409006,"line_start":279,"line_end":279,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409011,"byte_end":409014,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409019,"byte_end":409066,"line_start":281,"line_end":281,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409071,"byte_end":409114,"line_start":282,"line_end":282,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409119,"byte_end":409122,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409127,"byte_end":409182,"line_start":284,"line_end":284,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409187,"byte_end":409190,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409195,"byte_end":409220,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409225,"byte_end":409266,"line_start":287,"line_end":287,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409271,"byte_end":409330,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409335,"byte_end":409342,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6506},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410201,"byte_end":410215,"line_start":318,"line_end":318,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":6495},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409561,"byte_end":409634,"line_start":299,"line_end":299,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409639,"byte_end":409642,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409647,"byte_end":409705,"line_start":301,"line_end":301,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409710,"byte_end":409713,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409718,"byte_end":409732,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409737,"byte_end":409740,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409745,"byte_end":409752,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409757,"byte_end":409798,"line_start":306,"line_end":306,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409803,"byte_end":409847,"line_start":307,"line_end":307,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409852,"byte_end":409855,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409860,"byte_end":409907,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409912,"byte_end":409958,"line_start":310,"line_end":310,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409963,"byte_end":409966,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":409971,"byte_end":410029,"line_start":312,"line_end":312,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410034,"byte_end":410037,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410042,"byte_end":410067,"line_start":314,"line_end":314,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410072,"byte_end":410117,"line_start":315,"line_end":315,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410122,"byte_end":410181,"line_start":316,"line_end":316,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410186,"byte_end":410193,"line_start":317,"line_end":317,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6508},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411577,"byte_end":411582,"line_start":356,"line_end":356,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"pub fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where\nSelf: AsyncWrite + Sized","parent":{"krate":0,"index":6495},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410420,"byte_end":410491,"line_start":327,"line_end":327,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410496,"byte_end":410499,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410504,"byte_end":410574,"line_start":329,"line_end":329,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410579,"byte_end":410604,"line_start":330,"line_end":330,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410609,"byte_end":410612,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410617,"byte_end":410631,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410636,"byte_end":410639,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410644,"byte_end":410651,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410656,"byte_end":410697,"line_start":335,"line_end":335,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410702,"byte_end":410752,"line_start":336,"line_end":336,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410757,"byte_end":410760,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410765,"byte_end":410835,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410840,"byte_end":410910,"line_start":339,"line_end":339,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410915,"byte_end":410966,"line_start":340,"line_end":340,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410971,"byte_end":410974,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":410979,"byte_end":411022,"line_start":342,"line_end":342,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411027,"byte_end":411090,"line_start":343,"line_end":343,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411095,"byte_end":411142,"line_start":344,"line_end":344,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411147,"byte_end":411150,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411155,"byte_end":411160,"line_start":346,"line_end":346,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411165,"byte_end":411236,"line_start":347,"line_end":347,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411241,"byte_end":411293,"line_start":348,"line_end":348,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411298,"byte_end":411350,"line_start":349,"line_end":349,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411355,"byte_end":411360,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411365,"byte_end":411368,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411373,"byte_end":411435,"line_start":352,"line_end":352,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411440,"byte_end":411493,"line_start":353,"line_end":353,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411498,"byte_end":411557,"line_start":354,"line_end":354,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411562,"byte_end":411569,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6509},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":412359,"byte_end":412363,"line_start":382,"line_end":382,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":6495},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411766,"byte_end":411836,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411841,"byte_end":411872,"line_start":364,"line_end":364,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411877,"byte_end":411880,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411885,"byte_end":411899,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411904,"byte_end":411907,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411912,"byte_end":411919,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411924,"byte_end":411965,"line_start":369,"line_end":369,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":411970,"byte_end":412014,"line_start":370,"line_end":370,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":412019,"byte_end":412022,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":412027,"byte_end":412074,"line_start":372,"line_end":372,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":412079,"byte_end":412107,"line_start":373,"line_end":373,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":412112,"byte_end":412115,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":412120,"byte_end":412154,"line_start":375,"line_end":375,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":412159,"byte_end":412201,"line_start":376,"line_end":376,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":412206,"byte_end":412209,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":412214,"byte_end":412235,"line_start":378,"line_end":378,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":412240,"byte_end":412275,"line_start":379,"line_end":379,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":412280,"byte_end":412339,"line_start":380,"line_end":380,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":412344,"byte_end":412351,"line_start":381,"line_end":381,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":6512},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413163,"byte_end":413176,"line_start":406,"line_end":406,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":6513},{"krate":0,"index":6514},{"krate":0,"index":6515},{"krate":0,"index":6517},{"krate":0,"index":6519}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413080,"byte_end":413152,"line_start":405,"line_end":405,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6513},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413917,"byte_end":413922,"line_start":429,"line_end":429,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":6512},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413195,"byte_end":413260,"line_start":407,"line_end":407,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413265,"byte_end":413268,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413273,"byte_end":413287,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413292,"byte_end":413295,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413300,"byte_end":413307,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413312,"byte_end":413353,"line_start":412,"line_end":412,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413358,"byte_end":413407,"line_start":413,"line_end":413,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413412,"byte_end":413449,"line_start":414,"line_end":414,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413454,"byte_end":413457,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413462,"byte_end":413496,"line_start":416,"line_end":416,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413501,"byte_end":413504,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413509,"byte_end":413514,"line_start":418,"line_end":418,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413519,"byte_end":413565,"line_start":419,"line_end":419,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413570,"byte_end":413637,"line_start":420,"line_end":420,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413642,"byte_end":413685,"line_start":421,"line_end":421,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413690,"byte_end":413733,"line_start":422,"line_end":422,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413738,"byte_end":413770,"line_start":423,"line_end":423,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413775,"byte_end":413780,"line_start":424,"line_end":424,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413785,"byte_end":413788,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413793,"byte_end":413833,"line_start":426,"line_end":426,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413838,"byte_end":413897,"line_start":427,"line_end":427,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413902,"byte_end":413909,"line_start":428,"line_end":428,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6514},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":414127,"byte_end":414132,"line_start":436,"line_end":436,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"pub fn close(&mut Self) -> Close<, Self> where Self: Unpin","parent":{"krate":0,"index":6512},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":414054,"byte_end":414119,"line_start":435,"line_end":435,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6515},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":414470,"byte_end":414475,"line_start":446,"line_end":446,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":6512},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":414264,"byte_end":414335,"line_start":442,"line_end":442,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":414340,"byte_end":414343,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":414348,"byte_end":414430,"line_start":444,"line_end":444,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":414435,"byte_end":414462,"line_start":445,"line_end":445,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6517},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":414881,"byte_end":414895,"line_start":457,"line_end":457,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectored where\nSelf: Unpin","parent":{"krate":0,"index":6512},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":414637,"byte_end":414723,"line_start":452,"line_end":452,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":414728,"byte_end":414746,"line_start":453,"line_end":453,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":414751,"byte_end":414754,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":414759,"byte_end":414841,"line_start":455,"line_end":455,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":414846,"byte_end":414873,"line_start":456,"line_end":456,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6519},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415737,"byte_end":415746,"line_start":483,"line_end":483,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":6512},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415084,"byte_end":415116,"line_start":463,"line_end":463,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415121,"byte_end":415124,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415129,"byte_end":415210,"line_start":465,"line_end":465,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415215,"byte_end":415237,"line_start":466,"line_end":466,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415242,"byte_end":415245,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415250,"byte_end":415328,"line_start":468,"line_end":468,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415333,"byte_end":415336,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415341,"byte_end":415355,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415360,"byte_end":415363,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415368,"byte_end":415375,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415380,"byte_end":415421,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415426,"byte_end":415471,"line_start":474,"line_end":474,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415476,"byte_end":415479,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415484,"byte_end":415531,"line_start":476,"line_end":476,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415536,"byte_end":415539,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415544,"byte_end":415587,"line_start":478,"line_end":478,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415592,"byte_end":415595,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415600,"byte_end":415653,"line_start":480,"line_end":480,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415658,"byte_end":415717,"line_start":481,"line_end":481,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":415722,"byte_end":415729,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":6523},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":419590,"byte_end":419602,"line_start":593,"line_end":593,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":6524},{"krate":0,"index":6525}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":419508,"byte_end":419579,"line_start":592,"line_end":592,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6524},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":419872,"byte_end":419876,"line_start":599,"line_end":599,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":6523},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":419620,"byte_end":419689,"line_start":594,"line_end":594,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":419694,"byte_end":419747,"line_start":595,"line_end":595,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":419752,"byte_end":419755,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":419760,"byte_end":419837,"line_start":597,"line_end":597,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":419842,"byte_end":419864,"line_start":598,"line_end":598,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":6525},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420210,"byte_end":420225,"line_start":609,"line_end":609,"column_start":8,"column_end":23},"name":"stream_position","qualname":"::io::AsyncSeekExt::stream_position","value":"pub fn stream_position(&mut Self) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":6523},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[{"value":"/ Creates a future which will return the current seek position from the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420027,"byte_end":420100,"line_start":605,"line_end":605,"column_start":5,"column_end":78}},{"value":"/ start of the stream.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420105,"byte_end":420129,"line_start":606,"line_end":606,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420134,"byte_end":420137,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.seek(SeekFrom::Current(0))`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420142,"byte_end":420202,"line_start":608,"line_end":608,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":6528},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420477,"byte_end":420492,"line_start":620,"line_end":620,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":6529},{"krate":0,"index":6530},{"krate":0,"index":6531},{"krate":0,"index":6533},{"krate":0,"index":6535}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420392,"byte_end":420466,"line_start":619,"line_end":619,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6529},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421446,"byte_end":421454,"line_start":644,"line_end":644,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"::io::AsyncBufReadExt::fill_buf","value":"pub fn fill_buf(&mut Self) -> FillBuf<, Self> where Self: Unpin","parent":{"krate":0,"index":6528},"children":[],"decl_id":null,"docs":" Creates a future which will wait for a non-empty buffer to be available from this I/O\n object or EOF to be reached.","sig":null,"attributes":[{"value":"/ Creates a future which will wait for a non-empty buffer to be available from this I/O","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420513,"byte_end":420602,"line_start":621,"line_end":621,"column_start":5,"column_end":94}},{"value":"/ object or EOF to be reached.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420607,"byte_end":420639,"line_start":622,"line_end":622,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420644,"byte_end":420647,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ This method is the async equivalent to [`BufRead::fill_buf`](std::io::BufRead::fill_buf).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420652,"byte_end":420745,"line_start":624,"line_end":624,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420750,"byte_end":420753,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420758,"byte_end":420769,"line_start":626,"line_end":626,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420774,"byte_end":420815,"line_start":627,"line_end":627,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420820,"byte_end":420899,"line_start":628,"line_end":628,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420904,"byte_end":420907,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3]), Ok(vec![4, 5, 6])]).into_async_read();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420912,"byte_end":421000,"line_start":630,"line_end":630,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421005,"byte_end":421008,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421013,"byte_end":421069,"line_start":632,"line_end":632,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421074,"byte_end":421102,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421107,"byte_end":421110,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421115,"byte_end":421165,"line_start":635,"line_end":635,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421170,"byte_end":421198,"line_start":636,"line_end":636,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421203,"byte_end":421206,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![4, 5, 6]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421211,"byte_end":421267,"line_start":638,"line_end":638,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421272,"byte_end":421300,"line_start":639,"line_end":639,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421305,"byte_end":421308,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421313,"byte_end":421362,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421367,"byte_end":421426,"line_start":642,"line_end":642,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421431,"byte_end":421438,"line_start":643,"line_end":643,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6530},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422251,"byte_end":422264,"line_start":667,"line_end":667,"column_start":8,"column_end":21},"name":"consume_unpin","qualname":"::io::AsyncBufReadExt::consume_unpin","value":"pub fn consume_unpin(&mut Self, usize) where Self: Unpin","parent":{"krate":0,"index":6528},"children":[],"decl_id":null,"docs":" A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","sig":null,"attributes":[{"value":"/ A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421593,"byte_end":421671,"line_start":650,"line_end":650,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421676,"byte_end":421679,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421684,"byte_end":421695,"line_start":652,"line_end":652,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421700,"byte_end":421741,"line_start":653,"line_end":653,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421746,"byte_end":421825,"line_start":654,"line_end":654,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421830,"byte_end":421833,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3])]).into_async_read();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421838,"byte_end":421907,"line_start":656,"line_end":656,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421912,"byte_end":421915,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421920,"byte_end":421976,"line_start":658,"line_end":658,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":421981,"byte_end":422009,"line_start":659,"line_end":659,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422014,"byte_end":422017,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422022,"byte_end":422072,"line_start":661,"line_end":661,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422077,"byte_end":422105,"line_start":662,"line_end":662,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422110,"byte_end":422113,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422118,"byte_end":422167,"line_start":664,"line_end":664,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422172,"byte_end":422231,"line_start":665,"line_end":665,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422236,"byte_end":422243,"line_start":666,"line_end":666,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6531},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423951,"byte_end":423961,"line_start":714,"line_end":714,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":6528},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422368,"byte_end":422443,"line_start":673,"line_end":673,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422448,"byte_end":422515,"line_start":674,"line_end":674,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422520,"byte_end":422617,"line_start":675,"line_end":675,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422622,"byte_end":422625,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422630,"byte_end":422700,"line_start":677,"line_end":677,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422705,"byte_end":422779,"line_start":678,"line_end":678,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422784,"byte_end":422839,"line_start":679,"line_end":679,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422844,"byte_end":422847,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422852,"byte_end":422930,"line_start":681,"line_end":681,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422935,"byte_end":422962,"line_start":682,"line_end":682,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422967,"byte_end":422970,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":422975,"byte_end":423052,"line_start":684,"line_end":684,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423057,"byte_end":423079,"line_start":685,"line_end":685,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423084,"byte_end":423087,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423092,"byte_end":423106,"line_start":687,"line_end":687,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423111,"byte_end":423114,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423119,"byte_end":423126,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423131,"byte_end":423172,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423177,"byte_end":423224,"line_start":691,"line_end":691,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423229,"byte_end":423232,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423237,"byte_end":423286,"line_start":693,"line_end":693,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423291,"byte_end":423316,"line_start":694,"line_end":694,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423321,"byte_end":423324,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423329,"byte_end":423352,"line_start":696,"line_end":696,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423357,"byte_end":423418,"line_start":697,"line_end":697,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423423,"byte_end":423452,"line_start":698,"line_end":698,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423457,"byte_end":423488,"line_start":699,"line_end":699,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423493,"byte_end":423509,"line_start":700,"line_end":700,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423514,"byte_end":423517,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423522,"byte_end":423545,"line_start":702,"line_end":702,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423550,"byte_end":423611,"line_start":703,"line_end":703,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423616,"byte_end":423645,"line_start":704,"line_end":704,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423650,"byte_end":423680,"line_start":705,"line_end":705,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423685,"byte_end":423701,"line_start":706,"line_end":706,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423706,"byte_end":423709,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423714,"byte_end":423737,"line_start":708,"line_end":708,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423742,"byte_end":423803,"line_start":709,"line_end":709,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423808,"byte_end":423837,"line_start":710,"line_end":710,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423842,"byte_end":423867,"line_start":711,"line_end":711,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423872,"byte_end":423931,"line_start":712,"line_end":712,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":423936,"byte_end":423943,"line_start":713,"line_end":713,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6533},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426167,"byte_end":426176,"line_start":775,"line_end":775,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":6528},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424185,"byte_end":424260,"line_start":724,"line_end":724,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424265,"byte_end":424336,"line_start":725,"line_end":725,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424341,"byte_end":424436,"line_start":726,"line_end":726,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424441,"byte_end":424444,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424449,"byte_end":424519,"line_start":728,"line_end":728,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424524,"byte_end":424599,"line_start":729,"line_end":729,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424604,"byte_end":424674,"line_start":730,"line_end":730,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424679,"byte_end":424689,"line_start":731,"line_end":731,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424694,"byte_end":424697,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424702,"byte_end":424780,"line_start":733,"line_end":733,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424785,"byte_end":424812,"line_start":734,"line_end":734,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424817,"byte_end":424820,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424825,"byte_end":424902,"line_start":736,"line_end":736,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424907,"byte_end":424929,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424934,"byte_end":424937,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424942,"byte_end":424954,"line_start":739,"line_end":739,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424959,"byte_end":424962,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":424967,"byte_end":425040,"line_start":741,"line_end":741,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425045,"byte_end":425118,"line_start":742,"line_end":742,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425123,"byte_end":425197,"line_start":743,"line_end":743,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425202,"byte_end":425258,"line_start":744,"line_end":744,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425263,"byte_end":425266,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425271,"byte_end":425318,"line_start":746,"line_end":746,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425323,"byte_end":425326,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425331,"byte_end":425345,"line_start":748,"line_end":748,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425350,"byte_end":425353,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425358,"byte_end":425365,"line_start":750,"line_end":750,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425370,"byte_end":425411,"line_start":751,"line_end":751,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425416,"byte_end":425463,"line_start":752,"line_end":752,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425468,"byte_end":425471,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425476,"byte_end":425522,"line_start":754,"line_end":754,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425527,"byte_end":425559,"line_start":755,"line_end":755,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425564,"byte_end":425567,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425572,"byte_end":425595,"line_start":757,"line_end":757,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425600,"byte_end":425654,"line_start":758,"line_end":758,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425659,"byte_end":425688,"line_start":759,"line_end":759,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425693,"byte_end":425722,"line_start":760,"line_end":760,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425727,"byte_end":425743,"line_start":761,"line_end":761,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425748,"byte_end":425751,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425756,"byte_end":425779,"line_start":763,"line_end":763,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425784,"byte_end":425838,"line_start":764,"line_end":764,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425843,"byte_end":425872,"line_start":765,"line_end":765,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425877,"byte_end":425904,"line_start":766,"line_end":766,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425909,"byte_end":425925,"line_start":767,"line_end":767,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425930,"byte_end":425933,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425938,"byte_end":425961,"line_start":769,"line_end":769,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":425966,"byte_end":426020,"line_start":770,"line_end":770,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426025,"byte_end":426054,"line_start":771,"line_end":771,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426059,"byte_end":426083,"line_start":772,"line_end":772,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426088,"byte_end":426147,"line_start":773,"line_end":773,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426152,"byte_end":426159,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6535},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427696,"byte_end":427701,"line_start":813,"line_end":813,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":6528},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426350,"byte_end":426401,"line_start":781,"line_end":781,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426406,"byte_end":426493,"line_start":782,"line_end":782,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426498,"byte_end":426501,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426506,"byte_end":426572,"line_start":784,"line_end":784,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426577,"byte_end":426659,"line_start":785,"line_end":785,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426664,"byte_end":426724,"line_start":786,"line_end":786,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426729,"byte_end":426732,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426737,"byte_end":426772,"line_start":788,"line_end":788,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426777,"byte_end":426799,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426804,"byte_end":426807,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426812,"byte_end":426824,"line_start":791,"line_end":791,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426829,"byte_end":426832,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426837,"byte_end":426928,"line_start":793,"line_end":793,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426933,"byte_end":426936,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":426941,"byte_end":427003,"line_start":795,"line_end":795,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427008,"byte_end":427011,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427016,"byte_end":427030,"line_start":797,"line_end":797,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427035,"byte_end":427038,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427043,"byte_end":427050,"line_start":799,"line_end":799,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427055,"byte_end":427096,"line_start":800,"line_end":800,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427101,"byte_end":427148,"line_start":801,"line_end":801,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427153,"byte_end":427188,"line_start":802,"line_end":802,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427193,"byte_end":427196,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427201,"byte_end":427256,"line_start":804,"line_end":804,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427261,"byte_end":427264,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427269,"byte_end":427331,"line_start":806,"line_end":806,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427336,"byte_end":427407,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427412,"byte_end":427483,"line_start":808,"line_end":808,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427488,"byte_end":427559,"line_start":809,"line_end":809,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427564,"byte_end":427612,"line_start":810,"line_end":810,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427617,"byte_end":427676,"line_start":811,"line_end":811,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427681,"byte_end":427688,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6567},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mod.rs","parent":null,"children":[{"krate":0,"index":13858},{"krate":0,"index":14040},{"krate":0,"index":14041},{"krate":0,"index":14044},{"krate":0,"index":14047},{"krate":0,"index":14050},{"krate":0,"index":14053},{"krate":0,"index":14135}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":12378,"byte_end":12403,"line_start":345,"line_end":345,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mod.rs","byte_start":499385,"byte_end":499432,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mod.rs","byte_start":499433,"byte_end":499436,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mod.rs","byte_start":499437,"byte_end":499512,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mod.rs","byte_start":499513,"byte_end":499570,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":13912},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12780115,"byte_end":12780120,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":13914},{"krate":0,"index":13915},{"krate":0,"index":13916}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12779788,"byte_end":12779814,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12779815,"byte_end":12779818,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12779819,"byte_end":12779833,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12779834,"byte_end":12779837,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12779838,"byte_end":12779917,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12779918,"byte_end":12780000,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12780001,"byte_end":12780085,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12780086,"byte_end":12780103,"line_start":19,"line_end":19,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":13939},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781434,"byte_end":12781437,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781384,"byte_end":12781422,"line_start":74,"line_end":74,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":13940},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781864,"byte_end":12781874,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781618,"byte_end":12781673,"line_start":83,"line_end":83,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781678,"byte_end":12781681,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781686,"byte_end":12781700,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781705,"byte_end":12781708,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781713,"byte_end":12781720,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781725,"byte_end":12781754,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781759,"byte_end":12781762,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781767,"byte_end":12781797,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781802,"byte_end":12781840,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781845,"byte_end":12781852,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":13943},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782088,"byte_end":12782096,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781960,"byte_end":12782004,"line_start":99,"line_end":99,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782009,"byte_end":12782012,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782017,"byte_end":12782076,"line_start":101,"line_end":101,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":13944},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782517,"byte_end":12782521,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782352,"byte_end":12782388,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782393,"byte_end":12782396,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782401,"byte_end":12782474,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782479,"byte_end":12782505,"line_start":114,"line_end":114,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":13945},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12783182,"byte_end":12783189,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782672,"byte_end":12782727,"line_start":122,"line_end":122,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782732,"byte_end":12782735,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782740,"byte_end":12782815,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782820,"byte_end":12782894,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782899,"byte_end":12782902,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782907,"byte_end":12782921,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782926,"byte_end":12782929,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782934,"byte_end":12782941,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782946,"byte_end":12782987,"line_start":130,"line_end":130,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12782992,"byte_end":12783021,"line_start":131,"line_end":131,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12783026,"byte_end":12783029,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12783034,"byte_end":12783068,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12783073,"byte_end":12783099,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12783104,"byte_end":12783144,"line_start":135,"line_end":135,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12783149,"byte_end":12783158,"line_start":136,"line_end":136,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12783163,"byte_end":12783170,"line_start":137,"line_end":137,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":13949},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12784912,"byte_end":12784927,"line_start":183,"line_end":183,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":13952},{"krate":0,"index":13953}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12784819,"byte_end":12784900,"line_start":182,"line_end":182,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":13968},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787541,"byte_end":12787551,"line_start":262,"line_end":262,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":13971}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787377,"byte_end":12787441,"line_start":259,"line_end":259,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787442,"byte_end":12787515,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787516,"byte_end":12787529,"line_start":261,"line_end":261,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":13975},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12788120,"byte_end":12788123,"line_start":283,"line_end":283,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787641,"byte_end":12787701,"line_start":267,"line_end":267,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787706,"byte_end":12787709,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787714,"byte_end":12787727,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787732,"byte_end":12787735,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787740,"byte_end":12787747,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787752,"byte_end":12787793,"line_start":272,"line_end":272,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787798,"byte_end":12787841,"line_start":273,"line_end":273,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787846,"byte_end":12787849,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787854,"byte_end":12787907,"line_start":275,"line_end":275,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787912,"byte_end":12787917,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787922,"byte_end":12788011,"line_start":277,"line_end":277,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12788016,"byte_end":12788058,"line_start":278,"line_end":278,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12788063,"byte_end":12788068,"line_start":279,"line_end":279,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12788073,"byte_end":12788082,"line_start":280,"line_end":280,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12788087,"byte_end":12788094,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12788099,"byte_end":12788108,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":13991},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789454,"byte_end":12789470,"line_start":326,"line_end":326,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":13995},{"krate":0,"index":13996},{"krate":0,"index":13997}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789270,"byte_end":12789358,"line_start":324,"line_end":324,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789359,"byte_end":12789442,"line_start":325,"line_end":325,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":14002},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12790236,"byte_end":12790239,"line_start":350,"line_end":350,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<V: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut U)\n-> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789647,"byte_end":12789707,"line_start":333,"line_end":333,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789712,"byte_end":12789715,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789720,"byte_end":12789733,"line_start":335,"line_end":335,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789738,"byte_end":12789741,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789746,"byte_end":12789753,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789758,"byte_end":12789799,"line_start":338,"line_end":338,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789804,"byte_end":12789865,"line_start":339,"line_end":339,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789870,"byte_end":12789873,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789878,"byte_end":12789931,"line_start":341,"line_end":341,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789936,"byte_end":12789941,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789946,"byte_end":12790035,"line_start":343,"line_end":343,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12790040,"byte_end":12790130,"line_start":344,"line_end":344,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12790135,"byte_end":12790174,"line_start":345,"line_end":345,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12790179,"byte_end":12790184,"line_start":346,"line_end":346,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12790189,"byte_end":12790198,"line_start":347,"line_end":347,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12790203,"byte_end":12790210,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12790215,"byte_end":12790224,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":6579},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":500320,"byte_end":500327,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":6581},{"krate":0,"index":6582}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6581},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":500342,"byte_end":500348,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":6579},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6582},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":500357,"byte_end":500366,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":6579},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6589},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":500558,"byte_end":500564,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":6591}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6591},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":500589,"byte_end":500597,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":6589},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6606},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":501901,"byte_end":501905,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14177},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":502261,"byte_end":502268,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14198},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":503002,"byte_end":503015,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14214},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":503357,"byte_end":503366,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14229},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":504315,"byte_end":504322,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14244},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":505033,"byte_end":505041,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14259},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":505761,"byte_end":505772,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14271},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":506590,"byte_end":506602,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14283},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":507683,"byte_end":507697,"line_start":312,"line_end":312,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6770},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":508456,"byte_end":508462,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\poll.rs","byte_start":14859,"byte_end":14867,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\pending.rs","byte_start":16034,"byte_end":16045,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\flatten.rs","byte_start":58736,"byte_end":58743,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\flatten.rs","byte_start":58873,"byte_end":58880,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\flatten.rs","byte_start":59111,"byte_end":59118,"line_start":38,"line_end":38,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\flatten.rs","byte_start":59900,"byte_end":59907,"line_start":62,"line_end":62,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\flatten.rs","byte_start":60138,"byte_end":60145,"line_start":74,"line_end":74,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63217,"byte_end":63221,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63328,"byte_end":63332,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":65061,"byte_end":65065,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":65178,"byte_end":65182,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\map.rs","byte_start":66161,"byte_end":66164,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\map.rs","byte_start":66333,"byte_end":66336,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\map.rs","byte_start":66598,"byte_end":66601,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\catch_unwind.rs","byte_start":67807,"byte_end":67818,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\catch_unwind.rs","byte_start":67956,"byte_end":67967,"line_start":25,"line_end":25,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":69291,"byte_end":69297,"line_start":34,"line_end":34,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":69340,"byte_end":69346,"line_start":36,"line_end":36,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":69604,"byte_end":69609,"line_start":45,"line_end":45,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":69763,"byte_end":69773,"line_start":51,"line_end":51,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":70005,"byte_end":70010,"line_start":62,"line_end":62,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":70107,"byte_end":70112,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":70356,"byte_end":70362,"line_start":83,"line_end":83,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":70819,"byte_end":70825,"line_start":100,"line_end":100,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":72891,"byte_end":72896,"line_start":157,"line_end":157,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":74592,"byte_end":74598,"line_start":206,"line_end":206,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":74750,"byte_end":74756,"line_start":216,"line_end":216,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":76384,"byte_end":76389,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":78196,"byte_end":78202,"line_start":328,"line_end":328,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":78394,"byte_end":78400,"line_start":340,"line_end":340,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":78828,"byte_end":78836,"line_start":357,"line_end":357,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":79195,"byte_end":79205,"line_start":370,"line_end":370,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":41887,"byte_end":41888,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\into_future.rs","byte_start":101664,"byte_end":101674,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\into_future.rs","byte_start":101825,"byte_end":101835,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\into_future.rs","byte_start":101946,"byte_end":101956,"line_start":27,"line_end":27,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten.rs","byte_start":102688,"byte_end":102698,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten.rs","byte_start":102828,"byte_end":102838,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten.rs","byte_start":103085,"byte_end":103095,"line_start":38,"line_end":38,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten.rs","byte_start":104117,"byte_end":104127,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten.rs","byte_start":104374,"byte_end":104384,"line_start":79,"line_end":79,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten_err.rs","byte_start":107887,"byte_end":107900,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten_err.rs","byte_start":108030,"byte_end":108043,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten_err.rs","byte_start":108290,"byte_end":108303,"line_start":35,"line_end":35,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":84210,"byte_end":84213,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109680,"byte_end":109684,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":110280,"byte_end":110284,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":110416,"byte_end":110420,"line_start":47,"line_end":47,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111023,"byte_end":111030,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111604,"byte_end":111611,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111756,"byte_end":111763,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111790,"byte_end":111797,"line_start":53,"line_end":53,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112551,"byte_end":112560,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":113163,"byte_end":113172,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":114270,"byte_end":114279,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":114480,"byte_end":114489,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1052},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":115809,"byte_end":115821,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":116047,"byte_end":116059,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":117172,"byte_end":117184,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":117388,"byte_end":117400,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\option.rs","byte_start":119122,"byte_end":119134,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\option.rs","byte_start":119471,"byte_end":119483,"line_start":48,"line_end":48,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\option.rs","byte_start":119670,"byte_end":119682,"line_start":57,"line_end":57,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120120,"byte_end":120126,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120819,"byte_end":120825,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120967,"byte_end":120973,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":121476,"byte_end":121481,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":121660,"byte_end":121665,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":121697,"byte_end":121702,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":121799,"byte_end":121804,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1221},{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":129530,"byte_end":129537,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1367}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":131354,"byte_end":131361,"line_start":91,"line_end":91,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":132058,"byte_end":132065,"line_start":118,"line_end":118,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1377}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":132561,"byte_end":132567,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134987,"byte_end":134993,"line_start":90,"line_end":90,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1423},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":135696,"byte_end":135702,"line_start":112,"line_end":112,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136265,"byte_end":136274,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":137299,"byte_end":137308,"line_start":45,"line_end":45,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":137491,"byte_end":137500,"line_start":52,"line_end":52,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":138206,"byte_end":138215,"line_start":73,"line_end":73,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":146840,"byte_end":146850,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":148704,"byte_end":148714,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1628},{"krate":0,"index":1629}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":149887,"byte_end":149897,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1633}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":150379,"byte_end":150388,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":152222,"byte_end":152231,"line_start":59,"line_end":59,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1676},{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":153610,"byte_end":153618,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":154691,"byte_end":154699,"line_start":43,"line_end":43,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":156143,"byte_end":156151,"line_start":80,"line_end":80,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":156751,"byte_end":156757,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":157096,"byte_end":157102,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":157487,"byte_end":157493,"line_start":41,"line_end":41,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1776}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":157874,"byte_end":157880,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1779}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":158121,"byte_end":158127,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1783},{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":158466,"byte_end":158472,"line_start":78,"line_end":78,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":158748,"byte_end":158754,"line_start":91,"line_end":91,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":159289,"byte_end":159295,"line_start":113,"line_end":113,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1798}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":161041,"byte_end":161047,"line_start":176,"line_end":176,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1839},{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":162102,"byte_end":162108,"line_start":212,"line_end":212,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":163415,"byte_end":163421,"line_start":254,"line_end":254,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":163851,"byte_end":163857,"line_start":271,"line_end":271,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1855},{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12705434,"byte_end":12705443,"line_start":22,"line_end":22,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9271}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706790,"byte_end":12706801,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9273}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12708670,"byte_end":12708677,"line_start":128,"line_end":128,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9277}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12708860,"byte_end":12708867,"line_start":135,"line_end":135,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12708893,"byte_end":12708902,"line_start":137,"line_end":137,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9281},{"krate":0,"index":9282}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12709876,"byte_end":12709887,"line_start":166,"line_end":166,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9284}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\chain.rs","byte_start":219118,"byte_end":219123,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1973}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\chain.rs","byte_start":219380,"byte_end":219385,"line_start":32,"line_end":32,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1977}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\chain.rs","byte_start":219590,"byte_end":219595,"line_start":41,"line_end":41,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\collect.rs","byte_start":221208,"byte_end":221215,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2025}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\collect.rs","byte_start":221513,"byte_end":221520,"line_start":33,"line_end":33,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2029}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\collect.rs","byte_start":221696,"byte_end":221703,"line_start":42,"line_end":42,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2033},{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\unzip.rs","byte_start":222727,"byte_end":222732,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\unzip.rs","byte_start":223206,"byte_end":223211,"line_start":39,"line_end":39,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2084}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\unzip.rs","byte_start":223461,"byte_end":223466,"line_start":49,"line_end":49,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2091},{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\concat.rs","byte_start":224592,"byte_end":224598,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2129}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\concat.rs","byte_start":224865,"byte_end":224871,"line_start":32,"line_end":32,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2132},{"krate":0,"index":2133}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\concat.rs","byte_start":225646,"byte_end":225652,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\cycle.rs","byte_start":226329,"byte_end":226334,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2169}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\cycle.rs","byte_start":226523,"byte_end":226528,"line_start":31,"line_end":31,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\cycle.rs","byte_start":227277,"byte_end":227282,"line_start":59,"line_end":59,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2177}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\enumerate.rs","byte_start":228030,"byte_end":228039,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2207},{"krate":0,"index":9609},{"krate":0,"index":9610},{"krate":0,"index":9611},{"krate":0,"index":9612}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\enumerate.rs","byte_start":228258,"byte_end":228267,"line_start":31,"line_end":31,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2210}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\enumerate.rs","byte_start":228385,"byte_end":228394,"line_start":37,"line_end":37,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter.rs","byte_start":229858,"byte_end":229864,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter.rs","byte_start":230337,"byte_end":230343,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2262},{"krate":0,"index":9674},{"krate":0,"index":9675},{"krate":0,"index":9676},{"krate":0,"index":9677}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter.rs","byte_start":230721,"byte_end":230727,"line_start":60,"line_end":60,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2267}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter.rs","byte_start":231076,"byte_end":231082,"line_start":71,"line_end":71,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter_map.rs","byte_start":233299,"byte_end":233308,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter_map.rs","byte_start":233605,"byte_end":233614,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2321},{"krate":0,"index":9735},{"krate":0,"index":9736},{"krate":0,"index":9737},{"krate":0,"index":9738}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter_map.rs","byte_start":233893,"byte_end":233902,"line_start":49,"line_end":49,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter_map.rs","byte_start":234179,"byte_end":234188,"line_start":59,"line_end":59,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\flatten.rs","byte_start":236333,"byte_end":236340,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2366},{"krate":0,"index":9788},{"krate":0,"index":9789},{"krate":0,"index":9790},{"krate":0,"index":9791}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\flatten.rs","byte_start":236509,"byte_end":236516,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2369}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\flatten.rs","byte_start":236708,"byte_end":236715,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2372},{"krate":0,"index":2373}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fold.rs","byte_start":238229,"byte_end":238233,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2409}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fold.rs","byte_start":238589,"byte_end":238593,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2415}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fold.rs","byte_start":238911,"byte_end":238915,"line_start":52,"line_end":52,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2421}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fold.rs","byte_start":239162,"byte_end":239166,"line_start":62,"line_end":62,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2427},{"krate":0,"index":2428}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each.rs","byte_start":240767,"byte_end":240774,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each.rs","byte_start":241067,"byte_end":241074,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each.rs","byte_start":241350,"byte_end":241357,"line_start":48,"line_end":48,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2480}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each.rs","byte_start":241608,"byte_end":241615,"line_start":58,"line_end":58,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2485},{"krate":0,"index":2486}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fuse.rs","byte_start":242728,"byte_end":242732,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":10013},{"krate":0,"index":10014},{"krate":0,"index":10015},{"krate":0,"index":10016}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fuse.rs","byte_start":243229,"byte_end":243233,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2520}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fuse.rs","byte_start":243331,"byte_end":243335,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":244560,"byte_end":244572,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2562}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":247062,"byte_end":247074,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2565}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":247194,"byte_end":247206,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2568},{"krate":0,"index":2569}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\map.rs","byte_start":248114,"byte_end":248117,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\map.rs","byte_start":248332,"byte_end":248335,"line_start":33,"line_end":33,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2610},{"krate":0,"index":10137},{"krate":0,"index":10138},{"krate":0,"index":10139},{"krate":0,"index":10140}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\map.rs","byte_start":248504,"byte_end":248507,"line_start":41,"line_end":41,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2614}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\map.rs","byte_start":248681,"byte_end":248684,"line_start":50,"line_end":50,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2621}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\next.rs","byte_start":249831,"byte_end":249835,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\next.rs","byte_start":249886,"byte_end":249890,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2658}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\next.rs","byte_start":250041,"byte_end":250045,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2661}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\next.rs","byte_start":250184,"byte_end":250188,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2664},{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\select_next_some.rs","byte_start":250862,"byte_end":250876,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2699}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\select_next_some.rs","byte_start":251027,"byte_end":251041,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2702}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\select_next_some.rs","byte_start":251185,"byte_end":251199,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2705},{"krate":0,"index":2706}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":252510,"byte_end":252518,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2759},{"krate":0,"index":10280},{"krate":0,"index":10281},{"krate":0,"index":10282},{"krate":0,"index":10283},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2764}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":256695,"byte_end":256703,"line_start":154,"line_end":154,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2769}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":256845,"byte_end":256853,"line_start":160,"line_end":160,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":258012,"byte_end":258016,"line_start":202,"line_end":202,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2777}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":258261,"byte_end":258265,"line_start":212,"line_end":212,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2780}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":258376,"byte_end":258380,"line_start":218,"line_end":218,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2784},{"krate":0,"index":2785}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":259085,"byte_end":259091,"line_start":244,"line_end":244,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2789}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":259469,"byte_end":259475,"line_start":257,"line_end":257,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2795}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":259744,"byte_end":259750,"line_start":268,"line_end":268,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2800},{"krate":0,"index":2801}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":261011,"byte_end":261019,"line_start":306,"line_end":306,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2805}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":261339,"byte_end":261347,"line_start":319,"line_end":319,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2810}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":261531,"byte_end":261539,"line_start":330,"line_end":330,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2814},{"krate":0,"index":2815}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":261910,"byte_end":261920,"line_start":348,"line_end":348,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2825},{"krate":0,"index":2826}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\skip.rs","byte_start":262585,"byte_end":262589,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2866},{"krate":0,"index":10463},{"krate":0,"index":10464},{"krate":0,"index":10465},{"krate":0,"index":10466}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\skip.rs","byte_start":262813,"byte_end":262817,"line_start":31,"line_end":31,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2869}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\skip.rs","byte_start":262935,"byte_end":262939,"line_start":37,"line_end":37,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2874}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\skip_while.rs","byte_start":264559,"byte_end":264568,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2913}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\skip_while.rs","byte_start":265020,"byte_end":265029,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2918},{"krate":0,"index":10532},{"krate":0,"index":10533},{"krate":0,"index":10534},{"krate":0,"index":10535}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\skip_while.rs","byte_start":265436,"byte_end":265445,"line_start":59,"line_end":59,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2923}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\skip_while.rs","byte_start":265705,"byte_end":265714,"line_start":69,"line_end":69,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take.rs","byte_start":268061,"byte_end":268065,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2963},{"krate":0,"index":10576},{"krate":0,"index":10577},{"krate":0,"index":10578},{"krate":0,"index":10579}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take.rs","byte_start":268271,"byte_end":268275,"line_start":32,"line_end":32,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2968}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take.rs","byte_start":269269,"byte_end":269273,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2971}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_while.rs","byte_start":270296,"byte_end":270305,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3009}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_while.rs","byte_start":270753,"byte_end":270762,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3014},{"krate":0,"index":10645},{"krate":0,"index":10646},{"krate":0,"index":10647},{"krate":0,"index":10648}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_while.rs","byte_start":271162,"byte_end":271171,"line_start":59,"line_end":59,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_while.rs","byte_start":272725,"byte_end":272734,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3026}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":274130,"byte_end":274139,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3063}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":274466,"byte_end":274475,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3067},{"krate":0,"index":10702},{"krate":0,"index":10703},{"krate":0,"index":10704},{"krate":0,"index":10705},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3070}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276649,"byte_end":276658,"line_start":119,"line_end":119,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":277690,"byte_end":277699,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3080}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\then.rs","byte_start":278641,"byte_end":278645,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3118}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\then.rs","byte_start":278935,"byte_end":278939,"line_start":36,"line_end":36,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3123},{"krate":0,"index":10763},{"krate":0,"index":10764},{"krate":0,"index":10765},{"krate":0,"index":10766}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\then.rs","byte_start":279236,"byte_end":279240,"line_start":51,"line_end":51,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\then.rs","byte_start":279478,"byte_end":279482,"line_start":61,"line_end":61,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3135}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":281399,"byte_end":281402,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3173},{"krate":0,"index":3174},{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3177}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":283045,"byte_end":283048,"line_start":66,"line_end":66,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3181}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":283239,"byte_end":283242,"line_start":74,"line_end":74,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3187}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\chunks.rs","byte_start":285954,"byte_end":285960,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":10868},{"krate":0,"index":10869},{"krate":0,"index":10870},{"krate":0,"index":10871}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\chunks.rs","byte_start":286463,"byte_end":286469,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3232}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\chunks.rs","byte_start":288107,"byte_end":288113,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3235}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\ready_chunks.rs","byte_start":289085,"byte_end":289096,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3271},{"krate":0,"index":10916},{"krate":0,"index":10917},{"krate":0,"index":10918},{"krate":0,"index":10919}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\ready_chunks.rs","byte_start":289443,"byte_end":289454,"line_start":37,"line_end":37,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3276}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\ready_chunks.rs","byte_start":291562,"byte_end":291573,"line_start":96,"line_end":96,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3279}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\scan.rs","byte_start":292571,"byte_end":292575,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3323}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\scan.rs","byte_start":293061,"byte_end":293065,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\scan.rs","byte_start":293229,"byte_end":293233,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3337},{"krate":0,"index":10985},{"krate":0,"index":10986},{"krate":0,"index":10987},{"krate":0,"index":10988}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\scan.rs","byte_start":293685,"byte_end":293689,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3344},{"krate":0,"index":3345},{"krate":0,"index":3346}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\scan.rs","byte_start":294916,"byte_end":294920,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3353}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\buffer_unordered.rs","byte_start":12711057,"byte_end":12711072,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":11028}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\buffer_unordered.rs","byte_start":12711404,"byte_end":12711419,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":11031},{"krate":0,"index":11155},{"krate":0,"index":11156},{"krate":0,"index":11157},{"krate":0,"index":11158}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\buffer_unordered.rs","byte_start":12711806,"byte_end":12711821,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11034},{"krate":0,"index":11035},{"krate":0,"index":11036}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\buffer_unordered.rs","byte_start":12713298,"byte_end":12713313,"line_start":107,"line_end":107,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":11039}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\buffered.rs","byte_start":12714423,"byte_end":12714431,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":11081}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\buffered.rs","byte_start":12714778,"byte_end":12714786,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":11084},{"krate":0,"index":11159},{"krate":0,"index":11160},{"krate":0,"index":11161},{"krate":0,"index":11162}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\buffered.rs","byte_start":12715111,"byte_end":12715119,"line_start":57,"line_end":57,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":11087},{"krate":0,"index":11088},{"krate":0,"index":11089}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":12717478,"byte_end":12717495,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":11134}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":12717841,"byte_end":12717858,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":11139}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":12718291,"byte_end":12718308,"line_start":53,"line_end":53,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":11144}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":12718550,"byte_end":12718567,"line_start":63,"line_end":63,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":11149},{"krate":0,"index":11150}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\catch_unwind.rs","byte_start":295941,"byte_end":295952,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3393},{"krate":0,"index":11203},{"krate":0,"index":11204},{"krate":0,"index":11205},{"krate":0,"index":11206}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\catch_unwind.rs","byte_start":296144,"byte_end":296155,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3400}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\catch_unwind.rs","byte_start":297063,"byte_end":297074,"line_start":62,"line_end":62,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3403}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174262,"byte_end":174263,"line_start":208,"line_end":208,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\and_then.rs","byte_start":334049,"byte_end":334056,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3705}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\and_then.rs","byte_start":334349,"byte_end":334356,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3710},{"krate":0,"index":11264},{"krate":0,"index":11265},{"krate":0,"index":11266},{"krate":0,"index":11267}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\and_then.rs","byte_start":334649,"byte_end":334656,"line_start":48,"line_end":48,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3715},{"krate":0,"index":3716},{"krate":0,"index":3717}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\and_then.rs","byte_start":335834,"byte_end":335841,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3722}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_stream.rs","byte_start":336771,"byte_end":336781,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3752},{"krate":0,"index":11511},{"krate":0,"index":11512},{"krate":0,"index":11513},{"krate":0,"index":11514}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_stream.rs","byte_start":336974,"byte_end":336984,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3755}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_stream.rs","byte_start":337105,"byte_end":337115,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3758},{"krate":0,"index":3759},{"krate":0,"index":3760}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\or_else.rs","byte_start":338237,"byte_end":338243,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3801}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\or_else.rs","byte_start":338535,"byte_end":338541,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3806},{"krate":0,"index":11710},{"krate":0,"index":11711},{"krate":0,"index":11712},{"krate":0,"index":11713}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\or_else.rs","byte_start":338831,"byte_end":338837,"line_start":48,"line_end":48,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3811},{"krate":0,"index":3812},{"krate":0,"index":3813}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\or_else.rs","byte_start":340150,"byte_end":340156,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3818}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_next.rs","byte_start":341072,"byte_end":341079,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_next.rs","byte_start":341133,"byte_end":341140,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3855}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_next.rs","byte_start":341303,"byte_end":341310,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":3858}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_next.rs","byte_start":341452,"byte_end":341459,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3861},{"krate":0,"index":3862}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_for_each.rs","byte_start":342258,"byte_end":342268,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3900}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_for_each.rs","byte_start":342564,"byte_end":342574,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3905}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_for_each.rs","byte_start":342864,"byte_end":342874,"line_start":48,"line_end":48,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3910},{"krate":0,"index":3911}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter.rs","byte_start":344285,"byte_end":344294,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3952}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter.rs","byte_start":344690,"byte_end":344699,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3957},{"krate":0,"index":11840},{"krate":0,"index":11841},{"krate":0,"index":11842},{"krate":0,"index":11843}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter.rs","byte_start":344998,"byte_end":345007,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3962}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter.rs","byte_start":345276,"byte_end":345285,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3967},{"krate":0,"index":3968},{"krate":0,"index":3969}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":347463,"byte_end":347475,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4011}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":347775,"byte_end":347787,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4016},{"krate":0,"index":11901},{"krate":0,"index":11902},{"krate":0,"index":11903},{"krate":0,"index":11904}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":347984,"byte_end":347996,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4022}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":348286,"byte_end":348298,"line_start":55,"line_end":55,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4028},{"krate":0,"index":4029},{"krate":0,"index":4030}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_flatten.rs","byte_start":350517,"byte_end":350527,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4063},{"krate":0,"index":11945},{"krate":0,"index":11946},{"krate":0,"index":11947},{"krate":0,"index":11948}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_flatten.rs","byte_start":350792,"byte_end":350802,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4066}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_flatten.rs","byte_start":351048,"byte_end":351058,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4069},{"krate":0,"index":4070}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_collect.rs","byte_start":352667,"byte_end":352677,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4111}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_collect.rs","byte_start":352850,"byte_end":352860,"line_start":29,"line_end":29,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4115}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_collect.rs","byte_start":353048,"byte_end":353058,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4119},{"krate":0,"index":4120}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_concat.rs","byte_start":354079,"byte_end":354088,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4149}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_concat.rs","byte_start":354340,"byte_end":354349,"line_start":32,"line_end":32,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4152},{"krate":0,"index":4153}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_fold.rs","byte_start":355612,"byte_end":355619,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4195}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_fold.rs","byte_start":355978,"byte_end":355985,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4201}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_fold.rs","byte_start":356322,"byte_end":356329,"line_start":52,"line_end":52,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4207}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_fold.rs","byte_start":356595,"byte_end":356602,"line_start":62,"line_end":62,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4213},{"krate":0,"index":4214}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":360506,"byte_end":360515,"line_start":82,"line_end":82,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4256}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":360816,"byte_end":360825,"line_start":95,"line_end":95,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4262},{"krate":0,"index":4263}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":362594,"byte_end":362606,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4308}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":363062,"byte_end":363074,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4313},{"krate":0,"index":12229},{"krate":0,"index":12230},{"krate":0,"index":12231},{"krate":0,"index":12232}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":363495,"byte_end":363507,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4318},{"krate":0,"index":4319},{"krate":0,"index":4320}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":365041,"byte_end":365053,"line_start":107,"line_end":107,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4325}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_take_while.rs","byte_start":366293,"byte_end":366305,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4366}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_take_while.rs","byte_start":366757,"byte_end":366769,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4371},{"krate":0,"index":12298},{"krate":0,"index":12299},{"krate":0,"index":12300},{"krate":0,"index":12301}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_take_while.rs","byte_start":367176,"byte_end":367188,"line_start":64,"line_end":64,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4376},{"krate":0,"index":4377},{"krate":0,"index":4378}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_take_while.rs","byte_start":368795,"byte_end":368807,"line_start":115,"line_end":115,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4383}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":12721178,"byte_end":12721196,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":12348},{"krate":0,"index":12475},{"krate":0,"index":12476},{"krate":0,"index":12477},{"krate":0,"index":12478}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":12721541,"byte_end":12721559,"line_start":41,"line_end":41,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":12351},{"krate":0,"index":12352}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_buffered.rs","byte_start":12723800,"byte_end":12723811,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":12402},{"krate":0,"index":12479},{"krate":0,"index":12480},{"krate":0,"index":12481},{"krate":0,"index":12482}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_buffered.rs","byte_start":12724148,"byte_end":12724159,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":12405},{"krate":0,"index":12406}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":12726340,"byte_end":12726360,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":12454}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":12726725,"byte_end":12726745,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":12459}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":12726996,"byte_end":12727016,"line_start":49,"line_end":49,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":12464}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":12727464,"byte_end":12727484,"line_start":65,"line_end":65,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":12469},{"krate":0,"index":12470}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_async_read.rs","byte_start":369951,"byte_end":369964,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_async_read.rs","byte_start":370180,"byte_end":370193,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4431}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_async_read.rs","byte_start":370438,"byte_end":370451,"line_start":50,"line_end":50,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4434}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_async_read.rs","byte_start":372319,"byte_end":372332,"line_start":105,"line_end":105,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4437},{"krate":0,"index":4438},{"krate":0,"index":4439}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_async_read.rs","byte_start":372994,"byte_end":373007,"line_start":133,"line_end":133,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4442},{"krate":0,"index":4443}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302100,"byte_end":302101,"line_start":141,"line_end":141,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375150,"byte_end":375154,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375789,"byte_end":375793,"line_start":37,"line_end":37,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4602},{"krate":0,"index":4603},{"krate":0,"index":4604}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376983,"byte_end":376989,"line_start":33,"line_end":33,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":377016,"byte_end":377022,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4639},{"krate":0,"index":4640},{"krate":0,"index":4641}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":377329,"byte_end":377335,"line_start":49,"line_end":49,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4644}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":377932,"byte_end":377942,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":377986,"byte_end":377996,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4679},{"krate":0,"index":4680},{"krate":0,"index":4681}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378310,"byte_end":378320,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4685}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\empty.rs","byte_start":380851,"byte_end":380856,"line_start":23,"line_end":23,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\empty.rs","byte_start":380888,"byte_end":380893,"line_start":25,"line_end":25,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4726}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\empty.rs","byte_start":380978,"byte_end":380983,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4729},{"krate":0,"index":4730},{"krate":0,"index":4731}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\empty.rs","byte_start":381232,"byte_end":381237,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4734}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":382176,"byte_end":382180,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4776}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":382309,"byte_end":382313,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4781}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":382918,"byte_end":382922,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4784}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\pending.rs","byte_start":383581,"byte_end":383588,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\pending.rs","byte_start":383620,"byte_end":383627,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4822}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\pending.rs","byte_start":383712,"byte_end":383719,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4825},{"krate":0,"index":4826},{"krate":0,"index":4827}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\pending.rs","byte_start":383964,"byte_end":383971,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4830}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384358,"byte_end":384364,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384395,"byte_end":384401,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4865}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":385166,"byte_end":385172,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4872},{"krate":0,"index":4873}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386631,"byte_end":386637,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4918},{"krate":0,"index":4919},{"krate":0,"index":4920},{"krate":0,"index":4921}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":388060,"byte_end":388066,"line_start":77,"line_end":77,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4925}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":388284,"byte_end":388290,"line_start":86,"line_end":86,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4929},{"krate":0,"index":4930}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":391700,"byte_end":391706,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4986}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":391972,"byte_end":391978,"line_start":83,"line_end":83,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4992}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":392258,"byte_end":392264,"line_start":97,"line_end":97,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4998},{"krate":0,"index":4999}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12730639,"byte_end":12730651,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":12739}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12730756,"byte_end":12730768,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12730799,"byte_end":12730811,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":12744}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12730934,"byte_end":12730946,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":12747}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12731127,"byte_end":12731139,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":12750},{"krate":0,"index":12751}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733754,"byte_end":12733768,"line_start":105,"line_end":105,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733794,"byte_end":12733808,"line_start":107,"line_end":107,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":12763},{"krate":0,"index":12764},{"krate":0,"index":12765},{"krate":0,"index":12766}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12735407,"byte_end":12735421,"line_start":151,"line_end":151,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":12769}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12735514,"byte_end":12735528,"line_start":157,"line_end":157,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":12772},{"krate":0,"index":12773},{"krate":0,"index":12774}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12736690,"byte_end":12736704,"line_start":192,"line_end":192,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":12777}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12736870,"byte_end":12736884,"line_start":198,"line_end":198,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":12780}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12737164,"byte_end":12737178,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":12785}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12737348,"byte_end":12737362,"line_start":217,"line_end":217,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":12788}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\abort.rs","byte_start":12763476,"byte_end":12763487,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":12890}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12764659,"byte_end":12764669,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":12910},{"krate":0,"index":12911},{"krate":0,"index":12912}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12765526,"byte_end":12765536,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12765584,"byte_end":12765591,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":12918},{"krate":0,"index":12919},{"krate":0,"index":12920}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12765855,"byte_end":12765862,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12765903,"byte_end":12765913,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":12926},{"krate":0,"index":12927},{"krate":0,"index":12928}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12766830,"byte_end":12766840,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12766888,"byte_end":12766892,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":12934},{"krate":0,"index":12935},{"krate":0,"index":12936}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12767148,"byte_end":12767152,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\task.rs","byte_start":12768641,"byte_end":12768645,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\task.rs","byte_start":12768680,"byte_end":12768684,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\task.rs","byte_start":12768716,"byte_end":12768720,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":13008}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\task.rs","byte_start":12769797,"byte_end":12769801,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":13011},{"krate":0,"index":13012}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\task.rs","byte_start":12770801,"byte_end":12770805,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":13015}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":12772255,"byte_end":12772270,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":13071},{"krate":0,"index":13072},{"krate":0,"index":13073}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":12774120,"byte_end":12774135,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":13076}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739740,"byte_end":12739756,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739797,"byte_end":12739813,"line_start":62,"line_end":62,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739842,"byte_end":12739858,"line_start":63,"line_end":63,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739883,"byte_end":12739899,"line_start":65,"line_end":65,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":13096}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12740096,"byte_end":12740112,"line_start":74,"line_end":74,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":13098}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12741831,"byte_end":12741847,"line_start":108,"line_end":108,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":13101}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12741921,"byte_end":12741937,"line_start":114,"line_end":114,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":13104},{"krate":0,"index":13105},{"krate":0,"index":13106},{"krate":0,"index":13107},{"krate":0,"index":13108},{"krate":0,"index":13109},{"krate":0,"index":13110},{"krate":0,"index":13111},{"krate":0,"index":13112},{"krate":0,"index":13113},{"krate":0,"index":13114},{"krate":0,"index":13115},{"krate":0,"index":13116}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12753568,"byte_end":12753584,"line_start":395,"line_end":395,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":13119},{"krate":0,"index":13120},{"krate":0,"index":13129}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12758849,"byte_end":12758853,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":13128}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12761191,"byte_end":12761207,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":13132}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12761354,"byte_end":12761370,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":13135}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12762810,"byte_end":12762826,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":13138}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12763070,"byte_end":12763086,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":13143}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12763208,"byte_end":12763224,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":13146}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776003,"byte_end":12776012,"line_start":31,"line_end":31,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":13200}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776157,"byte_end":12776166,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":13203},{"krate":0,"index":13204},{"krate":0,"index":13205},{"krate":0,"index":13206}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12777202,"byte_end":12777211,"line_start":69,"line_end":69,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":13209}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12777310,"byte_end":12777319,"line_start":75,"line_end":75,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":13212},{"krate":0,"index":13213}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12778126,"byte_end":12778135,"line_start":100,"line_end":100,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":13216}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12779158,"byte_end":12779167,"line_start":131,"line_end":131,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":13221}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12779312,"byte_end":12779321,"line_start":137,"line_end":137,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":13225}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":394666,"byte_end":394668,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":394723,"byte_end":394725,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":429188,"byte_end":429198,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":429635,"byte_end":429645,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5202},{"krate":0,"index":5203},{"krate":0,"index":5204},{"krate":0,"index":5205}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":430156,"byte_end":430166,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5208},{"krate":0,"index":5209},{"krate":0,"index":5210},{"krate":0,"index":5211},{"krate":0,"index":5212}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":430706,"byte_end":430716,"line_start":81,"line_end":81,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5215},{"krate":0,"index":5216},{"krate":0,"index":5217},{"krate":0,"index":5218}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":431465,"byte_end":431475,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5221},{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5224},{"krate":0,"index":5225}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":432195,"byte_end":432205,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5228},{"krate":0,"index":5229}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":432793,"byte_end":432803,"line_start":145,"line_end":145,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5232}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":432942,"byte_end":432952,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5235}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":433190,"byte_end":433200,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5238},{"krate":0,"index":5239}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":433411,"byte_end":433421,"line_start":168,"line_end":168,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5242},{"krate":0,"index":5243}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":435267,"byte_end":435276,"line_start":41,"line_end":41,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5302},{"krate":0,"index":5303},{"krate":0,"index":13367},{"krate":0,"index":13368},{"krate":0,"index":13369},{"krate":0,"index":13370},{"krate":0,"index":5304},{"krate":0,"index":5305}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":436498,"byte_end":436507,"line_start":81,"line_end":81,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5308},{"krate":0,"index":5309}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":438119,"byte_end":438128,"line_start":125,"line_end":125,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5313},{"krate":0,"index":5314}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":438981,"byte_end":438990,"line_start":149,"line_end":149,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":13371},{"krate":0,"index":13372},{"krate":0,"index":13373},{"krate":0,"index":13374}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":439068,"byte_end":439077,"line_start":153,"line_end":153,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5319}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":439393,"byte_end":439402,"line_start":162,"line_end":162,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5322}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":443350,"byte_end":443359,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5377},{"krate":0,"index":5378},{"krate":0,"index":5379},{"krate":0,"index":13416},{"krate":0,"index":13417},{"krate":0,"index":13418},{"krate":0,"index":13419},{"krate":0,"index":5380}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":444933,"byte_end":444942,"line_start":92,"line_end":92,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5383},{"krate":0,"index":5384},{"krate":0,"index":5386},{"krate":0,"index":5387}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":446365,"byte_end":446374,"line_start":135,"line_end":135,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":13420},{"krate":0,"index":13421}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":446455,"byte_end":446464,"line_start":139,"line_end":139,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":13422},{"krate":0,"index":13423}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":446545,"byte_end":446554,"line_start":143,"line_end":143,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5394}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":446913,"byte_end":446922,"line_start":153,"line_end":153,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5397}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":447859,"byte_end":447864,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5437},{"krate":0,"index":5438},{"krate":0,"index":5439},{"krate":0,"index":5440},{"krate":0,"index":5441}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":449165,"byte_end":449170,"line_start":66,"line_end":66,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5445}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":449500,"byte_end":449505,"line_start":80,"line_end":80,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5449},{"krate":0,"index":5450}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":450858,"byte_end":450863,"line_start":130,"line_end":130,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5455},{"krate":0,"index":5456}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\close.rs","byte_start":451974,"byte_end":451979,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\close.rs","byte_start":452032,"byte_end":452037,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5485}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\close.rs","byte_start":452179,"byte_end":452184,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5488},{"krate":0,"index":5489}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453967,"byte_end":453971,"line_start":54,"line_end":54,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5536},{"krate":0,"index":5537}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":455723,"byte_end":455730,"line_start":58,"line_end":58,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5581},{"krate":0,"index":5582}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457568,"byte_end":457574,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5628},{"krate":0,"index":5629},{"krate":0,"index":5630},{"krate":0,"index":5631},{"krate":0,"index":5632},{"krate":0,"index":5633}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460795,"byte_end":460801,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5636}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":461088,"byte_end":461094,"line_start":163,"line_end":163,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5639},{"krate":0,"index":5640}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":461726,"byte_end":461732,"line_start":187,"line_end":187,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5643},{"krate":0,"index":5644}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":462881,"byte_end":462887,"line_start":224,"line_end":224,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":13609},{"krate":0,"index":13610},{"krate":0,"index":13611},{"krate":0,"index":13612}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":462962,"byte_end":462968,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":13613},{"krate":0,"index":13614},{"krate":0,"index":13615},{"krate":0,"index":13616}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":463046,"byte_end":463052,"line_start":232,"line_end":232,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":13617},{"krate":0,"index":13618},{"krate":0,"index":13619},{"krate":0,"index":13620}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":463125,"byte_end":463131,"line_start":236,"line_end":236,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":13621},{"krate":0,"index":13622},{"krate":0,"index":13623},{"krate":0,"index":13624}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":464114,"byte_end":464119,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5681}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":464467,"byte_end":464472,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5683},{"krate":0,"index":5684}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":464704,"byte_end":464709,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5686}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\fill_buf.rs","byte_start":465207,"byte_end":465214,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\fill_buf.rs","byte_start":465269,"byte_end":465276,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5719}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\fill_buf.rs","byte_start":465407,"byte_end":465414,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5723},{"krate":0,"index":5724}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\flush.rs","byte_start":466984,"byte_end":466989,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\flush.rs","byte_start":467042,"byte_end":467047,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5753}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\flush.rs","byte_start":467160,"byte_end":467165,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5756},{"krate":0,"index":5757}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\lines.rs","byte_start":467968,"byte_end":467973,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5795}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\lines.rs","byte_start":468193,"byte_end":468198,"line_start":35,"line_end":35,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5798},{"krate":0,"index":5799}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read.rs","byte_start":469192,"byte_end":469196,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read.rs","byte_start":469248,"byte_end":469252,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5828}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read.rs","byte_start":469417,"byte_end":469421,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5831},{"krate":0,"index":5832}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_vectored.rs","byte_start":470109,"byte_end":470121,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_vectored.rs","byte_start":470173,"byte_end":470185,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5865}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_vectored.rs","byte_start":470364,"byte_end":470376,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5868},{"krate":0,"index":5869}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_exact.rs","byte_start":471071,"byte_end":471080,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_exact.rs","byte_start":471132,"byte_end":471141,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5904}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_exact.rs","byte_start":471306,"byte_end":471315,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5907},{"krate":0,"index":5908}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_line.rs","byte_start":472457,"byte_end":472465,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_line.rs","byte_start":472520,"byte_end":472528,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5949}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_line.rs","byte_start":473554,"byte_end":473562,"line_start":55,"line_end":55,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5955},{"krate":0,"index":5956}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_end.rs","byte_start":474317,"byte_end":474326,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_end.rs","byte_start":474378,"byte_end":474387,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5991}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_end.rs","byte_start":474677,"byte_end":474682,"line_start":36,"line_end":36,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5997}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_end.rs","byte_start":476538,"byte_end":476547,"line_start":88,"line_end":88,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6002},{"krate":0,"index":6003}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_string.rs","byte_start":477420,"byte_end":477432,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_string.rs","byte_start":477484,"byte_end":477496,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6048}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_string.rs","byte_start":478529,"byte_end":478541,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6054},{"krate":0,"index":6055}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_until.rs","byte_start":479361,"byte_end":479370,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_until.rs","byte_start":479425,"byte_end":479434,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6090}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_until.rs","byte_start":480406,"byte_end":480415,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6095},{"krate":0,"index":6096}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481639,"byte_end":481645,"line_start":37,"line_end":37,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6131},{"krate":0,"index":6132}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":482425,"byte_end":482431,"line_start":70,"line_end":70,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6134}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\seek.rs","byte_start":482945,"byte_end":482949,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\seek.rs","byte_start":483001,"byte_end":483005,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6171}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\seek.rs","byte_start":483162,"byte_end":483166,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6174},{"krate":0,"index":6175}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":484295,"byte_end":484299,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6207},{"krate":0,"index":6208},{"krate":0,"index":6210},{"krate":0,"index":6211}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":485017,"byte_end":485021,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6213}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":486051,"byte_end":486059,"line_start":37,"line_end":37,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6266}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":486557,"byte_end":486566,"line_start":48,"line_end":48,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6270}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":486958,"byte_end":486966,"line_start":57,"line_end":57,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6273},{"krate":0,"index":6275}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":487431,"byte_end":487440,"line_start":71,"line_end":71,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6279},{"krate":0,"index":6281},{"krate":0,"index":6283},{"krate":0,"index":6285}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":488417,"byte_end":488429,"line_start":97,"line_end":97,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6294}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":488619,"byte_end":488631,"line_start":105,"line_end":105,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6297}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":488865,"byte_end":488877,"line_start":112,"line_end":112,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":489476,"byte_end":489480,"line_start":22,"line_end":22,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6343},{"krate":0,"index":6344},{"krate":0,"index":6345},{"krate":0,"index":13820},{"krate":0,"index":13821},{"krate":0,"index":13822},{"krate":0,"index":13823}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":491407,"byte_end":491411,"line_start":87,"line_end":87,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6348}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":492055,"byte_end":492059,"line_start":111,"line_end":111,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6351},{"krate":0,"index":6352}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493906,"byte_end":493912,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6369},{"krate":0,"index":6370},{"krate":0,"index":6371},{"krate":0,"index":6372},{"krate":0,"index":6373},{"krate":0,"index":6374},{"krate":0,"index":6375}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":496015,"byte_end":496021,"line_start":97,"line_end":97,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6379}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":496168,"byte_end":496174,"line_start":103,"line_end":103,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6382}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write.rs","byte_start":496695,"byte_end":496700,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write.rs","byte_start":496753,"byte_end":496758,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6411}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write.rs","byte_start":496920,"byte_end":496925,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6414},{"krate":0,"index":6415}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_vectored.rs","byte_start":497609,"byte_end":497622,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_vectored.rs","byte_start":497675,"byte_end":497688,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6448}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_vectored.rs","byte_start":497861,"byte_end":497874,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6451},{"krate":0,"index":6452}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_all.rs","byte_start":498566,"byte_end":498574,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_all.rs","byte_start":498627,"byte_end":498635,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6487}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_all.rs","byte_start":498797,"byte_end":498805,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6490},{"krate":0,"index":6491}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413074,"byte_end":413075,"line_start":403,"line_end":403,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":419502,"byte_end":419503,"line_start":590,"line_end":590,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420386,"byte_end":420387,"line_start":617,"line_end":617,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427877,"byte_end":427878,"line_start":820,"line_end":820,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12780255,"byte_end":12780260,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":13919}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12780593,"byte_end":12780598,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":13922}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12780691,"byte_end":12780696,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":13925}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12780829,"byte_end":12780835,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":13933},{"krate":0,"index":13934}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781369,"byte_end":12781374,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":13939},{"krate":0,"index":13940}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781945,"byte_end":12781950,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":13943},{"krate":0,"index":13944},{"krate":0,"index":13945},{"krate":0,"index":13946},{"krate":0,"index":13947}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12785099,"byte_end":12785114,"line_start":189,"line_end":189,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":13956}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12785624,"byte_end":12785639,"line_start":205,"line_end":205,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":13959}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12785756,"byte_end":12785771,"line_start":211,"line_end":211,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":13963},{"krate":0,"index":13964}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787000,"byte_end":12787015,"line_start":247,"line_end":247,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":13967}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787617,"byte_end":12787627,"line_start":266,"line_end":266,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":13975}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12788639,"byte_end":12788649,"line_start":296,"line_end":296,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":13980}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12788894,"byte_end":12788904,"line_start":305,"line_end":305,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":13983}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789002,"byte_end":12789012,"line_start":311,"line_end":311,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":13986},{"krate":0,"index":13987}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789153,"byte_end":12789163,"line_start":318,"line_end":318,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":13990}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789614,"byte_end":12789630,"line_start":332,"line_end":332,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":14002}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12790760,"byte_end":12790776,"line_start":363,"line_end":363,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":14008}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12791041,"byte_end":12791057,"line_start":372,"line_end":372,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":14012}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12791169,"byte_end":12791185,"line_start":378,"line_end":378,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":14016},{"krate":0,"index":14017}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12791328,"byte_end":12791344,"line_start":385,"line_end":385,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":14021}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12791621,"byte_end":12791626,"line_start":393,"line_end":393,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12791672,"byte_end":12791677,"line_start":394,"line_end":394,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12791844,"byte_end":12791859,"line_start":398,"line_end":398,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12791963,"byte_end":12791978,"line_start":400,"line_end":400,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12792182,"byte_end":12792192,"line_start":404,"line_end":404,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12792242,"byte_end":12792252,"line_start":405,"line_end":405,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12792320,"byte_end":12792336,"line_start":406,"line_end":406,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12792407,"byte_end":12792423,"line_start":407,"line_end":407,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12794427,"byte_end":12794432,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12794469,"byte_end":12794474,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12794490,"byte_end":12794496,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":14098},{"krate":0,"index":14099},{"krate":0,"index":14101},{"krate":0,"index":14102}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12800167,"byte_end":12800172,"line_start":189,"line_end":189,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":14105}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12800294,"byte_end":12800299,"line_start":195,"line_end":195,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":14108}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12800627,"byte_end":12800639,"line_start":206,"line_end":206,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":14116}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12800829,"byte_end":12800841,"line_start":214,"line_end":214,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":14119}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12801062,"byte_end":12801074,"line_start":221,"line_end":221,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12801456,"byte_end":12801467,"line_start":234,"line_end":234,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":14124},{"krate":0,"index":14125}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12801630,"byte_end":12801641,"line_start":241,"line_end":241,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":14128}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12801779,"byte_end":12801790,"line_start":247,"line_end":247,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":14131}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12802142,"byte_end":12802153,"line_start":256,"line_end":256,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":14134}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":500430,"byte_end":500431,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6587},{"krate":0,"index":6588}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":500665,"byte_end":500666,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6596}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":500935,"byte_end":500936,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6604}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":501951,"byte_end":501955,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6612}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":502049,"byte_end":502053,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6616},{"krate":0,"index":6617}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":502312,"byte_end":502319,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6622},{"krate":0,"index":6623}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":502542,"byte_end":502549,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6628}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":502740,"byte_end":502747,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6633}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":503052,"byte_end":503065,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6639},{"krate":0,"index":6640}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":503482,"byte_end":503491,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6645},{"krate":0,"index":6646}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":503773,"byte_end":503782,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6651}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":504042,"byte_end":504051,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6656}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":504371,"byte_end":504378,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6663},{"krate":0,"index":6664}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":504597,"byte_end":504604,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6670}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":504782,"byte_end":504789,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6676}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":505090,"byte_end":505098,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6684},{"krate":0,"index":6685}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":505321,"byte_end":505329,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6691}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":505511,"byte_end":505519,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6697}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":505829,"byte_end":505840,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6706},{"krate":0,"index":6707}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":506077,"byte_end":506088,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6713}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":506303,"byte_end":506314,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6719}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":506659,"byte_end":506671,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":6727},{"krate":0,"index":6728}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":506909,"byte_end":506921,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6734}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":507137,"byte_end":507149,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6740}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":507746,"byte_end":507760,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6753},{"krate":0,"index":6754}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":507981,"byte_end":507995,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6760}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":508194,"byte_end":508208,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6766}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":508512,"byte_end":508518,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6776}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":508611,"byte_end":508617,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6780},{"krate":0,"index":6781}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\unfold_state.rs","byte_start":509217,"byte_end":509228,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6792},{"krate":0,"index":6793}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":11585,"byte_end":11591,"line_start":310,"line_end":310,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":156}},{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":11686,"byte_end":11692,"line_start":314,"line_end":314,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1876}},{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\mod.rs","byte_start":167370,"byte_end":167387,"line_start":101,"line_end":101,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":12793}},{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":11953,"byte_end":11957,"line_start":325,"line_end":325,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":5023}},{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":11968,"byte_end":11973,"line_start":327,"line_end":327,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5106}},{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":12171,"byte_end":12173,"line_start":336,"line_end":336,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":5108}},{"kind":"Mod","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lib.rs","byte_start":12412,"byte_end":12416,"line_start":346,"line_end":346,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6567}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\poll.rs","byte_start":14859,"byte_end":14867,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":45},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\async_await\\pending.rs","byte_start":16034,"byte_end":16045,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\flatten.rs","byte_start":58736,"byte_end":58743,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":6818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\flatten.rs","byte_start":58873,"byte_end":58880,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":6818},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\flatten.rs","byte_start":59111,"byte_end":59118,"line_start":38,"line_end":38,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":6818},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\flatten.rs","byte_start":59900,"byte_end":59907,"line_start":62,"line_end":62,"column_start":27,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":6818},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\flatten.rs","byte_start":60138,"byte_end":60145,"line_start":74,"line_end":74,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":6818},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63217,"byte_end":63221,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":6866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":63328,"byte_end":63332,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":6866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":65061,"byte_end":65065,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":6866},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\fuse.rs","byte_start":65178,"byte_end":65182,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":6866},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\map.rs","byte_start":66161,"byte_end":66164,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":6901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\map.rs","byte_start":66333,"byte_end":66336,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":6901},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\map.rs","byte_start":66598,"byte_end":66601,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":6901},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\catch_unwind.rs","byte_start":67807,"byte_end":67818,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":7454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\catch_unwind.rs","byte_start":67956,"byte_end":67967,"line_start":25,"line_end":25,"column_start":22,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":7454},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":69291,"byte_end":69297,"line_start":34,"line_end":34,"column_start":29,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":476},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":69340,"byte_end":69346,"line_start":36,"line_end":36,"column_start":34,"column_end":40},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":476},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":69604,"byte_end":69609,"line_start":45,"line_end":45,"column_start":34,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":480},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":69763,"byte_end":69773,"line_start":51,"line_end":51,"column_start":34,"column_end":44},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":70005,"byte_end":70010,"line_start":62,"line_end":62,"column_start":27,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":480},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":70107,"byte_end":70112,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":480},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":70356,"byte_end":70362,"line_start":83,"line_end":83,"column_start":19,"column_end":25},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":70819,"byte_end":70825,"line_start":100,"line_end":100,"column_start":11,"column_end":17},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":72891,"byte_end":72896,"line_start":157,"line_end":157,"column_start":11,"column_end":16},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":74592,"byte_end":74598,"line_start":206,"line_end":206,"column_start":27,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":476},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":74750,"byte_end":74756,"line_start":216,"line_end":216,"column_start":22,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":476},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":76384,"byte_end":76389,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":543},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":78196,"byte_end":78202,"line_start":328,"line_end":328,"column_start":21,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":476},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":78394,"byte_end":78400,"line_start":340,"line_end":340,"column_start":20,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":476},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":78828,"byte_end":78836,"line_start":357,"line_end":357,"column_start":18,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":484},"to":{"krate":17,"index":327}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\shared.rs","byte_start":79195,"byte_end":79205,"line_start":370,"line_end":370,"column_start":19,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":41887,"byte_end":41888,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":571},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\future\\mod.rs","byte_start":42019,"byte_end":42025,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":12193},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\into_future.rs","byte_start":101664,"byte_end":101674,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":7490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\into_future.rs","byte_start":101825,"byte_end":101835,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":7490},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\into_future.rs","byte_start":101946,"byte_end":101956,"line_start":27,"line_end":27,"column_start":33,"column_end":43},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":7490},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten.rs","byte_start":102688,"byte_end":102698,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":7525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten.rs","byte_start":102828,"byte_end":102838,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":7525},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten.rs","byte_start":103085,"byte_end":103095,"line_start":38,"line_end":38,"column_start":22,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten.rs","byte_start":104117,"byte_end":104127,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":7525},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten.rs","byte_start":104374,"byte_end":104384,"line_start":79,"line_end":79,"column_start":22,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":7525},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten_err.rs","byte_start":107887,"byte_end":107900,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":7572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten_err.rs","byte_start":108030,"byte_end":108043,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":7572},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\try_flatten_err.rs","byte_start":108290,"byte_end":108303,"line_start":35,"line_end":35,"column_start":22,"column_end":35},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":7572},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":84210,"byte_end":84213,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":850},"to":{"krate":0,"index":851}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_future\\mod.rs","byte_start":84296,"byte_end":84305,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":14,"index":44},"to":{"krate":0,"index":851}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":109680,"byte_end":109684,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":8435},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":110280,"byte_end":110284,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":8435},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\lazy.rs","byte_start":110416,"byte_end":110420,"line_start":47,"line_end":47,"column_start":23,"column_end":27},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":8435},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111023,"byte_end":111030,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":8441},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111604,"byte_end":111611,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":8441},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111756,"byte_end":111763,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":8441},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\pending.rs","byte_start":111790,"byte_end":111797,"line_start":53,"line_end":53,"column_start":19,"column_end":26},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":8441},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":112551,"byte_end":112560,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":8447},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":113163,"byte_end":113172,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":8447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":114270,"byte_end":114279,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":8447},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\maybe_done.rs","byte_start":114480,"byte_end":114489,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":8447},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":115809,"byte_end":115821,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":8460},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":116047,"byte_end":116059,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":8460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":117172,"byte_end":117184,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":8460},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_maybe_done.rs","byte_start":117388,"byte_end":117400,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":8460},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\option.rs","byte_start":119122,"byte_end":119134,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":8478},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\option.rs","byte_start":119471,"byte_end":119483,"line_start":48,"line_end":48,"column_start":38,"column_end":50},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":8478},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\option.rs","byte_start":119670,"byte_end":119682,"line_start":57,"line_end":57,"column_start":29,"column_end":41},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":8478},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120120,"byte_end":120126,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1167},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120819,"byte_end":120825,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1167},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\poll_fn.rs","byte_start":120967,"byte_end":120973,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1167},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":121476,"byte_end":121481,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":8512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":121660,"byte_end":121665,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":8512},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":121697,"byte_end":121702,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":8512},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\ready.rs","byte_start":121799,"byte_end":121804,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":8512},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":129530,"byte_end":129537,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":131354,"byte_end":131361,"line_start":91,"line_end":91,"column_start":20,"column_end":27},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\join_all.rs","byte_start":132058,"byte_end":132065,"line_start":118,"line_end":118,"column_start":37,"column_end":44},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":7223}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":132561,"byte_end":132567,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":8866},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":134987,"byte_end":134993,"line_start":90,"line_end":90,"column_start":23,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":8866},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select.rs","byte_start":135696,"byte_end":135702,"line_start":112,"line_end":112,"column_start":28,"column_end":34},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":8866},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":136265,"byte_end":136274,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":8874},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":137299,"byte_end":137308,"line_start":45,"line_end":45,"column_start":11,"column_end":20},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":8874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":137491,"byte_end":137500,"line_start":52,"line_end":52,"column_start":38,"column_end":47},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":8874},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_all.rs","byte_start":138206,"byte_end":138215,"line_start":73,"line_end":73,"column_start":49,"column_end":58},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":8874},"to":{"krate":2,"index":7223}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":146840,"byte_end":146850,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1618},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":148704,"byte_end":148714,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1618},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_join_all.rs","byte_start":149887,"byte_end":149897,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1618},"to":{"krate":2,"index":7223}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":150379,"byte_end":150388,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":9202},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\try_select.rs","byte_start":152222,"byte_end":152231,"line_start":59,"line_end":59,"column_start":37,"column_end":46},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":9202},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":153610,"byte_end":153618,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":9210},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":154691,"byte_end":154699,"line_start":43,"line_end":43,"column_start":41,"column_end":49},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":9210},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\select_ok.rs","byte_start":156143,"byte_end":156151,"line_start":80,"line_end":80,"column_start":52,"column_end":60},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":9210},"to":{"krate":2,"index":7223}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":156751,"byte_end":156757,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":9216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":157096,"byte_end":157102,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":9216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":157487,"byte_end":157493,"line_start":41,"line_end":41,"column_start":15,"column_end":21},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":9216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":157874,"byte_end":157880,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":9216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":158121,"byte_end":158127,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":9216},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":158466,"byte_end":158472,"line_start":78,"line_end":78,"column_start":28,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":9216},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":158748,"byte_end":158754,"line_start":91,"line_end":91,"column_start":23,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":9216},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":159289,"byte_end":159295,"line_start":113,"line_end":113,"column_start":28,"column_end":34},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":9216},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":161041,"byte_end":161047,"line_start":176,"line_end":176,"column_start":30,"column_end":36},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":9216},"to":{"krate":20,"index":39}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":162102,"byte_end":162108,"line_start":212,"line_end":212,"column_start":31,"column_end":37},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":9216},"to":{"krate":20,"index":42}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":163415,"byte_end":163421,"line_start":254,"line_end":254,"column_start":30,"column_end":36},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":9216},"to":{"krate":20,"index":47}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\either.rs","byte_start":163851,"byte_end":163857,"line_start":271,"line_end":271,"column_start":33,"column_end":39},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":9216},"to":{"krate":20,"index":49}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12705434,"byte_end":12705443,"line_start":22,"line_end":22,"column_start":11,"column_end":20},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":14710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12706790,"byte_end":12706801,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":9305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12708670,"byte_end":12708677,"line_start":128,"line_end":128,"column_start":23,"column_end":30},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":9316},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12708860,"byte_end":12708867,"line_start":135,"line_end":135,"column_start":28,"column_end":35},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":9316},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12708893,"byte_end":12708902,"line_start":137,"line_end":137,"column_start":22,"column_end":31},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":14710},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\future\\abortable.rs","byte_start":12709876,"byte_end":12709887,"line_start":166,"line_end":166,"column_start":6,"column_end":17},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":9305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\chain.rs","byte_start":219118,"byte_end":219123,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":9336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\chain.rs","byte_start":219380,"byte_end":219385,"line_start":32,"line_end":32,"column_start":32,"column_end":37},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":9336},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\chain.rs","byte_start":219590,"byte_end":219595,"line_start":41,"line_end":41,"column_start":27,"column_end":32},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":9336},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\collect.rs","byte_start":221208,"byte_end":221215,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":9385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\collect.rs","byte_start":221513,"byte_end":221520,"line_start":33,"line_end":33,"column_start":29,"column_end":36},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":9385},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\collect.rs","byte_start":221696,"byte_end":221703,"line_start":42,"line_end":42,"column_start":24,"column_end":31},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":9385},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\unzip.rs","byte_start":222727,"byte_end":222732,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":9436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\unzip.rs","byte_start":223206,"byte_end":223211,"line_start":39,"line_end":39,"column_start":46,"column_end":51},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":9436},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\unzip.rs","byte_start":223461,"byte_end":223466,"line_start":49,"line_end":49,"column_start":41,"column_end":46},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":9436},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\concat.rs","byte_start":224592,"byte_end":224598,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":9494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\concat.rs","byte_start":224865,"byte_end":224871,"line_start":32,"line_end":32,"column_start":21,"column_end":27},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":9494},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\concat.rs","byte_start":225646,"byte_end":225652,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":9494},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\cycle.rs","byte_start":226329,"byte_end":226334,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":9534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\cycle.rs","byte_start":226523,"byte_end":226528,"line_start":31,"line_end":31,"column_start":21,"column_end":26},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":9534},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\cycle.rs","byte_start":227277,"byte_end":227282,"line_start":59,"line_end":59,"column_start":26,"column_end":31},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":9534},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\enumerate.rs","byte_start":228030,"byte_end":228039,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":9574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\enumerate.rs","byte_start":228258,"byte_end":228267,"line_start":31,"line_end":31,"column_start":48,"column_end":57},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":9574},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\enumerate.rs","byte_start":228385,"byte_end":228394,"line_start":37,"line_end":37,"column_start":29,"column_end":38},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":9574},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter.rs","byte_start":229858,"byte_end":229864,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":9613},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter.rs","byte_start":230337,"byte_end":230343,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":9613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter.rs","byte_start":230721,"byte_end":230727,"line_start":60,"line_end":60,"column_start":34,"column_end":40},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":9613},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter.rs","byte_start":231076,"byte_end":231082,"line_start":71,"line_end":71,"column_start":29,"column_end":35},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":9613},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter_map.rs","byte_start":233299,"byte_end":233308,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":9678},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter_map.rs","byte_start":233605,"byte_end":233614,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":9678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter_map.rs","byte_start":233893,"byte_end":233902,"line_start":49,"line_end":49,"column_start":37,"column_end":46},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":9678},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\filter_map.rs","byte_start":234179,"byte_end":234188,"line_start":59,"line_end":59,"column_start":32,"column_end":41},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":9678},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\flatten.rs","byte_start":236333,"byte_end":236340,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":9746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\flatten.rs","byte_start":236509,"byte_end":236516,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":9746},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\flatten.rs","byte_start":236708,"byte_end":236715,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":9746},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fold.rs","byte_start":238229,"byte_end":238233,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":9847},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fold.rs","byte_start":238589,"byte_end":238593,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":9847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fold.rs","byte_start":238911,"byte_end":238915,"line_start":52,"line_end":52,"column_start":37,"column_end":41},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":9847},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fold.rs","byte_start":239162,"byte_end":239166,"line_start":62,"line_end":62,"column_start":32,"column_end":36},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":9847},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each.rs","byte_start":240767,"byte_end":240774,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":9916},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each.rs","byte_start":241067,"byte_end":241074,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":9916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each.rs","byte_start":241350,"byte_end":241357,"line_start":48,"line_end":48,"column_start":34,"column_end":41},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":9916},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each.rs","byte_start":241608,"byte_end":241615,"line_start":58,"line_end":58,"column_start":29,"column_end":36},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":9916},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fuse.rs","byte_start":242728,"byte_end":242732,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":9978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fuse.rs","byte_start":243229,"byte_end":243233,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":9978},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\fuse.rs","byte_start":243331,"byte_end":243335,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":9978},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":244560,"byte_end":244572,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":10017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":247062,"byte_end":247074,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":10017},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\into_future.rs","byte_start":247194,"byte_end":247206,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":10017},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\map.rs","byte_start":248114,"byte_end":248117,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":10092},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\map.rs","byte_start":248332,"byte_end":248335,"line_start":33,"line_end":33,"column_start":13,"column_end":16},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":10092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\map.rs","byte_start":248504,"byte_end":248507,"line_start":41,"line_end":41,"column_start":29,"column_end":32},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":10092},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\map.rs","byte_start":248681,"byte_end":248684,"line_start":50,"line_end":50,"column_start":24,"column_end":27},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":10092},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\next.rs","byte_start":249831,"byte_end":249835,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":10224},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\next.rs","byte_start":249886,"byte_end":249890,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":10224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\next.rs","byte_start":250041,"byte_end":250045,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":10224},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\next.rs","byte_start":250184,"byte_end":250188,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":10224},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\select_next_some.rs","byte_start":250862,"byte_end":250876,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":10232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\select_next_some.rs","byte_start":251027,"byte_end":251041,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":10232},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\select_next_some.rs","byte_start":251185,"byte_end":251199,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":10232},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":252510,"byte_end":252518,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":10245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":256695,"byte_end":256703,"line_start":154,"line_end":154,"column_start":34,"column_end":42},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":10245},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":256845,"byte_end":256853,"line_start":160,"line_end":160,"column_start":28,"column_end":36},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":10245},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":258012,"byte_end":258016,"line_start":202,"line_end":202,"column_start":25,"column_end":29},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":10284},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":258261,"byte_end":258265,"line_start":212,"line_end":212,"column_start":34,"column_end":38},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":10284},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":258376,"byte_end":258380,"line_start":218,"line_end":218,"column_start":25,"column_end":29},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":10284},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":259085,"byte_end":259091,"line_start":244,"line_end":244,"column_start":28,"column_end":34},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":10325},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":259469,"byte_end":259475,"line_start":257,"line_end":257,"column_start":29,"column_end":35},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":10325},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":259744,"byte_end":259750,"line_start":268,"line_end":268,"column_start":24,"column_end":30},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":10325},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":261011,"byte_end":261019,"line_start":306,"line_end":306,"column_start":28,"column_end":36},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":10374},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":261339,"byte_end":261347,"line_start":319,"line_end":319,"column_start":29,"column_end":37},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":10374},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":261531,"byte_end":261539,"line_start":330,"line_end":330,"column_start":24,"column_end":32},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":10374},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\peek.rs","byte_start":261910,"byte_end":261920,"line_start":348,"line_end":348,"column_start":34,"column_end":44},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2816},"to":{"krate":0,"index":6579}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\skip.rs","byte_start":262585,"byte_end":262589,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":10428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\skip.rs","byte_start":262813,"byte_end":262817,"line_start":31,"line_end":31,"column_start":39,"column_end":43},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":10428},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\skip.rs","byte_start":262935,"byte_end":262939,"line_start":37,"line_end":37,"column_start":29,"column_end":33},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":10428},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\skip_while.rs","byte_start":264559,"byte_end":264568,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":10467},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\skip_while.rs","byte_start":265020,"byte_end":265029,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":10467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\skip_while.rs","byte_start":265436,"byte_end":265445,"line_start":59,"line_end":59,"column_start":34,"column_end":43},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":10467},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\skip_while.rs","byte_start":265705,"byte_end":265714,"line_start":69,"line_end":69,"column_start":29,"column_end":38},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":10467},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take.rs","byte_start":268061,"byte_end":268065,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":10541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take.rs","byte_start":268271,"byte_end":268275,"line_start":32,"line_end":32,"column_start":21,"column_end":25},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":10541},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take.rs","byte_start":269269,"byte_end":269273,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":10541},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_while.rs","byte_start":270296,"byte_end":270305,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":10580},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_while.rs","byte_start":270753,"byte_end":270762,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":10580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_while.rs","byte_start":271162,"byte_end":271171,"line_start":59,"line_end":59,"column_start":29,"column_end":38},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":10580},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_while.rs","byte_start":272725,"byte_end":272734,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":10580},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":274130,"byte_end":274139,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":10649},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":274466,"byte_end":274475,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":10649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":276649,"byte_end":276658,"line_start":119,"line_end":119,"column_start":26,"column_end":35},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":10649},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\take_until.rs","byte_start":277690,"byte_end":277699,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":10649},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\then.rs","byte_start":278641,"byte_end":278645,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":10706},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\then.rs","byte_start":278935,"byte_end":278939,"line_start":36,"line_end":36,"column_start":18,"column_end":22},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":10706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\then.rs","byte_start":279236,"byte_end":279240,"line_start":51,"line_end":51,"column_start":34,"column_end":38},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":10706},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\then.rs","byte_start":279478,"byte_end":279482,"line_start":61,"line_end":61,"column_start":29,"column_end":33},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":10706},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":281399,"byte_end":281402,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":10774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":283045,"byte_end":283048,"line_start":66,"line_end":66,"column_start":32,"column_end":35},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":10774},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\zip.rs","byte_start":283239,"byte_end":283242,"line_start":74,"line_end":74,"column_start":27,"column_end":30},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":10774},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\chunks.rs","byte_start":285954,"byte_end":285960,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":10829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\chunks.rs","byte_start":286463,"byte_end":286469,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":10829},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\chunks.rs","byte_start":288107,"byte_end":288113,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":10829},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\ready_chunks.rs","byte_start":289085,"byte_end":289096,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":10877},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\ready_chunks.rs","byte_start":289443,"byte_end":289454,"line_start":37,"line_end":37,"column_start":29,"column_end":40},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":10877},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\ready_chunks.rs","byte_start":291562,"byte_end":291573,"line_start":96,"line_end":96,"column_start":39,"column_end":50},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":10877},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\scan.rs","byte_start":292571,"byte_end":292575,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":10920},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\scan.rs","byte_start":293061,"byte_end":293065,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":10920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\scan.rs","byte_start":293229,"byte_end":293233,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":10920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\scan.rs","byte_start":293685,"byte_end":293689,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":10920},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\scan.rs","byte_start":294916,"byte_end":294920,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":10920},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\buffer_unordered.rs","byte_start":12711057,"byte_end":12711072,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":14664},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\buffer_unordered.rs","byte_start":12711404,"byte_end":12711419,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":14664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\buffer_unordered.rs","byte_start":12711806,"byte_end":12711821,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":14664},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\buffer_unordered.rs","byte_start":12713298,"byte_end":12713313,"line_start":107,"line_end":107,"column_start":26,"column_end":41},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":14664},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\buffered.rs","byte_start":12714423,"byte_end":12714431,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":14623},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\buffered.rs","byte_start":12714778,"byte_end":12714786,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":14623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\buffered.rs","byte_start":12715111,"byte_end":12715119,"line_start":57,"line_end":57,"column_start":21,"column_end":29},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":14623},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":12717478,"byte_end":12717495,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":14562},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":12717841,"byte_end":12717858,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":14562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":12718291,"byte_end":12718308,"line_start":53,"line_end":53,"column_start":34,"column_end":51},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":14562},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":12718550,"byte_end":12718567,"line_start":63,"line_end":63,"column_start":29,"column_end":46},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":14562},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\catch_unwind.rs","byte_start":295941,"byte_end":295952,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":11168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\catch_unwind.rs","byte_start":296144,"byte_end":296155,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":11168},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\catch_unwind.rs","byte_start":297063,"byte_end":297074,"line_start":62,"line_end":62,"column_start":52,"column_end":63},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":11168},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174262,"byte_end":174263,"line_start":208,"line_end":208,"column_start":31,"column_end":32},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3408},"to":{"krate":0,"index":3409}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\stream\\mod.rs","byte_start":174406,"byte_end":174412,"line_start":212,"line_end":212,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":14,"index":96},"to":{"krate":0,"index":3409}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\and_then.rs","byte_start":334049,"byte_end":334056,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":11207},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\and_then.rs","byte_start":334349,"byte_end":334356,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":11207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\and_then.rs","byte_start":334649,"byte_end":334656,"line_start":48,"line_end":48,"column_start":29,"column_end":36},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":11207},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\and_then.rs","byte_start":335834,"byte_end":335841,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":11207},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_stream.rs","byte_start":336771,"byte_end":336781,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":11480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_stream.rs","byte_start":336974,"byte_end":336984,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":11480},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_stream.rs","byte_start":337105,"byte_end":337115,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":11480},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\or_else.rs","byte_start":338237,"byte_end":338243,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":11653},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\or_else.rs","byte_start":338535,"byte_end":338541,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":11653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\or_else.rs","byte_start":338831,"byte_end":338837,"line_start":48,"line_end":48,"column_start":29,"column_end":35},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":11653},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\or_else.rs","byte_start":340150,"byte_end":340156,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":11653},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_next.rs","byte_start":341072,"byte_end":341079,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":11714},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_next.rs","byte_start":341133,"byte_end":341140,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":11714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_next.rs","byte_start":341303,"byte_end":341310,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":11714},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_next.rs","byte_start":341452,"byte_end":341459,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":11714},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_for_each.rs","byte_start":342258,"byte_end":342268,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":11722},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_for_each.rs","byte_start":342564,"byte_end":342574,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":11722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_for_each.rs","byte_start":342864,"byte_end":342874,"line_start":48,"line_end":48,"column_start":29,"column_end":39},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":11722},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter.rs","byte_start":344285,"byte_end":344294,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":11779},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter.rs","byte_start":344690,"byte_end":344699,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":11779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter.rs","byte_start":344998,"byte_end":345007,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":11779},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter.rs","byte_start":345276,"byte_end":345285,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":11779},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":347463,"byte_end":347475,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":11844},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":347775,"byte_end":347787,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":11844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":347984,"byte_end":347996,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":11844},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":348286,"byte_end":348298,"line_start":55,"line_end":55,"column_start":32,"column_end":44},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":11844},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_flatten.rs","byte_start":350517,"byte_end":350527,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":11910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_flatten.rs","byte_start":350792,"byte_end":350802,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":11910},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_flatten.rs","byte_start":351048,"byte_end":351058,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":11910},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_collect.rs","byte_start":352667,"byte_end":352677,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":11956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_collect.rs","byte_start":352850,"byte_end":352860,"line_start":29,"line_end":29,"column_start":29,"column_end":39},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":11956},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_collect.rs","byte_start":353048,"byte_end":353058,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":11956},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_concat.rs","byte_start":354079,"byte_end":354088,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":12003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_concat.rs","byte_start":354340,"byte_end":354349,"line_start":32,"line_end":32,"column_start":21,"column_end":30},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":12003},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_fold.rs","byte_start":355612,"byte_end":355619,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":12038},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_fold.rs","byte_start":355978,"byte_end":355985,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":12038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_fold.rs","byte_start":356322,"byte_end":356329,"line_start":52,"line_end":52,"column_start":37,"column_end":44},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":12038},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_fold.rs","byte_start":356595,"byte_end":356602,"line_start":62,"line_end":62,"column_start":32,"column_end":39},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":12038},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":360506,"byte_end":360515,"line_start":82,"line_end":82,"column_start":32,"column_end":41},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":12107},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_unfold.rs","byte_start":360816,"byte_end":360825,"line_start":95,"line_end":95,"column_start":34,"column_end":43},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":12107},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":362594,"byte_end":362606,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":12164},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":363062,"byte_end":363074,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":12164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":363495,"byte_end":363507,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":12164},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":365041,"byte_end":365053,"line_start":107,"line_end":107,"column_start":34,"column_end":46},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":12164},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_take_while.rs","byte_start":366293,"byte_end":366305,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":12233},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_take_while.rs","byte_start":366757,"byte_end":366769,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":12233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_take_while.rs","byte_start":367176,"byte_end":367188,"line_start":64,"line_end":64,"column_start":29,"column_end":41},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":12233},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_take_while.rs","byte_start":368795,"byte_end":368807,"line_start":115,"line_end":115,"column_start":34,"column_end":46},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":12233},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":12721178,"byte_end":12721196,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":14523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":12721541,"byte_end":12721559,"line_start":41,"line_end":41,"column_start":21,"column_end":39},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":14523},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_buffered.rs","byte_start":12723800,"byte_end":12723811,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":14479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_buffered.rs","byte_start":12724148,"byte_end":12724159,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":14479},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":12726340,"byte_end":12726360,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":14413},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":12726725,"byte_end":12726745,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":14413},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":12726996,"byte_end":12727016,"line_start":49,"line_end":49,"column_start":18,"column_end":38},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":14413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":12727464,"byte_end":12727484,"line_start":65,"line_end":65,"column_start":29,"column_end":49},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":14413},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_async_read.rs","byte_start":369951,"byte_end":369964,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":12483},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_async_read.rs","byte_start":370180,"byte_end":370193,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":12483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_async_read.rs","byte_start":370438,"byte_end":370451,"line_start":50,"line_end":50,"column_start":24,"column_end":37},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":12483},"to":{"krate":20,"index":39}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_async_read.rs","byte_start":372319,"byte_end":372332,"line_start":105,"line_end":105,"column_start":25,"column_end":38},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":12483},"to":{"krate":20,"index":42}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\into_async_read.rs","byte_start":372994,"byte_end":373007,"line_start":133,"line_end":133,"column_start":27,"column_end":40},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":12483},"to":{"krate":20,"index":49}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302100,"byte_end":302101,"line_start":141,"line_end":141,"column_start":46,"column_end":47},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4448},"to":{"krate":0,"index":4449}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\try_stream\\mod.rs","byte_start":302182,"byte_end":302191,"line_start":144,"line_end":144,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":14,"index":127},"to":{"krate":0,"index":4449}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375150,"byte_end":375154,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":12502},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\iter.rs","byte_start":375789,"byte_end":375793,"line_start":37,"line_end":37,"column_start":20,"column_end":24},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":12502},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":376983,"byte_end":376989,"line_start":33,"line_end":33,"column_start":19,"column_end":25},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":12511},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":377016,"byte_end":377022,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":12511},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat.rs","byte_start":377329,"byte_end":377335,"line_start":49,"line_end":49,"column_start":25,"column_end":31},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":12511},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":377932,"byte_end":377942,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":12520},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":377986,"byte_end":377996,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":12520},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\repeat_with.rs","byte_start":378310,"byte_end":378320,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":12520},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\empty.rs","byte_start":380851,"byte_end":380856,"line_start":23,"line_end":23,"column_start":19,"column_end":24},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":12529},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\empty.rs","byte_start":380888,"byte_end":380893,"line_start":25,"line_end":25,"column_start":25,"column_end":30},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":12529},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\empty.rs","byte_start":380978,"byte_end":380983,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":12529},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\empty.rs","byte_start":381232,"byte_end":381237,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":12529},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":382176,"byte_end":382180,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":12540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":382309,"byte_end":382313,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":12540},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\once.rs","byte_start":382918,"byte_end":382922,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":12540},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\pending.rs","byte_start":383581,"byte_end":383588,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":12571},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\pending.rs","byte_start":383620,"byte_end":383627,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":12571},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\pending.rs","byte_start":383712,"byte_end":383719,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":12571},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\pending.rs","byte_start":383964,"byte_end":383971,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":12571},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384358,"byte_end":384364,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4858},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":384395,"byte_end":384401,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4858},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\poll_fn.rs","byte_start":385166,"byte_end":385172,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4858},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":386631,"byte_end":386637,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":12584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":388060,"byte_end":388066,"line_start":77,"line_end":77,"column_start":32,"column_end":38},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":12584},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select.rs","byte_start":388284,"byte_end":388290,"line_start":86,"line_end":86,"column_start":27,"column_end":33},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":12584},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":391700,"byte_end":391706,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":12630},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":391972,"byte_end":391978,"line_start":83,"line_end":83,"column_start":39,"column_end":45},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":12630},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\unfold.rs","byte_start":392258,"byte_end":392264,"line_start":97,"line_end":97,"column_start":34,"column_end":40},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":12630},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12730639,"byte_end":12730651,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":14378},"to":{"krate":2,"index":2531}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12730756,"byte_end":12730768,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":14378},"to":{"krate":2,"index":2536}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12730799,"byte_end":12730811,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":14378},"to":{"krate":2,"index":2578}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12730934,"byte_end":12730946,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":14378},"to":{"krate":2,"index":2567}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12731127,"byte_end":12731139,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":14378},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733754,"byte_end":12733768,"line_start":105,"line_end":105,"column_start":27,"column_end":41},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":12753},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12733794,"byte_end":12733808,"line_start":107,"line_end":107,"column_start":19,"column_end":33},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":12753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12735407,"byte_end":12735421,"line_start":151,"line_end":151,"column_start":31,"column_end":45},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":12753},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12735514,"byte_end":12735528,"line_start":157,"line_end":157,"column_start":30,"column_end":44},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":12753},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12736690,"byte_end":12736704,"line_start":192,"line_end":192,"column_start":29,"column_end":43},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":12753},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12736870,"byte_end":12736884,"line_start":198,"line_end":198,"column_start":41,"column_end":55},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":12753},"to":{"krate":2,"index":7223}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12737164,"byte_end":12737178,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":12753},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_ordered.rs","byte_start":12737348,"byte_end":12737362,"line_start":217,"line_end":217,"column_start":35,"column_end":49},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":12753},"to":{"krate":2,"index":7236}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\abort.rs","byte_start":12763476,"byte_end":12763487,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":12887},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12764659,"byte_end":12764669,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":13234},"to":{"krate":2,"index":7390}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12765526,"byte_end":12765536,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":13234},"to":{"krate":2,"index":7279}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12765584,"byte_end":12765591,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":13244},"to":{"krate":2,"index":7390}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12765855,"byte_end":12765862,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":13244},"to":{"krate":2,"index":7279}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12765903,"byte_end":12765913,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":13253},"to":{"krate":2,"index":7390}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12766830,"byte_end":12766840,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":13253},"to":{"krate":2,"index":7279}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12766888,"byte_end":12766892,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":13264},"to":{"krate":2,"index":7390}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\iter.rs","byte_start":12767148,"byte_end":12767152,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":13264},"to":{"krate":2,"index":7279}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\task.rs","byte_start":12768641,"byte_end":12768645,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":12993},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\task.rs","byte_start":12768680,"byte_end":12768684,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":12993},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\task.rs","byte_start":12768716,"byte_end":12768720,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":12993},"to":{"krate":17,"index":327}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\task.rs","byte_start":12769797,"byte_end":12769801,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":12993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\task.rs","byte_start":12770801,"byte_end":12770805,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":12993},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":12772255,"byte_end":12772270,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":13063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":12774120,"byte_end":12774135,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":13063},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739740,"byte_end":12739756,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":13084},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739797,"byte_end":12739813,"line_start":62,"line_end":62,"column_start":33,"column_end":49},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":13084},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739842,"byte_end":12739858,"line_start":63,"line_end":63,"column_start":21,"column_end":37},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":13084},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12739883,"byte_end":12739899,"line_start":65,"line_end":65,"column_start":16,"column_end":32},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":13084},"to":{"krate":17,"index":16}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12740096,"byte_end":12740112,"line_start":74,"line_end":74,"column_start":21,"column_end":37},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":13084},"to":{"krate":17,"index":19}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12741831,"byte_end":12741847,"line_start":108,"line_end":108,"column_start":23,"column_end":39},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":13084},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12741921,"byte_end":12741937,"line_start":114,"line_end":114,"column_start":11,"column_end":27},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":13084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12753568,"byte_end":12753584,"line_start":395,"line_end":395,"column_start":30,"column_end":46},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":13084},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12758849,"byte_end":12758853,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":13121},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12761191,"byte_end":12761207,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":13084},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12761354,"byte_end":12761370,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":13084},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12762810,"byte_end":12762826,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":13084},"to":{"krate":2,"index":7223}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12763070,"byte_end":12763086,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":13084},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\futures_unordered\\mod.rs","byte_start":12763208,"byte_end":12763224,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":13084},"to":{"krate":2,"index":7236}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776003,"byte_end":12776012,"line_start":31,"line_end":31,"column_start":27,"column_end":36},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":13195},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12776157,"byte_end":12776166,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":13195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12777202,"byte_end":12777211,"line_start":69,"line_end":69,"column_start":38,"column_end":47},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":13195},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12777310,"byte_end":12777319,"line_start":75,"line_end":75,"column_start":37,"column_end":46},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":13195},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12778126,"byte_end":12778135,"line_start":100,"line_end":100,"column_start":42,"column_end":51},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":13195},"to":{"krate":14,"index":110}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12779158,"byte_end":12779167,"line_start":131,"line_end":131,"column_start":47,"column_end":56},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":13195},"to":{"krate":2,"index":7223}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\stream\\select_all.rs","byte_start":12779312,"byte_end":12779321,"line_start":137,"line_end":137,"column_start":41,"column_end":50},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":13195},"to":{"krate":2,"index":7236}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":394666,"byte_end":394668,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":5090},"to":{"krate":0,"index":5093}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":394723,"byte_end":394725,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":5092},"to":{"krate":0,"index":5096}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":394804,"byte_end":394809,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":17,"index":16},"to":{"krate":0,"index":5093}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\task\\spawn.rs","byte_start":397573,"byte_end":397583,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":17,"index":19},"to":{"krate":0,"index":5096}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":429188,"byte_end":429198,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":13289},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":429635,"byte_end":429645,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":13289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":430156,"byte_end":430166,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":13289},"to":{"krate":1,"index":4372}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":430706,"byte_end":430716,"line_start":81,"line_end":81,"column_start":24,"column_end":34},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":13289},"to":{"krate":20,"index":42}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":431465,"byte_end":431475,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":13289},"to":{"krate":1,"index":4311}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":432195,"byte_end":432205,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":13289},"to":{"krate":20,"index":39}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":432793,"byte_end":432803,"line_start":145,"line_end":145,"column_start":22,"column_end":32},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":13289},"to":{"krate":1,"index":4390}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":432942,"byte_end":432952,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":13289},"to":{"krate":20,"index":47}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":433190,"byte_end":433200,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":13289},"to":{"krate":1,"index":4397}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\allow_std.rs","byte_start":433411,"byte_end":433421,"line_start":168,"line_end":168,"column_start":26,"column_end":36},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":13289},"to":{"krate":20,"index":49}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":435267,"byte_end":435276,"line_start":41,"line_end":41,"column_start":20,"column_end":29},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":13322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":436498,"byte_end":436507,"line_start":81,"line_end":81,"column_start":34,"column_end":43},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":13322},"to":{"krate":20,"index":39}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":438119,"byte_end":438128,"line_start":125,"line_end":125,"column_start":37,"column_end":46},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":13322},"to":{"krate":20,"index":49}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":438981,"byte_end":438990,"line_start":149,"line_end":149,"column_start":36,"column_end":45},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":13322},"to":{"krate":20,"index":42}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":439068,"byte_end":439077,"line_start":153,"line_end":153,"column_start":36,"column_end":45},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":13322},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_reader.rs","byte_start":439393,"byte_end":439402,"line_start":162,"line_end":162,"column_start":46,"column_end":55},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":13322},"to":{"krate":20,"index":47}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":443350,"byte_end":443359,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":13375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":444933,"byte_end":444942,"line_start":92,"line_end":92,"column_start":36,"column_end":45},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":13375},"to":{"krate":20,"index":42}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":446365,"byte_end":446374,"line_start":135,"line_end":135,"column_start":34,"column_end":43},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":13375},"to":{"krate":20,"index":39}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":446455,"byte_end":446464,"line_start":139,"line_end":139,"column_start":40,"column_end":49},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":13375},"to":{"krate":20,"index":49}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":446545,"byte_end":446554,"line_start":143,"line_end":143,"column_start":36,"column_end":45},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":13375},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\buf_writer.rs","byte_start":446913,"byte_end":446922,"line_start":153,"line_end":153,"column_start":47,"column_end":56},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":13375},"to":{"krate":20,"index":47}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":447859,"byte_end":447864,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":13424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":449165,"byte_end":449170,"line_start":66,"line_end":66,"column_start":27,"column_end":32},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":13424},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":449500,"byte_end":449505,"line_start":80,"line_end":80,"column_start":26,"column_end":31},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":13424},"to":{"krate":20,"index":39}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\chain.rs","byte_start":450858,"byte_end":450863,"line_start":130,"line_end":130,"column_start":29,"column_end":34},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":13424},"to":{"krate":20,"index":49}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\close.rs","byte_start":451974,"byte_end":451979,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":13473},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\close.rs","byte_start":452032,"byte_end":452037,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":13473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\close.rs","byte_start":452179,"byte_end":452184,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":13473},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy.rs","byte_start":453967,"byte_end":453971,"line_start":54,"line_end":54,"column_start":63,"column_end":67},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":13490},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\copy_buf.rs","byte_start":455723,"byte_end":455730,"line_start":58,"line_end":58,"column_start":23,"column_end":30},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":13544},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":457568,"byte_end":457574,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":13597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":460795,"byte_end":460801,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":13597},"to":{"krate":20,"index":47}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":461088,"byte_end":461094,"line_start":163,"line_end":163,"column_start":44,"column_end":50},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":13597},"to":{"krate":20,"index":39}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":461726,"byte_end":461732,"line_start":187,"line_end":187,"column_start":26,"column_end":32},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":13597},"to":{"krate":20,"index":49}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":462881,"byte_end":462887,"line_start":224,"line_end":224,"column_start":21,"column_end":27},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":13597},"to":{"krate":20,"index":42}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":462962,"byte_end":462968,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":13597},"to":{"krate":20,"index":42}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":463046,"byte_end":463052,"line_start":232,"line_end":232,"column_start":21,"column_end":27},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":13597},"to":{"krate":20,"index":42}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\cursor.rs","byte_start":463125,"byte_end":463131,"line_start":236,"line_end":236,"column_start":21,"column_end":27},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":13597},"to":{"krate":20,"index":42}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":464114,"byte_end":464119,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5677},"to":{"krate":20,"index":39}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":464467,"byte_end":464472,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5677},"to":{"krate":20,"index":49}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\empty.rs","byte_start":464704,"byte_end":464709,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5677},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\fill_buf.rs","byte_start":465207,"byte_end":465214,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":13625},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\fill_buf.rs","byte_start":465269,"byte_end":465276,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":13625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\fill_buf.rs","byte_start":465407,"byte_end":465414,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":13625},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\flush.rs","byte_start":466984,"byte_end":466989,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":13633},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\flush.rs","byte_start":467042,"byte_end":467047,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":13633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\flush.rs","byte_start":467160,"byte_end":467165,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":13633},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\lines.rs","byte_start":467968,"byte_end":467973,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":13646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\lines.rs","byte_start":468193,"byte_end":468198,"line_start":35,"line_end":35,"column_start":34,"column_end":39},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":13646},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read.rs","byte_start":469192,"byte_end":469196,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":13689},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read.rs","byte_start":469248,"byte_end":469252,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":13689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read.rs","byte_start":469417,"byte_end":469421,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":13689},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_vectored.rs","byte_start":470109,"byte_end":470121,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":13698},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_vectored.rs","byte_start":470173,"byte_end":470185,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":13698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_vectored.rs","byte_start":470364,"byte_end":470376,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":13698},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_exact.rs","byte_start":471071,"byte_end":471080,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":13707},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_exact.rs","byte_start":471132,"byte_end":471141,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":13707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_exact.rs","byte_start":471306,"byte_end":471315,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":13707},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_line.rs","byte_start":472457,"byte_end":472465,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":13716},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_line.rs","byte_start":472520,"byte_end":472528,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":13716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_line.rs","byte_start":473554,"byte_end":473562,"line_start":55,"line_end":55,"column_start":51,"column_end":59},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":13716},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_end.rs","byte_start":474317,"byte_end":474326,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":13727},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_end.rs","byte_start":474378,"byte_end":474387,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":13727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_end.rs","byte_start":474677,"byte_end":474682,"line_start":36,"line_end":36,"column_start":15,"column_end":20},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5992},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_end.rs","byte_start":476538,"byte_end":476547,"line_start":88,"line_end":88,"column_start":20,"column_end":29},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":13727},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_string.rs","byte_start":477420,"byte_end":477432,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":13737},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_string.rs","byte_start":477484,"byte_end":477496,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":13737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_to_string.rs","byte_start":478529,"byte_end":478541,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":13737},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_until.rs","byte_start":479361,"byte_end":479370,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":13748},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_until.rs","byte_start":479425,"byte_end":479434,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":13748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\read_until.rs","byte_start":480406,"byte_end":480415,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":13748},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":481639,"byte_end":481645,"line_start":37,"line_end":37,"column_start":20,"column_end":26},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":6127},"to":{"krate":20,"index":39}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\repeat.rs","byte_start":482425,"byte_end":482431,"line_start":70,"line_end":70,"column_start":21,"column_end":27},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":6127},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\seek.rs","byte_start":482945,"byte_end":482949,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":13759},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\seek.rs","byte_start":483001,"byte_end":483005,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":13759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\seek.rs","byte_start":483162,"byte_end":483166,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":13759},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":484295,"byte_end":484299,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6203},"to":{"krate":20,"index":42}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\sink.rs","byte_start":485017,"byte_end":485021,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6203},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":486051,"byte_end":486059,"line_start":37,"line_end":37,"column_start":16,"column_end":24},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":13768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":486557,"byte_end":486566,"line_start":48,"line_end":48,"column_start":16,"column_end":25},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":13774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":486958,"byte_end":486966,"line_start":57,"line_end":57,"column_start":34,"column_end":42},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":13768},"to":{"krate":20,"index":39}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":487431,"byte_end":487440,"line_start":71,"line_end":71,"column_start":36,"column_end":45},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":13774},"to":{"krate":20,"index":42}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":488417,"byte_end":488429,"line_start":97,"line_end":97,"column_start":24,"column_end":36},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":6287},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":488619,"byte_end":488631,"line_start":105,"line_end":105,"column_start":26,"column_end":38},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":6287},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\split.rs","byte_start":488865,"byte_end":488877,"line_start":112,"line_end":112,"column_start":47,"column_end":59},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":6287},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":489476,"byte_end":489480,"line_start":22,"line_end":22,"column_start":20,"column_end":24},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":13785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":491407,"byte_end":491411,"line_start":87,"line_end":87,"column_start":34,"column_end":38},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":13785},"to":{"krate":20,"index":39}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\take.rs","byte_start":492055,"byte_end":492059,"line_start":111,"line_end":111,"column_start":40,"column_end":44},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":13785},"to":{"krate":20,"index":49}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":493906,"byte_end":493912,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":13824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":496015,"byte_end":496021,"line_start":97,"line_end":97,"column_start":38,"column_end":44},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":13824},"to":{"krate":2,"index":2777}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\window.rs","byte_start":496168,"byte_end":496174,"line_start":103,"line_end":103,"column_start":38,"column_end":44},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":13824},"to":{"krate":2,"index":2780}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write.rs","byte_start":496695,"byte_end":496700,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":13831},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write.rs","byte_start":496753,"byte_end":496758,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":13831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write.rs","byte_start":496920,"byte_end":496925,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":13831},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_vectored.rs","byte_start":497609,"byte_end":497622,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":13840},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_vectored.rs","byte_start":497675,"byte_end":497688,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":13840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_vectored.rs","byte_start":497861,"byte_end":497874,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":13840},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_all.rs","byte_start":498566,"byte_end":498574,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":13849},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_all.rs","byte_start":498627,"byte_end":498635,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":13849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\write_all.rs","byte_start":498797,"byte_end":498805,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":13849},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":404781,"byte_end":404790,"line_start":152,"line_end":152,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":39},"to":{"krate":0,"index":6495}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413074,"byte_end":413075,"line_start":403,"line_end":403,"column_start":46,"column_end":47},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":6511},"to":{"krate":0,"index":6495}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":413178,"byte_end":413188,"line_start":406,"line_end":406,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":20,"index":42},"to":{"krate":0,"index":6512}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":419502,"byte_end":419503,"line_start":590,"line_end":590,"column_start":48,"column_end":49},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":6522},"to":{"krate":0,"index":6512}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":419604,"byte_end":419613,"line_start":593,"line_end":593,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":47},"to":{"krate":0,"index":6523}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420386,"byte_end":420387,"line_start":617,"line_end":617,"column_start":46,"column_end":47},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":6527},"to":{"krate":0,"index":6523}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":420494,"byte_end":420506,"line_start":620,"line_end":620,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":20,"index":49},"to":{"krate":0,"index":6528}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\io\\mod.rs","byte_start":427877,"byte_end":427878,"line_start":820,"line_end":820,"column_start":52,"column_end":53},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":6537},"to":{"krate":0,"index":6528}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12780255,"byte_end":12780260,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":13912},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12780593,"byte_end":12780598,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":13912},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12780691,"byte_end":12780696,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":13912},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12780829,"byte_end":12780835,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":13926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781369,"byte_end":12781374,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":13912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12781945,"byte_end":12781950,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":13912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12785099,"byte_end":12785114,"line_start":189,"line_end":189,"column_start":32,"column_end":47},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":13949},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12785624,"byte_end":12785639,"line_start":205,"line_end":205,"column_start":33,"column_end":48},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":13949},"to":{"krate":14,"index":27}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12785756,"byte_end":12785771,"line_start":211,"line_end":211,"column_start":32,"column_end":47},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":13949},"to":{"krate":2,"index":12193}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787000,"byte_end":12787015,"line_start":247,"line_end":247,"column_start":26,"column_end":41},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":13949},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12787617,"byte_end":12787627,"line_start":266,"line_end":266,"column_start":21,"column_end":31},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":13968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12788639,"byte_end":12788649,"line_start":296,"line_end":296,"column_start":45,"column_end":55},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":13968},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12788894,"byte_end":12788904,"line_start":305,"line_end":305,"column_start":26,"column_end":36},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":13968},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789002,"byte_end":12789012,"line_start":311,"line_end":311,"column_start":27,"column_end":37},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":13968},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789153,"byte_end":12789163,"line_start":318,"line_end":318,"column_start":30,"column_end":40},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":13968},"to":{"krate":2,"index":3104}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12789614,"byte_end":12789630,"line_start":332,"line_end":332,"column_start":32,"column_end":48},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":13991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12790760,"byte_end":12790776,"line_start":363,"line_end":363,"column_start":56,"column_end":72},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":13991},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12791041,"byte_end":12791057,"line_start":372,"line_end":372,"column_start":37,"column_end":53},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":13991},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12791169,"byte_end":12791185,"line_start":378,"line_end":378,"column_start":38,"column_end":54},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":13991},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12791328,"byte_end":12791344,"line_start":385,"line_end":385,"column_start":41,"column_end":57},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":13991},"to":{"krate":2,"index":3104}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12791621,"byte_end":12791626,"line_start":393,"line_end":393,"column_start":40,"column_end":45},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":13912},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12791672,"byte_end":12791677,"line_start":394,"line_end":394,"column_start":40,"column_end":45},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":13912},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12791844,"byte_end":12791859,"line_start":398,"line_end":398,"column_start":40,"column_end":55},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":13949},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12791963,"byte_end":12791978,"line_start":400,"line_end":400,"column_start":33,"column_end":48},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":13949},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12792182,"byte_end":12792192,"line_start":404,"line_end":404,"column_start":40,"column_end":50},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":13968},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12792242,"byte_end":12792252,"line_start":405,"line_end":405,"column_start":40,"column_end":50},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":13968},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12792320,"byte_end":12792336,"line_start":406,"line_end":406,"column_start":58,"column_end":74},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":13991},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\mutex.rs","byte_start":12792407,"byte_end":12792423,"line_start":407,"line_end":407,"column_start":58,"column_end":74},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":13991},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12794427,"byte_end":12794432,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":14144},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12794469,"byte_end":12794474,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":14144},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12794490,"byte_end":12794496,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":14138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12800167,"byte_end":12800172,"line_start":189,"line_end":189,"column_start":16,"column_end":21},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":14144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12800294,"byte_end":12800299,"line_start":195,"line_end":195,"column_start":18,"column_end":23},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":14144},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12800627,"byte_end":12800639,"line_start":206,"line_end":206,"column_start":24,"column_end":36},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":14109},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12800829,"byte_end":12800841,"line_start":214,"line_end":214,"column_start":26,"column_end":38},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":14109},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12801062,"byte_end":12801074,"line_start":221,"line_end":221,"column_start":47,"column_end":59},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":14109},"to":{"krate":1,"index":2318}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12801456,"byte_end":12801467,"line_start":234,"line_end":234,"column_start":19,"column_end":30},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":14151},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12801630,"byte_end":12801641,"line_start":241,"line_end":241,"column_start":29,"column_end":40},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":14151},"to":{"krate":2,"index":3104}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12801779,"byte_end":12801790,"line_start":247,"line_end":247,"column_start":9,"column_end":20},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":14151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\lock\\bilock.rs","byte_start":12802142,"byte_end":12802153,"line_start":256,"line_end":256,"column_start":18,"column_end":29},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":14151},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":500430,"byte_end":500431,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6584},"to":{"krate":0,"index":6579}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":500569,"byte_end":500576,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":6579},"to":{"krate":0,"index":6589}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":500665,"byte_end":500666,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6593},"to":{"krate":0,"index":6589}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":500851,"byte_end":500857,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":6589},"to":{"krate":0,"index":6597}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":500935,"byte_end":500936,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6601},"to":{"krate":0,"index":6597}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":501951,"byte_end":501955,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6606},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":502049,"byte_end":502053,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6606},"to":{"krate":0,"index":6579}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":502312,"byte_end":502319,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":14177},"to":{"krate":0,"index":6579}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":502542,"byte_end":502549,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":14177},"to":{"krate":0,"index":6589}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":502740,"byte_end":502747,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":14177},"to":{"krate":0,"index":6597}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":503052,"byte_end":503065,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":14198},"to":{"krate":0,"index":6579}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":503482,"byte_end":503491,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":14214},"to":{"krate":0,"index":6579}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":503773,"byte_end":503782,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":14214},"to":{"krate":0,"index":6589}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":504042,"byte_end":504051,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":14214},"to":{"krate":0,"index":6597}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":504371,"byte_end":504378,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":14229},"to":{"krate":0,"index":6579}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":504597,"byte_end":504604,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":14229},"to":{"krate":0,"index":6589}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":504782,"byte_end":504789,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":14229},"to":{"krate":0,"index":6597}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":505090,"byte_end":505098,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":14244},"to":{"krate":0,"index":6579}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":505321,"byte_end":505329,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":14244},"to":{"krate":0,"index":6589}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":505511,"byte_end":505519,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":14244},"to":{"krate":0,"index":6597}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":505829,"byte_end":505840,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":14259},"to":{"krate":0,"index":6579}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":506077,"byte_end":506088,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":14259},"to":{"krate":0,"index":6589}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":506303,"byte_end":506314,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":14259},"to":{"krate":0,"index":6597}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":506659,"byte_end":506671,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":14271},"to":{"krate":0,"index":6579}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":506909,"byte_end":506921,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":14271},"to":{"krate":0,"index":6589}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":507137,"byte_end":507149,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":14271},"to":{"krate":0,"index":6597}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":507746,"byte_end":507760,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":14283},"to":{"krate":0,"index":6579}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":507981,"byte_end":507995,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":14283},"to":{"krate":0,"index":6589}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":508194,"byte_end":508208,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":14283},"to":{"krate":0,"index":6597}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":508512,"byte_end":508518,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6770},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\fns.rs","byte_start":508611,"byte_end":508617,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6770},"to":{"krate":0,"index":6579}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.14\\src\\unfold_state.rs","byte_start":509217,"byte_end":509228,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":14320},"to":{"krate":4294967295,"index":4294967295}}]}