{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3","program":"C:\\Users\\utibe\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","crossbeam_epoch","--edition=2018","C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=f4c55eeaf25844de","-C","extra-filename=-f4c55eeaf25844de","--out-dir","c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\associated-token-account\\program\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\associated-token-account\\program\\target\\rls\\debug\\deps","--extern","cfg_if=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\associated-token-account\\program\\target\\rls\\debug\\deps\\libcfg_if-71e733e929897a01.rmeta","--extern","crossbeam_utils=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\associated-token-account\\program\\target\\rls\\debug\\deps\\libcrossbeam_utils-58727afefa8d0f4e.rmeta","--extern","lazy_static=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\associated-token-account\\program\\target\\rls\\debug\\deps\\liblazy_static-05d30b485fc4a892.rmeta","--extern","memoffset=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\associated-token-account\\program\\target\\rls\\debug\\deps\\libmemoffset-7933807bfc9c0bf8.rmeta","--extern","scopeguard=c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\associated-token-account\\program\\target\\rls\\debug\\deps\\libscopeguard-3b16b43a5afbb7ff.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\utibe\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\utibe\\Desktop\\migrate_solana\\solana_task\\sol_program\\solana-program-library\\associated-token-account\\program\\target\\rls\\debug\\deps\\libcrossbeam_epoch-f4c55eeaf25844de.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[3641242736158667130,0]},"crate_root":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src","external_crates":[{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10193565062885309191,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11670460313399248794,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8277854152057768692,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6312854529260013001,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11828252632451478976,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12374244740244276079,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10571265039882681484,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[417492704836984899,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7421411805122234607,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14357827127085763175,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7547149687459966599,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[3948222140130536591,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11460324065167655691,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","num":14,"id":{"name":"cfg_if","disambiguator":[7548206254662694973,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","num":15,"id":{"name":"lazy_static","disambiguator":[15734233212308616518,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","num":16,"id":{"name":"spin","disambiguator":[5114823821800248226,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","num":17,"id":{"name":"crossbeam_utils","disambiguator":[7522035776693793451,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","num":18,"id":{"name":"scopeguard","disambiguator":[1151845157251864566,0]}},{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","num":19,"id":{"name":"memoffset","disambiguator":[15826519402389749958,0]}}],"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":0,"byte_end":7337,"line_start":1,"line_end":187,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":6886,"byte_end":6895,"line_start":171,"line_end":171,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":6897,"byte_end":6903,"line_start":171,"line_end":171,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":6905,"byte_end":6925,"line_start":171,"line_end":171,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":6939,"byte_end":6944,"line_start":172,"line_end":172,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":6946,"byte_end":6953,"line_start":172,"line_end":172,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":6955,"byte_end":6961,"line_start":172,"line_end":172,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":7008,"byte_end":7017,"line_start":174,"line_end":174,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":7019,"byte_end":7030,"line_start":174,"line_end":174,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":7063,"byte_end":7074,"line_start":175,"line_end":175,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":7076,"byte_end":7081,"line_start":175,"line_end":175,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":7145,"byte_end":7163,"line_start":178,"line_end":178,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":7165,"byte_end":7186,"line_start":178,"line_end":178,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":7294,"byte_end":7311,"line_start":185,"line_end":185,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":7313,"byte_end":7322,"line_start":185,"line_end":185,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":7324,"byte_end":7327,"line_start":185,"line_end":185,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":0,"byte_end":7337,"line_start":1,"line_end":187,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":354},{"krate":0,"index":397},{"krate":0,"index":434},{"krate":0,"index":453},{"krate":0,"index":505},{"krate":0,"index":650},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":871},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12030853,"byte_end":12030871,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12030682,"byte_end":12030741,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12030785,"byte_end":12030843,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12030989,"byte_end":12031009,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12030917,"byte_end":12030977,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12031139,"byte_end":12031146,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12031058,"byte_end":12031130,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12031232,"byte_end":12031235,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12031168,"byte_end":12031223,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12032346,"byte_end":12032367,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12031550,"byte_end":12031602,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12031603,"byte_end":12031606,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12031607,"byte_end":12031698,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12031699,"byte_end":12031791,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12031792,"byte_end":12031795,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12031796,"byte_end":12031861,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12031862,"byte_end":12031865,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12031866,"byte_end":12031960,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12031961,"byte_end":12031987,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12031988,"byte_end":12032080,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12032081,"byte_end":12032109,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n             \"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12032153,"byte_end":12032335,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12032433,"byte_end":12032440,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12032374,"byte_end":12032425,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12032658,"byte_end":12032665,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12032466,"byte_end":12032514,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12032519,"byte_end":12032522,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12032527,"byte_end":12032620,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12032625,"byte_end":12032650,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035015,"byte_end":12035024,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034042,"byte_end":12034089,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034090,"byte_end":12034093,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034094,"byte_end":12034192,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034193,"byte_end":12034288,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034289,"byte_end":12034351,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034352,"byte_end":12034355,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034356,"byte_end":12034448,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034449,"byte_end":12034548,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034549,"byte_end":12034649,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034650,"byte_end":12034672,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034673,"byte_end":12034676,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034677,"byte_end":12034770,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034771,"byte_end":12034842,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034843,"byte_end":12034846,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034847,"byte_end":12034854,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034855,"byte_end":12034885,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034886,"byte_end":12034917,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034918,"byte_end":12034921,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034922,"byte_end":12034996,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12034997,"byte_end":12035004,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035071,"byte_end":12035076,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035031,"byte_end":12035060,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035130,"byte_end":12035134,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035090,"byte_end":12035120,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035286,"byte_end":12035290,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035141,"byte_end":12035186,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035191,"byte_end":12035194,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035199,"byte_end":12035211,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035216,"byte_end":12035219,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035224,"byte_end":12035271,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035654,"byte_end":12035659,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035324,"byte_end":12035359,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035364,"byte_end":12035367,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035372,"byte_end":12035384,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035389,"byte_end":12035392,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035397,"byte_end":12035473,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035478,"byte_end":12035546,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035551,"byte_end":12035639,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12036058,"byte_end":12036067,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035694,"byte_end":12035737,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035742,"byte_end":12035745,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035750,"byte_end":12035762,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035767,"byte_end":12035770,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035775,"byte_end":12035851,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035856,"byte_end":12035924,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12035929,"byte_end":12036019,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12036024,"byte_end":12036043,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12036480,"byte_end":12036484,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12036106,"byte_end":12036159,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12036164,"byte_end":12036167,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12036172,"byte_end":12036184,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12036189,"byte_end":12036192,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12036197,"byte_end":12036273,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12036278,"byte_end":12036346,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12036351,"byte_end":12036441,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12036446,"byte_end":12036465,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039459,"byte_end":12039465,"line_start":287,"line_end":287,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12038941,"byte_end":12039005,"line_start":278,"line_end":278,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039006,"byte_end":12039009,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039010,"byte_end":12039108,"line_start":280,"line_end":280,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039109,"byte_end":12039206,"line_start":281,"line_end":281,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039207,"byte_end":12039278,"line_start":282,"line_end":282,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039279,"byte_end":12039282,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039283,"byte_end":12039363,"line_start":284,"line_end":284,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039364,"byte_end":12039367,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039368,"byte_end":12039447,"line_start":286,"line_end":286,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039951,"byte_end":12039954,"line_start":305,"line_end":305,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039718,"byte_end":12039800,"line_start":296,"line_end":296,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039805,"byte_end":12039808,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039813,"byte_end":12039827,"line_start":298,"line_end":298,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039832,"byte_end":12039835,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039840,"byte_end":12039847,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039852,"byte_end":12039884,"line_start":301,"line_end":301,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039889,"byte_end":12039892,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039897,"byte_end":12039927,"line_start":303,"line_end":303,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039932,"byte_end":12039939,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040298,"byte_end":12040302,"line_start":320,"line_end":320,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040057,"byte_end":12040139,"line_start":311,"line_end":311,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040144,"byte_end":12040147,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040152,"byte_end":12040166,"line_start":313,"line_end":313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040171,"byte_end":12040174,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040179,"byte_end":12040186,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040191,"byte_end":12040223,"line_start":316,"line_end":316,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040228,"byte_end":12040231,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040236,"byte_end":12040274,"line_start":318,"line_end":318,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040279,"byte_end":12040286,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040891,"byte_end":12040895,"line_start":343,"line_end":343,"column_start":12,"column_end":16},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040607,"byte_end":12040645,"line_start":332,"line_end":332,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040650,"byte_end":12040653,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040658,"byte_end":12040672,"line_start":334,"line_end":334,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040677,"byte_end":12040680,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040685,"byte_end":12040692,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040697,"byte_end":12040729,"line_start":337,"line_end":337,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040734,"byte_end":12040737,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040742,"byte_end":12040776,"line_start":339,"line_end":339,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040781,"byte_end":12040788,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040793,"byte_end":12040796,"line_start":341,"line_end":341,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041480,"byte_end":12041484,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041022,"byte_end":12041067,"line_start":350,"line_end":350,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041072,"byte_end":12041075,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041080,"byte_end":12041170,"line_start":352,"line_end":352,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041175,"byte_end":12041189,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041194,"byte_end":12041197,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041202,"byte_end":12041216,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041221,"byte_end":12041224,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041229,"byte_end":12041236,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041241,"byte_end":12041290,"line_start":358,"line_end":358,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041295,"byte_end":12041339,"line_start":359,"line_end":359,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041344,"byte_end":12041347,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041352,"byte_end":12041382,"line_start":361,"line_end":361,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041387,"byte_end":12041417,"line_start":362,"line_end":362,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041422,"byte_end":12041456,"line_start":363,"line_end":363,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041461,"byte_end":12041468,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042491,"byte_end":12042503,"line_start":390,"line_end":390,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041614,"byte_end":12041693,"line_start":369,"line_end":369,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041698,"byte_end":12041701,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041706,"byte_end":12041779,"line_start":371,"line_end":371,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041784,"byte_end":12041860,"line_start":372,"line_end":372,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041865,"byte_end":12041936,"line_start":373,"line_end":373,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12041941,"byte_end":12042015,"line_start":374,"line_end":374,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042020,"byte_end":12042043,"line_start":375,"line_end":375,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042048,"byte_end":12042051,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042056,"byte_end":12042131,"line_start":377,"line_end":377,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042136,"byte_end":12042210,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042215,"byte_end":12042249,"line_start":379,"line_end":379,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042254,"byte_end":12042257,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042262,"byte_end":12042276,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042281,"byte_end":12042284,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042289,"byte_end":12042296,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042301,"byte_end":12042350,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042355,"byte_end":12042358,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042363,"byte_end":12042393,"line_start":386,"line_end":386,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042398,"byte_end":12042428,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042433,"byte_end":12042467,"line_start":388,"line_end":388,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042472,"byte_end":12042479,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043111,"byte_end":12043116,"line_start":409,"line_end":409,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042623,"byte_end":12042688,"line_start":394,"line_end":394,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042693,"byte_end":12042696,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042701,"byte_end":12042791,"line_start":396,"line_end":396,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042796,"byte_end":12042810,"line_start":397,"line_end":397,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042815,"byte_end":12042818,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042823,"byte_end":12042837,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042842,"byte_end":12042845,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042850,"byte_end":12042857,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042862,"byte_end":12042911,"line_start":402,"line_end":402,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042916,"byte_end":12042960,"line_start":403,"line_end":403,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042965,"byte_end":12042968,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12042973,"byte_end":12043003,"line_start":405,"line_end":405,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043008,"byte_end":12043044,"line_start":406,"line_end":406,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043049,"byte_end":12043087,"line_start":407,"line_end":407,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043092,"byte_end":12043099,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043766,"byte_end":12043770,"line_start":429,"line_end":429,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043223,"byte_end":12043311,"line_start":413,"line_end":413,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043316,"byte_end":12043329,"line_start":414,"line_end":414,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043334,"byte_end":12043337,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043342,"byte_end":12043432,"line_start":416,"line_end":416,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043437,"byte_end":12043451,"line_start":417,"line_end":417,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043456,"byte_end":12043459,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043464,"byte_end":12043478,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043483,"byte_end":12043486,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043491,"byte_end":12043498,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043503,"byte_end":12043560,"line_start":422,"line_end":422,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043565,"byte_end":12043609,"line_start":423,"line_end":423,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043614,"byte_end":12043617,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043622,"byte_end":12043652,"line_start":425,"line_end":425,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043657,"byte_end":12043687,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043692,"byte_end":12043742,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043747,"byte_end":12043754,"line_start":428,"line_end":428,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12045606,"byte_end":12045622,"line_start":463,"line_end":463,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"pub fn compare_exchange<'g,\n                        P>(&Self, Shared<, T>, P, Ordering, Ordering,\n                           &'g Guard) -> Result<Shared, CompareExchangeError>\nwhere P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12043941,"byte_end":12044037,"line_start":433,"line_end":433,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12044042,"byte_end":12044136,"line_start":434,"line_end":434,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12044141,"byte_end":12044212,"line_start":435,"line_end":435,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12044217,"byte_end":12044220,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12044225,"byte_end":12044320,"line_start":437,"line_end":437,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12044325,"byte_end":12044416,"line_start":438,"line_end":438,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12044421,"byte_end":12044434,"line_start":439,"line_end":439,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12044439,"byte_end":12044442,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12044447,"byte_end":12044516,"line_start":441,"line_end":441,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12044521,"byte_end":12044602,"line_start":442,"line_end":442,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12044607,"byte_end":12044698,"line_start":443,"line_end":443,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12044703,"byte_end":12044793,"line_start":444,"line_end":444,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12044798,"byte_end":12044880,"line_start":445,"line_end":445,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12044885,"byte_end":12044963,"line_start":446,"line_end":446,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12044968,"byte_end":12045048,"line_start":447,"line_end":447,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12045053,"byte_end":12045119,"line_start":448,"line_end":448,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12045124,"byte_end":12045127,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12045132,"byte_end":12045146,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12045151,"byte_end":12045154,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12045159,"byte_end":12045166,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12045171,"byte_end":12045235,"line_start":453,"line_end":453,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12045240,"byte_end":12045284,"line_start":454,"line_end":454,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12045289,"byte_end":12045292,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12045297,"byte_end":12045327,"line_start":456,"line_end":456,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12045332,"byte_end":12045335,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12045340,"byte_end":12045370,"line_start":458,"line_end":458,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12045375,"byte_end":12045412,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12045417,"byte_end":12045496,"line_start":460,"line_end":460,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12045501,"byte_end":12045582,"line_start":461,"line_end":461,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12045587,"byte_end":12045594,"line_start":462,"line_end":462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048656,"byte_end":12048677,"line_start":538,"line_end":538,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"pub fn compare_exchange_weak<'g,\n                             P>(&Self, Shared<, T>, P, Ordering, Ordering,\n                                &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12046284,"byte_end":12046380,"line_start":486,"line_end":486,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12046385,"byte_end":12046479,"line_start":487,"line_end":487,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12046484,"byte_end":12046555,"line_start":488,"line_end":488,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12046560,"byte_end":12046563,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12046568,"byte_end":12046663,"line_start":490,"line_end":490,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12046668,"byte_end":12046763,"line_start":491,"line_end":491,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12046768,"byte_end":12046858,"line_start":492,"line_end":492,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12046863,"byte_end":12046947,"line_start":493,"line_end":493,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12046952,"byte_end":12046955,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12046960,"byte_end":12047029,"line_start":495,"line_end":495,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047034,"byte_end":12047115,"line_start":496,"line_end":496,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047120,"byte_end":12047211,"line_start":497,"line_end":497,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047216,"byte_end":12047306,"line_start":498,"line_end":498,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047311,"byte_end":12047393,"line_start":499,"line_end":499,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047398,"byte_end":12047476,"line_start":500,"line_end":500,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047481,"byte_end":12047561,"line_start":501,"line_end":501,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047566,"byte_end":12047632,"line_start":502,"line_end":502,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047637,"byte_end":12047640,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047645,"byte_end":12047695,"line_start":504,"line_end":504,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047700,"byte_end":12047703,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047708,"byte_end":12047722,"line_start":506,"line_end":506,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047727,"byte_end":12047730,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047735,"byte_end":12047742,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047747,"byte_end":12047811,"line_start":509,"line_end":509,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047816,"byte_end":12047860,"line_start":510,"line_end":510,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047865,"byte_end":12047868,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047873,"byte_end":12047903,"line_start":512,"line_end":512,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047908,"byte_end":12047938,"line_start":513,"line_end":513,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047943,"byte_end":12047946,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047951,"byte_end":12047986,"line_start":515,"line_end":515,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12047991,"byte_end":12048031,"line_start":516,"line_end":516,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048036,"byte_end":12048046,"line_start":517,"line_end":517,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048051,"byte_end":12048123,"line_start":518,"line_end":518,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048128,"byte_end":12048150,"line_start":519,"line_end":519,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048155,"byte_end":12048179,"line_start":520,"line_end":520,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048184,"byte_end":12048206,"line_start":521,"line_end":521,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048211,"byte_end":12048224,"line_start":522,"line_end":522,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048229,"byte_end":12048254,"line_start":523,"line_end":523,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048259,"byte_end":12048293,"line_start":524,"line_end":524,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048298,"byte_end":12048328,"line_start":525,"line_end":525,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048333,"byte_end":12048346,"line_start":526,"line_end":526,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048351,"byte_end":12048360,"line_start":527,"line_end":527,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048365,"byte_end":12048370,"line_start":528,"line_end":528,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048375,"byte_end":12048378,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048383,"byte_end":12048424,"line_start":530,"line_end":530,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048429,"byte_end":12048439,"line_start":531,"line_end":531,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048444,"byte_end":12048528,"line_start":532,"line_end":532,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048533,"byte_end":12048560,"line_start":533,"line_end":533,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048565,"byte_end":12048608,"line_start":534,"line_end":534,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048613,"byte_end":12048622,"line_start":535,"line_end":535,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048627,"byte_end":12048632,"line_start":536,"line_end":536,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12048637,"byte_end":12048644,"line_start":537,"line_end":537,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12051046,"byte_end":12051061,"line_start":602,"line_end":602,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12049344,"byte_end":12049440,"line_start":561,"line_end":561,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12049445,"byte_end":12049539,"line_start":562,"line_end":562,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12049544,"byte_end":12049615,"line_start":563,"line_end":563,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12049620,"byte_end":12049623,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12049628,"byte_end":12049723,"line_start":565,"line_end":565,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12049728,"byte_end":12049819,"line_start":566,"line_end":566,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12049824,"byte_end":12049837,"line_start":567,"line_end":567,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12049842,"byte_end":12049845,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12049850,"byte_end":12049935,"line_start":569,"line_end":569,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12049940,"byte_end":12049971,"line_start":570,"line_end":570,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12049976,"byte_end":12049979,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12049984,"byte_end":12050021,"line_start":572,"line_end":572,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050026,"byte_end":12050029,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050034,"byte_end":12050122,"line_start":574,"line_end":574,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050127,"byte_end":12050148,"line_start":575,"line_end":575,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050153,"byte_end":12050156,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050161,"byte_end":12050193,"line_start":577,"line_end":577,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050198,"byte_end":12050230,"line_start":578,"line_end":578,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050235,"byte_end":12050267,"line_start":579,"line_end":579,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050272,"byte_end":12050304,"line_start":580,"line_end":580,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050309,"byte_end":12050341,"line_start":581,"line_end":581,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050346,"byte_end":12050378,"line_start":582,"line_end":582,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050383,"byte_end":12050414,"line_start":583,"line_end":583,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050419,"byte_end":12050422,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050427,"byte_end":12050441,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050446,"byte_end":12050449,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050454,"byte_end":12050461,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050466,"byte_end":12050493,"line_start":588,"line_end":588,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050498,"byte_end":12050562,"line_start":589,"line_end":589,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050567,"byte_end":12050611,"line_start":590,"line_end":590,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050616,"byte_end":12050619,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050624,"byte_end":12050654,"line_start":592,"line_end":592,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050659,"byte_end":12050662,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050667,"byte_end":12050697,"line_start":594,"line_end":594,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050702,"byte_end":12050739,"line_start":595,"line_end":595,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050744,"byte_end":12050814,"line_start":596,"line_end":596,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050819,"byte_end":12050891,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050896,"byte_end":12050903,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050955,"byte_end":12050975,"line_start":600,"line_end":600,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12050980,"byte_end":12051034,"line_start":601,"line_end":601,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053830,"byte_end":12053850,"line_start":679,"line_end":679,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12051404,"byte_end":12051500,"line_start":616,"line_end":616,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12051505,"byte_end":12051599,"line_start":617,"line_end":617,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12051604,"byte_end":12051675,"line_start":618,"line_end":618,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12051680,"byte_end":12051683,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12051688,"byte_end":12051782,"line_start":620,"line_end":620,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12051787,"byte_end":12051882,"line_start":621,"line_end":621,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12051887,"byte_end":12051977,"line_start":622,"line_end":622,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12051982,"byte_end":12052066,"line_start":623,"line_end":623,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052071,"byte_end":12052074,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052079,"byte_end":12052164,"line_start":625,"line_end":625,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052169,"byte_end":12052200,"line_start":626,"line_end":626,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052205,"byte_end":12052208,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052213,"byte_end":12052261,"line_start":628,"line_end":628,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052266,"byte_end":12052269,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052274,"byte_end":12052316,"line_start":630,"line_end":630,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052321,"byte_end":12052324,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052329,"byte_end":12052427,"line_start":632,"line_end":632,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052432,"byte_end":12052453,"line_start":633,"line_end":633,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052458,"byte_end":12052461,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052466,"byte_end":12052498,"line_start":635,"line_end":635,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052503,"byte_end":12052535,"line_start":636,"line_end":636,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052540,"byte_end":12052572,"line_start":637,"line_end":637,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052577,"byte_end":12052609,"line_start":638,"line_end":638,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052614,"byte_end":12052646,"line_start":639,"line_end":639,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052651,"byte_end":12052683,"line_start":640,"line_end":640,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052688,"byte_end":12052719,"line_start":641,"line_end":641,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052724,"byte_end":12052727,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052732,"byte_end":12052746,"line_start":643,"line_end":643,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052751,"byte_end":12052754,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052759,"byte_end":12052766,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052771,"byte_end":12052798,"line_start":646,"line_end":646,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052803,"byte_end":12052867,"line_start":647,"line_end":647,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052872,"byte_end":12052916,"line_start":648,"line_end":648,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052921,"byte_end":12052924,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052929,"byte_end":12052959,"line_start":650,"line_end":650,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052964,"byte_end":12052994,"line_start":651,"line_end":651,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12052999,"byte_end":12053002,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053007,"byte_end":12053042,"line_start":653,"line_end":653,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053047,"byte_end":12053087,"line_start":654,"line_end":654,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053092,"byte_end":12053102,"line_start":655,"line_end":655,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053107,"byte_end":12053170,"line_start":656,"line_end":656,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053175,"byte_end":12053197,"line_start":657,"line_end":657,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053202,"byte_end":12053226,"line_start":658,"line_end":658,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053231,"byte_end":12053253,"line_start":659,"line_end":659,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053258,"byte_end":12053271,"line_start":660,"line_end":660,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053276,"byte_end":12053301,"line_start":661,"line_end":661,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053306,"byte_end":12053340,"line_start":662,"line_end":662,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053345,"byte_end":12053375,"line_start":663,"line_end":663,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053380,"byte_end":12053393,"line_start":664,"line_end":664,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053398,"byte_end":12053407,"line_start":665,"line_end":665,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053412,"byte_end":12053417,"line_start":666,"line_end":666,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053422,"byte_end":12053425,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053430,"byte_end":12053471,"line_start":668,"line_end":668,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053476,"byte_end":12053486,"line_start":669,"line_end":669,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053491,"byte_end":12053566,"line_start":670,"line_end":670,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053571,"byte_end":12053598,"line_start":671,"line_end":671,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053603,"byte_end":12053646,"line_start":672,"line_end":672,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053651,"byte_end":12053660,"line_start":673,"line_end":673,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053665,"byte_end":12053670,"line_start":674,"line_end":674,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053675,"byte_end":12053682,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053734,"byte_end":12053754,"line_start":677,"line_end":677,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12053759,"byte_end":12053818,"line_start":678,"line_end":678,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054929,"byte_end":12054938,"line_start":712,"line_end":712,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054198,"byte_end":12054237,"line_start":693,"line_end":693,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054242,"byte_end":12054245,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054250,"byte_end":12054344,"line_start":695,"line_end":695,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054349,"byte_end":12054405,"line_start":696,"line_end":696,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054410,"byte_end":12054413,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054418,"byte_end":12054508,"line_start":698,"line_end":698,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054513,"byte_end":12054527,"line_start":699,"line_end":699,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054532,"byte_end":12054535,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054540,"byte_end":12054554,"line_start":701,"line_end":701,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054559,"byte_end":12054562,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054567,"byte_end":12054574,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054579,"byte_end":12054636,"line_start":704,"line_end":704,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054641,"byte_end":12054685,"line_start":705,"line_end":705,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054690,"byte_end":12054693,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054698,"byte_end":12054758,"line_start":707,"line_end":707,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054763,"byte_end":12054793,"line_start":708,"line_end":708,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054798,"byte_end":12054853,"line_start":709,"line_end":709,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054858,"byte_end":12054905,"line_start":710,"line_end":710,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12054910,"byte_end":12054917,"line_start":711,"line_end":711,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055837,"byte_end":12055845,"line_start":735,"line_end":735,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055109,"byte_end":12055147,"line_start":716,"line_end":716,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055152,"byte_end":12055155,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055160,"byte_end":12055253,"line_start":718,"line_end":718,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055258,"byte_end":12055314,"line_start":719,"line_end":719,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055319,"byte_end":12055322,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055327,"byte_end":12055417,"line_start":721,"line_end":721,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055422,"byte_end":12055436,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055441,"byte_end":12055444,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055449,"byte_end":12055463,"line_start":724,"line_end":724,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055468,"byte_end":12055471,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055476,"byte_end":12055483,"line_start":726,"line_end":726,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055488,"byte_end":12055545,"line_start":727,"line_end":727,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055550,"byte_end":12055594,"line_start":728,"line_end":728,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055599,"byte_end":12055602,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055607,"byte_end":12055667,"line_start":730,"line_end":730,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055672,"byte_end":12055702,"line_start":731,"line_end":731,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055707,"byte_end":12055761,"line_start":732,"line_end":732,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055766,"byte_end":12055813,"line_start":733,"line_end":733,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12055818,"byte_end":12055825,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056745,"byte_end":12056754,"line_start":758,"line_end":758,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056014,"byte_end":12056053,"line_start":739,"line_end":739,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056058,"byte_end":12056061,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056066,"byte_end":12056160,"line_start":741,"line_end":741,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056165,"byte_end":12056221,"line_start":742,"line_end":742,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056226,"byte_end":12056229,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056234,"byte_end":12056324,"line_start":744,"line_end":744,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056329,"byte_end":12056343,"line_start":745,"line_end":745,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056348,"byte_end":12056351,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056356,"byte_end":12056370,"line_start":747,"line_end":747,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056375,"byte_end":12056378,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056383,"byte_end":12056390,"line_start":749,"line_end":749,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056395,"byte_end":12056452,"line_start":750,"line_end":750,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056457,"byte_end":12056501,"line_start":751,"line_end":751,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056506,"byte_end":12056509,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056514,"byte_end":12056574,"line_start":753,"line_end":753,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056579,"byte_end":12056609,"line_start":754,"line_end":754,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056614,"byte_end":12056669,"line_start":755,"line_end":755,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056674,"byte_end":12056721,"line_start":756,"line_end":756,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056726,"byte_end":12056733,"line_start":757,"line_end":757,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12058051,"byte_end":12058061,"line_start":796,"line_end":796,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056924,"byte_end":12056959,"line_start":762,"line_end":762,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056964,"byte_end":12056967,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12056972,"byte_end":12057061,"line_start":764,"line_end":764,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057066,"byte_end":12057152,"line_start":765,"line_end":765,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057157,"byte_end":12057192,"line_start":766,"line_end":766,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057197,"byte_end":12057200,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057205,"byte_end":12057217,"line_start":768,"line_end":768,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057222,"byte_end":12057225,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057230,"byte_end":12057289,"line_start":770,"line_end":770,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057294,"byte_end":12057297,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057302,"byte_end":12057314,"line_start":772,"line_end":772,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057319,"byte_end":12057322,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057327,"byte_end":12057414,"line_start":774,"line_end":774,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057419,"byte_end":12057452,"line_start":775,"line_end":775,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057457,"byte_end":12057460,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057465,"byte_end":12057479,"line_start":777,"line_end":777,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057484,"byte_end":12057487,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057492,"byte_end":12057503,"line_start":779,"line_end":779,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057508,"byte_end":12057527,"line_start":780,"line_end":780,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057532,"byte_end":12057566,"line_start":781,"line_end":781,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057571,"byte_end":12057597,"line_start":782,"line_end":782,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057602,"byte_end":12057629,"line_start":783,"line_end":783,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057634,"byte_end":12057639,"line_start":784,"line_end":784,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057644,"byte_end":12057647,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057652,"byte_end":12057685,"line_start":786,"line_end":786,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057690,"byte_end":12057718,"line_start":787,"line_end":787,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057723,"byte_end":12057817,"line_start":788,"line_end":788,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057822,"byte_end":12057869,"line_start":789,"line_end":789,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057874,"byte_end":12057894,"line_start":790,"line_end":790,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057899,"byte_end":12057978,"line_start":791,"line_end":791,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12057983,"byte_end":12057996,"line_start":792,"line_end":792,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12058001,"byte_end":12058010,"line_start":793,"line_end":793,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12058015,"byte_end":12058020,"line_start":794,"line_end":794,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12058025,"byte_end":12058032,"line_start":795,"line_end":795,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061078,"byte_end":12061085,"line_start":909,"line_end":909,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061015,"byte_end":12061067,"line_start":908,"line_end":908,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061177,"byte_end":12061187,"line_start":911,"line_end":911,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":242},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061115,"byte_end":12061169,"line_start":910,"line_end":910,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061494,"byte_end":12061504,"line_start":919,"line_end":919,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":242},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061209,"byte_end":12061273,"line_start":913,"line_end":913,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061278,"byte_end":12061281,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061286,"byte_end":12061298,"line_start":915,"line_end":915,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061303,"byte_end":12061306,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061311,"byte_end":12061406,"line_start":917,"line_end":917,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061411,"byte_end":12061479,"line_start":918,"line_end":918,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061770,"byte_end":12061775,"line_start":928,"line_end":928,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061530,"byte_end":12061565,"line_start":922,"line_end":922,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061566,"byte_end":12061569,"line_start":923,"line_end":923,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061570,"byte_end":12061612,"line_start":924,"line_end":924,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061613,"byte_end":12061616,"line_start":925,"line_end":925,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061617,"byte_end":12061715,"line_start":926,"line_end":926,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061716,"byte_end":12061758,"line_start":927,"line_end":927,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063173,"byte_end":12063181,"line_start":979,"line_end":979,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062425,"byte_end":12062475,"line_start":957,"line_end":957,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062480,"byte_end":12062483,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062488,"byte_end":12062580,"line_start":959,"line_end":959,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062585,"byte_end":12062678,"line_start":960,"line_end":960,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062683,"byte_end":12062708,"line_start":961,"line_end":961,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062713,"byte_end":12062716,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062721,"byte_end":12062733,"line_start":963,"line_end":963,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062738,"byte_end":12062741,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062746,"byte_end":12062790,"line_start":965,"line_end":965,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062795,"byte_end":12062798,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062803,"byte_end":12062815,"line_start":967,"line_end":967,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062820,"byte_end":12062823,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062828,"byte_end":12062924,"line_start":969,"line_end":969,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062929,"byte_end":12062976,"line_start":970,"line_end":970,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062981,"byte_end":12062984,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062989,"byte_end":12063003,"line_start":972,"line_end":972,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063008,"byte_end":12063011,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063016,"byte_end":12063023,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063028,"byte_end":12063059,"line_start":975,"line_end":975,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063064,"byte_end":12063067,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063072,"byte_end":12063142,"line_start":977,"line_end":977,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063147,"byte_end":12063154,"line_start":978,"line_end":978,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063579,"byte_end":12063587,"line_start":996,"line_end":996,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063316,"byte_end":12063360,"line_start":985,"line_end":985,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063365,"byte_end":12063368,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063373,"byte_end":12063387,"line_start":987,"line_end":987,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063392,"byte_end":12063395,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063400,"byte_end":12063407,"line_start":989,"line_end":989,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063412,"byte_end":12063443,"line_start":990,"line_end":990,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063448,"byte_end":12063451,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063456,"byte_end":12063485,"line_start":992,"line_end":992,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063490,"byte_end":12063525,"line_start":993,"line_end":993,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063530,"byte_end":12063555,"line_start":994,"line_end":994,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063560,"byte_end":12063567,"line_start":995,"line_end":995,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063976,"byte_end":12063979,"line_start":1011,"line_end":1011,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063746,"byte_end":12063827,"line_start":1002,"line_end":1002,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063832,"byte_end":12063835,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063840,"byte_end":12063854,"line_start":1004,"line_end":1004,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063859,"byte_end":12063862,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063867,"byte_end":12063874,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063879,"byte_end":12063910,"line_start":1007,"line_end":1007,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063915,"byte_end":12063918,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063923,"byte_end":12063952,"line_start":1009,"line_end":1009,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12063957,"byte_end":12063964,"line_start":1010,"line_end":1010,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064318,"byte_end":12064322,"line_start":1026,"line_end":1026,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064080,"byte_end":12064161,"line_start":1017,"line_end":1017,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064166,"byte_end":12064169,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064174,"byte_end":12064188,"line_start":1019,"line_end":1019,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064193,"byte_end":12064196,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064201,"byte_end":12064208,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064213,"byte_end":12064244,"line_start":1022,"line_end":1022,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064249,"byte_end":12064252,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064257,"byte_end":12064294,"line_start":1024,"line_end":1024,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064299,"byte_end":12064306,"line_start":1025,"line_end":1025,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064743,"byte_end":12064754,"line_start":1042,"line_end":1042,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064414,"byte_end":12064463,"line_start":1030,"line_end":1030,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064468,"byte_end":12064471,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064476,"byte_end":12064490,"line_start":1032,"line_end":1032,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064495,"byte_end":12064498,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064503,"byte_end":12064510,"line_start":1034,"line_end":1034,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064515,"byte_end":12064563,"line_start":1035,"line_end":1035,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064568,"byte_end":12064571,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064576,"byte_end":12064605,"line_start":1037,"line_end":1037,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064610,"byte_end":12064640,"line_start":1038,"line_end":1038,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064645,"byte_end":12064678,"line_start":1039,"line_end":1039,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064683,"byte_end":12064690,"line_start":1040,"line_end":1040,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064695,"byte_end":12064731,"line_start":1041,"line_end":1041,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065074,"byte_end":12065077,"line_start":1055,"line_end":1055,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064866,"byte_end":12064912,"line_start":1046,"line_end":1046,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064917,"byte_end":12064920,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064925,"byte_end":12064939,"line_start":1048,"line_end":1048,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064944,"byte_end":12064947,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064952,"byte_end":12064959,"line_start":1050,"line_end":1050,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064964,"byte_end":12064995,"line_start":1051,"line_end":1051,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065000,"byte_end":12065003,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065008,"byte_end":12065050,"line_start":1053,"line_end":1053,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065055,"byte_end":12065062,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065550,"byte_end":12065558,"line_start":1073,"line_end":1073,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065173,"byte_end":12065263,"line_start":1060,"line_end":1060,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065268,"byte_end":12065306,"line_start":1061,"line_end":1061,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065311,"byte_end":12065314,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065319,"byte_end":12065333,"line_start":1063,"line_end":1063,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065338,"byte_end":12065341,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065346,"byte_end":12065353,"line_start":1065,"line_end":1065,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065358,"byte_end":12065389,"line_start":1066,"line_end":1066,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065394,"byte_end":12065397,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065402,"byte_end":12065431,"line_start":1068,"line_end":1068,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065436,"byte_end":12065463,"line_start":1069,"line_end":1069,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065468,"byte_end":12065494,"line_start":1070,"line_end":1070,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065499,"byte_end":12065526,"line_start":1071,"line_end":1071,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065531,"byte_end":12065538,"line_start":1072,"line_end":1072,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068020,"byte_end":12068026,"line_start":1176,"line_end":1176,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12067741,"byte_end":12067794,"line_start":1170,"line_end":1170,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12067795,"byte_end":12067798,"line_start":1171,"line_end":1171,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12067799,"byte_end":12067862,"line_start":1172,"line_end":1172,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12067863,"byte_end":12067866,"line_start":1173,"line_end":1173,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12067867,"byte_end":12067965,"line_start":1174,"line_end":1174,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12067966,"byte_end":12068008,"line_start":1175,"line_end":1175,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069197,"byte_end":12069203,"line_start":1225,"line_end":1225,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068678,"byte_end":12068738,"line_start":1208,"line_end":1208,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068743,"byte_end":12068746,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068751,"byte_end":12068765,"line_start":1210,"line_end":1210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068770,"byte_end":12068773,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068778,"byte_end":12068785,"line_start":1212,"line_end":1212,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068790,"byte_end":12068846,"line_start":1213,"line_end":1213,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068851,"byte_end":12068895,"line_start":1214,"line_end":1214,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068900,"byte_end":12068903,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068908,"byte_end":12068937,"line_start":1216,"line_end":1216,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068942,"byte_end":12068972,"line_start":1217,"line_end":1217,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068977,"byte_end":12069005,"line_start":1218,"line_end":1218,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069010,"byte_end":12069013,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069018,"byte_end":12069048,"line_start":1220,"line_end":1220,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069053,"byte_end":12069087,"line_start":1221,"line_end":1221,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069092,"byte_end":12069124,"line_start":1222,"line_end":1222,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069129,"byte_end":12069136,"line_start":1223,"line_end":1223,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069141,"byte_end":12069185,"line_start":1224,"line_end":1224,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069580,"byte_end":12069584,"line_start":1242,"line_end":1242,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069364,"byte_end":12069395,"line_start":1232,"line_end":1232,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069400,"byte_end":12069403,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069408,"byte_end":12069422,"line_start":1234,"line_end":1234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069427,"byte_end":12069430,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069435,"byte_end":12069442,"line_start":1236,"line_end":1236,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069447,"byte_end":12069479,"line_start":1237,"line_end":1237,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069484,"byte_end":12069487,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069492,"byte_end":12069526,"line_start":1239,"line_end":1239,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069531,"byte_end":12069556,"line_start":1240,"line_end":1240,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069561,"byte_end":12069568,"line_start":1241,"line_end":1241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070190,"byte_end":12070197,"line_start":1264,"line_end":1264,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069699,"byte_end":12069741,"line_start":1249,"line_end":1249,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069746,"byte_end":12069749,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069754,"byte_end":12069768,"line_start":1251,"line_end":1251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069773,"byte_end":12069776,"line_start":1252,"line_end":1252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069781,"byte_end":12069788,"line_start":1253,"line_end":1253,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069793,"byte_end":12069849,"line_start":1254,"line_end":1254,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069854,"byte_end":12069898,"line_start":1255,"line_end":1255,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069903,"byte_end":12069906,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069911,"byte_end":12069938,"line_start":1257,"line_end":1257,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069943,"byte_end":12069973,"line_start":1258,"line_end":1258,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069978,"byte_end":12070023,"line_start":1259,"line_end":1259,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070028,"byte_end":12070066,"line_start":1260,"line_end":1260,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070071,"byte_end":12070117,"line_start":1261,"line_end":1261,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070122,"byte_end":12070129,"line_start":1262,"line_end":1262,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070134,"byte_end":12070178,"line_start":1263,"line_end":1263,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071571,"byte_end":12071576,"line_start":1302,"line_end":1302,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070297,"byte_end":12070326,"line_start":1269,"line_end":1269,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070331,"byte_end":12070334,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070339,"byte_end":12070417,"line_start":1271,"line_end":1271,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070422,"byte_end":12070425,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070430,"byte_end":12070442,"line_start":1273,"line_end":1273,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070447,"byte_end":12070450,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070455,"byte_end":12070540,"line_start":1275,"line_end":1275,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070545,"byte_end":12070548,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070553,"byte_end":12070644,"line_start":1277,"line_end":1277,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070649,"byte_end":12070698,"line_start":1278,"line_end":1278,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070703,"byte_end":12070706,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070711,"byte_end":12070783,"line_start":1280,"line_end":1280,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070788,"byte_end":12070863,"line_start":1281,"line_end":1281,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070868,"byte_end":12070871,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070876,"byte_end":12070969,"line_start":1283,"line_end":1283,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12070974,"byte_end":12071067,"line_start":1284,"line_end":1284,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071072,"byte_end":12071110,"line_start":1285,"line_end":1285,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071115,"byte_end":12071118,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071123,"byte_end":12071137,"line_start":1287,"line_end":1287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071142,"byte_end":12071145,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071150,"byte_end":12071157,"line_start":1289,"line_end":1289,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071162,"byte_end":12071211,"line_start":1290,"line_end":1290,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071216,"byte_end":12071260,"line_start":1291,"line_end":1291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071265,"byte_end":12071268,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071273,"byte_end":12071303,"line_start":1293,"line_end":1293,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071308,"byte_end":12071338,"line_start":1294,"line_end":1294,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071343,"byte_end":12071377,"line_start":1295,"line_end":1295,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071382,"byte_end":12071394,"line_start":1296,"line_end":1296,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071399,"byte_end":12071436,"line_start":1297,"line_end":1297,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071441,"byte_end":12071446,"line_start":1298,"line_end":1298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071451,"byte_end":12071458,"line_start":1299,"line_end":1299,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071463,"byte_end":12071507,"line_start":1300,"line_end":1300,"column_start":5,"column_end":49}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071512,"byte_end":12071552,"line_start":1301,"line_end":1301,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072887,"byte_end":12072896,"line_start":1344,"line_end":1344,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071682,"byte_end":12071711,"line_start":1307,"line_end":1307,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071716,"byte_end":12071719,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071724,"byte_end":12071810,"line_start":1309,"line_end":1309,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071815,"byte_end":12071818,"line_start":1310,"line_end":1310,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071823,"byte_end":12071835,"line_start":1311,"line_end":1311,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071840,"byte_end":12071843,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071848,"byte_end":12071943,"line_start":1313,"line_end":1313,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071948,"byte_end":12071985,"line_start":1314,"line_end":1314,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071990,"byte_end":12071993,"line_start":1315,"line_end":1315,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12071998,"byte_end":12072087,"line_start":1316,"line_end":1316,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072092,"byte_end":12072095,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072100,"byte_end":12072174,"line_start":1318,"line_end":1318,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072179,"byte_end":12072182,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072187,"byte_end":12072201,"line_start":1320,"line_end":1320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072206,"byte_end":12072209,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072214,"byte_end":12072221,"line_start":1322,"line_end":1322,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072226,"byte_end":12072275,"line_start":1323,"line_end":1323,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072280,"byte_end":12072324,"line_start":1324,"line_end":1324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072329,"byte_end":12072332,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072337,"byte_end":12072379,"line_start":1326,"line_end":1326,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072384,"byte_end":12072414,"line_start":1327,"line_end":1327,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072419,"byte_end":12072422,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072427,"byte_end":12072465,"line_start":1329,"line_end":1329,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072470,"byte_end":12072482,"line_start":1330,"line_end":1330,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072487,"byte_end":12072517,"line_start":1331,"line_end":1331,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072522,"byte_end":12072552,"line_start":1332,"line_end":1332,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072557,"byte_end":12072598,"line_start":1333,"line_end":1333,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072603,"byte_end":12072621,"line_start":1334,"line_end":1334,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072626,"byte_end":12072670,"line_start":1335,"line_end":1335,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072675,"byte_end":12072680,"line_start":1336,"line_end":1336,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072685,"byte_end":12072688,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072693,"byte_end":12072727,"line_start":1338,"line_end":1338,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072732,"byte_end":12072744,"line_start":1339,"line_end":1339,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072749,"byte_end":12072801,"line_start":1340,"line_end":1340,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072806,"byte_end":12072811,"line_start":1341,"line_end":1341,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072816,"byte_end":12072823,"line_start":1342,"line_end":1342,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12072828,"byte_end":12072868,"line_start":1343,"line_end":1343,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074278,"byte_end":12074284,"line_start":1381,"line_end":1381,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073014,"byte_end":12073054,"line_start":1349,"line_end":1349,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073059,"byte_end":12073062,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073067,"byte_end":12073162,"line_start":1351,"line_end":1351,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073167,"byte_end":12073170,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073175,"byte_end":12073187,"line_start":1353,"line_end":1353,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073192,"byte_end":12073195,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073200,"byte_end":12073285,"line_start":1355,"line_end":1355,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073290,"byte_end":12073293,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073298,"byte_end":12073389,"line_start":1357,"line_end":1357,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073394,"byte_end":12073443,"line_start":1358,"line_end":1358,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073448,"byte_end":12073451,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073456,"byte_end":12073528,"line_start":1360,"line_end":1360,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073533,"byte_end":12073608,"line_start":1361,"line_end":1361,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073613,"byte_end":12073616,"line_start":1362,"line_end":1362,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073621,"byte_end":12073714,"line_start":1363,"line_end":1363,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073719,"byte_end":12073812,"line_start":1364,"line_end":1364,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073817,"byte_end":12073855,"line_start":1365,"line_end":1365,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073860,"byte_end":12073863,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073868,"byte_end":12073882,"line_start":1367,"line_end":1367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073887,"byte_end":12073890,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073895,"byte_end":12073902,"line_start":1369,"line_end":1369,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073907,"byte_end":12073956,"line_start":1370,"line_end":1370,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12073961,"byte_end":12074005,"line_start":1371,"line_end":1371,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074010,"byte_end":12074013,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074018,"byte_end":12074048,"line_start":1373,"line_end":1373,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074053,"byte_end":12074083,"line_start":1374,"line_end":1374,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074088,"byte_end":12074122,"line_start":1375,"line_end":1375,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074127,"byte_end":12074139,"line_start":1376,"line_end":1376,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074144,"byte_end":12074188,"line_start":1377,"line_end":1377,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074193,"byte_end":12074198,"line_start":1378,"line_end":1378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074203,"byte_end":12074210,"line_start":1379,"line_end":1379,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074215,"byte_end":12074259,"line_start":1380,"line_end":1380,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075144,"byte_end":12075154,"line_start":1414,"line_end":1414,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074474,"byte_end":12074509,"line_start":1390,"line_end":1390,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074514,"byte_end":12074517,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074522,"byte_end":12074534,"line_start":1392,"line_end":1392,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074539,"byte_end":12074542,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074547,"byte_end":12074606,"line_start":1394,"line_end":1394,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074611,"byte_end":12074614,"line_start":1395,"line_end":1395,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074619,"byte_end":12074631,"line_start":1396,"line_end":1396,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074636,"byte_end":12074639,"line_start":1397,"line_end":1397,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074644,"byte_end":12074731,"line_start":1398,"line_end":1398,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074736,"byte_end":12074769,"line_start":1399,"line_end":1399,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074774,"byte_end":12074777,"line_start":1400,"line_end":1400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074782,"byte_end":12074796,"line_start":1401,"line_end":1401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074801,"byte_end":12074804,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074809,"byte_end":12074816,"line_start":1403,"line_end":1403,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074821,"byte_end":12074870,"line_start":1404,"line_end":1404,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074875,"byte_end":12074919,"line_start":1405,"line_end":1405,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074924,"byte_end":12074927,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074932,"byte_end":12074962,"line_start":1407,"line_end":1407,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074967,"byte_end":12074979,"line_start":1408,"line_end":1408,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12074984,"byte_end":12075026,"line_start":1409,"line_end":1409,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075031,"byte_end":12075069,"line_start":1410,"line_end":1410,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075074,"byte_end":12075103,"line_start":1411,"line_end":1411,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075108,"byte_end":12075113,"line_start":1412,"line_end":1412,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075118,"byte_end":12075125,"line_start":1413,"line_end":1413,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075763,"byte_end":12075766,"line_start":1433,"line_end":1433,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075306,"byte_end":12075352,"line_start":1419,"line_end":1419,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075357,"byte_end":12075360,"line_start":1420,"line_end":1420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075365,"byte_end":12075379,"line_start":1421,"line_end":1421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075384,"byte_end":12075387,"line_start":1422,"line_end":1422,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075392,"byte_end":12075399,"line_start":1423,"line_end":1423,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075404,"byte_end":12075460,"line_start":1424,"line_end":1424,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075465,"byte_end":12075509,"line_start":1425,"line_end":1425,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075514,"byte_end":12075517,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075522,"byte_end":12075584,"line_start":1427,"line_end":1427,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075589,"byte_end":12075619,"line_start":1428,"line_end":1428,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075624,"byte_end":12075658,"line_start":1429,"line_end":1429,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075663,"byte_end":12075690,"line_start":1430,"line_end":1430,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075695,"byte_end":12075702,"line_start":1431,"line_end":1431,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075707,"byte_end":12075751,"line_start":1432,"line_end":1432,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076489,"byte_end":12076497,"line_start":1457,"line_end":1457,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075862,"byte_end":12075952,"line_start":1438,"line_end":1438,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12075957,"byte_end":12075995,"line_start":1439,"line_end":1439,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076000,"byte_end":12076003,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076008,"byte_end":12076022,"line_start":1441,"line_end":1441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076027,"byte_end":12076030,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076035,"byte_end":12076042,"line_start":1443,"line_end":1443,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076047,"byte_end":12076096,"line_start":1444,"line_end":1444,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076101,"byte_end":12076145,"line_start":1445,"line_end":1445,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076150,"byte_end":12076153,"line_start":1446,"line_end":1446,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076158,"byte_end":12076188,"line_start":1447,"line_end":1447,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076193,"byte_end":12076223,"line_start":1448,"line_end":1448,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076228,"byte_end":12076263,"line_start":1449,"line_end":1449,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076268,"byte_end":12076296,"line_start":1450,"line_end":1450,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076301,"byte_end":12076304,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076309,"byte_end":12076337,"line_start":1452,"line_end":1452,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076342,"byte_end":12076370,"line_start":1453,"line_end":1453,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076375,"byte_end":12076416,"line_start":1454,"line_end":1454,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076421,"byte_end":12076428,"line_start":1455,"line_end":1455,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076433,"byte_end":12076477,"line_start":1456,"line_end":1456,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079197,"byte_end":12079206,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":372}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079148,"byte_end":12079185,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079513,"byte_end":12079516,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079473,"byte_end":12079501,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079621,"byte_end":12079629,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079564,"byte_end":12079609,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080297,"byte_end":12080308,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":388}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080249,"byte_end":12080285,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080419,"byte_end":12080422,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080373,"byte_end":12080393,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080398,"byte_end":12080407,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080560,"byte_end":12080569,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080491,"byte_end":12080534,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080539,"byte_end":12080548,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080725,"byte_end":12080734,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080643,"byte_end":12080699,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080704,"byte_end":12080713,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100827,"byte_end":12100832,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":476}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099111,"byte_end":12099160,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099161,"byte_end":12099164,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099165,"byte_end":12099178,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099179,"byte_end":12099182,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099183,"byte_end":12099262,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099263,"byte_end":12099266,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099267,"byte_end":12099274,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099275,"byte_end":12099308,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099309,"byte_end":12099312,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099313,"byte_end":12099411,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099412,"byte_end":12099504,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099505,"byte_end":12099535,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099536,"byte_end":12099543,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099544,"byte_end":12099547,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099548,"byte_end":12099624,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099625,"byte_end":12099628,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099629,"byte_end":12099656,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099657,"byte_end":12099660,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099661,"byte_end":12099748,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099749,"byte_end":12099765,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099766,"byte_end":12099769,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099770,"byte_end":12099777,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099778,"byte_end":12099827,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099828,"byte_end":12099872,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099873,"byte_end":12099876,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099877,"byte_end":12099915,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099916,"byte_end":12099945,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099946,"byte_end":12099949,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099950,"byte_end":12099980,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12099981,"byte_end":12100011,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100012,"byte_end":12100015,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100016,"byte_end":12100090,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100091,"byte_end":12100125,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100126,"byte_end":12100129,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100130,"byte_end":12100181,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100182,"byte_end":12100228,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100229,"byte_end":12100272,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100273,"byte_end":12100278,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100279,"byte_end":12100286,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100287,"byte_end":12100290,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100291,"byte_end":12100312,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100313,"byte_end":12100316,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100317,"byte_end":12100412,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100413,"byte_end":12100511,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100512,"byte_end":12100531,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100532,"byte_end":12100535,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100536,"byte_end":12100543,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100544,"byte_end":12100577,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100578,"byte_end":12100581,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100582,"byte_end":12100612,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100613,"byte_end":12100643,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100644,"byte_end":12100676,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100677,"byte_end":12100694,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100695,"byte_end":12100727,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100728,"byte_end":12100745,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100746,"byte_end":12100779,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100780,"byte_end":12100787,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100788,"byte_end":12100791,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100792,"byte_end":12100815,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12101807,"byte_end":12101812,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100891,"byte_end":12100980,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100985,"byte_end":12101010,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12101015,"byte_end":12101018,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12101023,"byte_end":12101116,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12101121,"byte_end":12101209,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12101214,"byte_end":12101304,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12101309,"byte_end":12101349,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12101354,"byte_end":12101357,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12101362,"byte_end":12101452,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12101457,"byte_end":12101548,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12101553,"byte_end":12101640,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12101645,"byte_end":12101665,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12101670,"byte_end":12101673,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12101678,"byte_end":12101765,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12101770,"byte_end":12101795,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12106112,"byte_end":12106127,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12101976,"byte_end":12102065,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102070,"byte_end":12102095,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102100,"byte_end":12102103,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102108,"byte_end":12102201,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102206,"byte_end":12102294,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102299,"byte_end":12102389,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102394,"byte_end":12102434,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102439,"byte_end":12102442,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102447,"byte_end":12102537,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102542,"byte_end":12102633,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102638,"byte_end":12102725,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102730,"byte_end":12102750,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102755,"byte_end":12102758,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102763,"byte_end":12102850,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102855,"byte_end":12102880,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102885,"byte_end":12102888,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102893,"byte_end":12102905,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102910,"byte_end":12102913,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12102918,"byte_end":12103010,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103015,"byte_end":12103102,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103107,"byte_end":12103119,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103124,"byte_end":12103127,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103132,"byte_end":12103139,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103144,"byte_end":12103177,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103182,"byte_end":12103185,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103190,"byte_end":12103220,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103225,"byte_end":12103252,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103257,"byte_end":12103269,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103274,"byte_end":12103349,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103354,"byte_end":12103393,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103398,"byte_end":12103434,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103439,"byte_end":12103450,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103455,"byte_end":12103460,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103465,"byte_end":12103472,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103477,"byte_end":12103480,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103485,"byte_end":12103579,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103584,"byte_end":12103615,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103620,"byte_end":12103623,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103628,"byte_end":12103723,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103728,"byte_end":12103820,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103825,"byte_end":12103914,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103919,"byte_end":12103922,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103927,"byte_end":12103940,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12103945,"byte_end":12103998,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104003,"byte_end":12104085,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104090,"byte_end":12104097,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104102,"byte_end":12104105,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104110,"byte_end":12104203,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104208,"byte_end":12104303,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104308,"byte_end":12104368,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104373,"byte_end":12104376,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104381,"byte_end":12104395,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104400,"byte_end":12104403,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104408,"byte_end":12104494,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104499,"byte_end":12104593,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104598,"byte_end":12104694,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104699,"byte_end":12104791,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104796,"byte_end":12104852,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104857,"byte_end":12104860,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104865,"byte_end":12104872,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104877,"byte_end":12104933,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104938,"byte_end":12104982,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104987,"byte_end":12104990,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12104995,"byte_end":12105026,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105031,"byte_end":12105034,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105039,"byte_end":12105116,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105121,"byte_end":12105152,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105157,"byte_end":12105160,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105165,"byte_end":12105195,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105200,"byte_end":12105230,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105235,"byte_end":12105238,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105243,"byte_end":12105320,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105325,"byte_end":12105397,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105402,"byte_end":12105405,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105410,"byte_end":12105431,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105436,"byte_end":12105496,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105501,"byte_end":12105583,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105588,"byte_end":12105604,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105609,"byte_end":12105688,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105693,"byte_end":12105736,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105741,"byte_end":12105809,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105814,"byte_end":12105906,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12105911,"byte_end":12105995,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12106000,"byte_end":12106037,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12106042,"byte_end":12106057,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12106062,"byte_end":12106071,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12106076,"byte_end":12106081,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12106086,"byte_end":12106093,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109714,"byte_end":12109727,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12106366,"byte_end":12106459,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12106464,"byte_end":12106516,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12106521,"byte_end":12106524,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12106529,"byte_end":12106622,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12106627,"byte_end":12106717,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12106722,"byte_end":12106811,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12106816,"byte_end":12106870,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12106875,"byte_end":12106878,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12106883,"byte_end":12106976,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12106981,"byte_end":12107074,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107079,"byte_end":12107172,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107177,"byte_end":12107208,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107213,"byte_end":12107216,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107221,"byte_end":12107310,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107315,"byte_end":12107340,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107345,"byte_end":12107348,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107353,"byte_end":12107365,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107370,"byte_end":12107373,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107378,"byte_end":12107471,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107476,"byte_end":12107509,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107514,"byte_end":12107517,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107522,"byte_end":12107617,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107622,"byte_end":12107660,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107665,"byte_end":12107668,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107673,"byte_end":12107768,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107773,"byte_end":12107865,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107870,"byte_end":12107959,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107964,"byte_end":12107967,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107972,"byte_end":12107985,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12107990,"byte_end":12108043,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108048,"byte_end":12108107,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108112,"byte_end":12108119,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108124,"byte_end":12108127,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108132,"byte_end":12108226,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108231,"byte_end":12108318,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108323,"byte_end":12108383,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108388,"byte_end":12108391,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108396,"byte_end":12108410,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108415,"byte_end":12108418,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108423,"byte_end":12108509,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108514,"byte_end":12108608,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108613,"byte_end":12108709,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108714,"byte_end":12108806,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108811,"byte_end":12108867,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108872,"byte_end":12108875,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108880,"byte_end":12108887,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108892,"byte_end":12108948,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12108953,"byte_end":12108997,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109002,"byte_end":12109005,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109010,"byte_end":12109041,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109046,"byte_end":12109049,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109054,"byte_end":12109131,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109136,"byte_end":12109167,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109172,"byte_end":12109175,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109180,"byte_end":12109210,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109215,"byte_end":12109245,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109250,"byte_end":12109253,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109258,"byte_end":12109335,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109340,"byte_end":12109412,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109417,"byte_end":12109420,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109425,"byte_end":12109446,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109451,"byte_end":12109511,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109516,"byte_end":12109598,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109603,"byte_end":12109619,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109624,"byte_end":12109659,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109664,"byte_end":12109673,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109678,"byte_end":12109683,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109688,"byte_end":12109695,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110612,"byte_end":12110617,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109827,"byte_end":12109922,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109927,"byte_end":12109944,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109949,"byte_end":12109952,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12109957,"byte_end":12110051,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110056,"byte_end":12110148,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110153,"byte_end":12110221,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110226,"byte_end":12110229,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110234,"byte_end":12110326,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110331,"byte_end":12110334,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110339,"byte_end":12110353,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110358,"byte_end":12110361,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110366,"byte_end":12110373,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110378,"byte_end":12110411,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110416,"byte_end":12110419,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110424,"byte_end":12110454,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110459,"byte_end":12110484,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110489,"byte_end":12110553,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110558,"byte_end":12110565,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110570,"byte_end":12110588,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110593,"byte_end":12110600,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111779,"byte_end":12111784,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110741,"byte_end":12110792,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110797,"byte_end":12110800,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110805,"byte_end":12110895,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110900,"byte_end":12110994,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12110999,"byte_end":12111093,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111098,"byte_end":12111150,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111155,"byte_end":12111158,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111163,"byte_end":12111256,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111261,"byte_end":12111264,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111269,"byte_end":12111283,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111288,"byte_end":12111291,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111296,"byte_end":12111303,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111308,"byte_end":12111357,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111362,"byte_end":12111406,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111411,"byte_end":12111414,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111419,"byte_end":12111448,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111453,"byte_end":12111486,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111491,"byte_end":12111496,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111501,"byte_end":12111540,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111545,"byte_end":12111599,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111604,"byte_end":12111609,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111614,"byte_end":12111632,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111637,"byte_end":12111642,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111647,"byte_end":12111686,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111691,"byte_end":12111745,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111750,"byte_end":12111755,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111760,"byte_end":12111767,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12113111,"byte_end":12113122,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12111908,"byte_end":12111999,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112004,"byte_end":12112007,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112012,"byte_end":12112103,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112108,"byte_end":12112204,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112209,"byte_end":12112303,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112308,"byte_end":12112327,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112332,"byte_end":12112335,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112340,"byte_end":12112434,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112439,"byte_end":12112481,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112486,"byte_end":12112489,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112494,"byte_end":12112508,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112513,"byte_end":12112516,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112521,"byte_end":12112528,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112533,"byte_end":12112582,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112587,"byte_end":12112631,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112636,"byte_end":12112656,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112661,"byte_end":12112689,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112694,"byte_end":12112697,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112702,"byte_end":12112731,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112736,"byte_end":12112769,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112774,"byte_end":12112779,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112784,"byte_end":12112823,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112828,"byte_end":12112882,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112887,"byte_end":12112892,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112897,"byte_end":12112964,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112969,"byte_end":12112974,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12112979,"byte_end":12113018,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12113023,"byte_end":12113077,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12113082,"byte_end":12113087,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12113092,"byte_end":12113099,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114268,"byte_end":12114277,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12113727,"byte_end":12113782,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12113787,"byte_end":12113790,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12113795,"byte_end":12113870,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12113875,"byte_end":12113925,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12113930,"byte_end":12113933,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12113938,"byte_end":12114022,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114027,"byte_end":12114030,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114035,"byte_end":12114049,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114054,"byte_end":12114057,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114062,"byte_end":12114069,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114074,"byte_end":12114107,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114112,"byte_end":12114115,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114120,"byte_end":12114150,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114155,"byte_end":12114185,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114190,"byte_end":12114244,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114249,"byte_end":12114256,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117576,"byte_end":12117587,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114687,"byte_end":12114774,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114775,"byte_end":12114778,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114779,"byte_end":12114874,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114875,"byte_end":12114964,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114965,"byte_end":12114968,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114969,"byte_end":12115062,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115063,"byte_end":12115100,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115101,"byte_end":12115104,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115105,"byte_end":12115201,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115202,"byte_end":12115205,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115206,"byte_end":12115218,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115219,"byte_end":12115222,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115223,"byte_end":12115313,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115314,"byte_end":12115381,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115382,"byte_end":12115385,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115386,"byte_end":12115400,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115401,"byte_end":12115404,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115405,"byte_end":12115412,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115413,"byte_end":12115462,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115463,"byte_end":12115508,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115509,"byte_end":12115512,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115513,"byte_end":12115540,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115541,"byte_end":12115544,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115545,"byte_end":12115557,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115558,"byte_end":12115613,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115614,"byte_end":12115660,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115661,"byte_end":12115664,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115665,"byte_end":12115739,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115740,"byte_end":12115790,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115791,"byte_end":12115794,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115795,"byte_end":12115824,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115825,"byte_end":12115881,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115882,"byte_end":12115893,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115894,"byte_end":12115897,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115898,"byte_end":12115979,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115980,"byte_end":12115985,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115986,"byte_end":12115993,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115994,"byte_end":12115997,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12115998,"byte_end":12116092,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116093,"byte_end":12116096,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116097,"byte_end":12116191,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116192,"byte_end":12116277,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116278,"byte_end":12116281,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116282,"byte_end":12116381,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116382,"byte_end":12116480,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116481,"byte_end":12116501,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116502,"byte_end":12116505,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116506,"byte_end":12116513,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116514,"byte_end":12116563,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116564,"byte_end":12116595,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116596,"byte_end":12116641,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116642,"byte_end":12116645,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116646,"byte_end":12116667,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116668,"byte_end":12116698,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116699,"byte_end":12116704,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116705,"byte_end":12116708,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116709,"byte_end":12116729,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116730,"byte_end":12116760,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116761,"byte_end":12116791,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116792,"byte_end":12116797,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116798,"byte_end":12116801,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116802,"byte_end":12116833,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116834,"byte_end":12116862,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116863,"byte_end":12116883,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116884,"byte_end":12116920,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116921,"byte_end":12116998,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12116999,"byte_end":12117002,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117003,"byte_end":12117054,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117055,"byte_end":12117095,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117096,"byte_end":12117170,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117171,"byte_end":12117174,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117175,"byte_end":12117263,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117264,"byte_end":12117314,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117315,"byte_end":12117367,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117368,"byte_end":12117396,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117397,"byte_end":12117400,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117401,"byte_end":12117433,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117434,"byte_end":12117451,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117452,"byte_end":12117465,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117466,"byte_end":12117475,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117476,"byte_end":12117481,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117482,"byte_end":12117489,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117490,"byte_end":12117493,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117494,"byte_end":12117523,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117524,"byte_end":12117551,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117552,"byte_end":12117561,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\default.rs","byte_start":12173487,"byte_end":12173490,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\default.rs","byte_start":12173441,"byte_end":12173469,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\default.rs","byte_start":12173470,"byte_end":12173479,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\default.rs","byte_start":12173615,"byte_end":12173624,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\default.rs","byte_start":12173546,"byte_end":12173597,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\default.rs","byte_start":12173598,"byte_end":12173607,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\default.rs","byte_start":12173734,"byte_end":12173751,"line_start":34,"line_end":34,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\default.rs","byte_start":12173685,"byte_end":12173726,"line_start":33,"line_end":33,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":5510,"byte_end":5520,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12031294,"byte_end":12031314,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12032741,"byte_end":12032749,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12036523,"byte_end":12036524,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039609,"byte_end":12039615,"line_start":292,"line_end":292,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039680,"byte_end":12039686,"line_start":293,"line_end":293,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039702,"byte_end":12039708,"line_start":295,"line_end":295,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040041,"byte_end":12040047,"line_start":310,"line_end":310,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":194},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12058570,"byte_end":12058576,"line_start":811,"line_end":811,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12058923,"byte_end":12058929,"line_start":823,"line_end":823,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12059217,"byte_end":12059223,"line_start":831,"line_end":831,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12059570,"byte_end":12059576,"line_start":842,"line_end":842,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12059688,"byte_end":12059694,"line_start":848,"line_end":848,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12060089,"byte_end":12060095,"line_start":865,"line_end":865,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12060198,"byte_end":12060204,"line_start":871,"line_end":871,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12060324,"byte_end":12060330,"line_start":877,"line_end":877,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12060679,"byte_end":12060685,"line_start":892,"line_end":892,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061898,"byte_end":12061903,"line_start":933,"line_end":933,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062410,"byte_end":12062415,"line_start":956,"line_end":956,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064065,"byte_end":12064070,"line_start":1016,"line_end":1016,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065740,"byte_end":12065745,"line_start":1079,"line_end":1079,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065935,"byte_end":12065940,"line_start":1088,"line_end":1088,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12066218,"byte_end":12066223,"line_start":1099,"line_end":1099,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12066364,"byte_end":12066369,"line_start":1105,"line_end":1105,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12066562,"byte_end":12066567,"line_start":1114,"line_end":1114,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12066733,"byte_end":12066738,"line_start":1121,"line_end":1121,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12066828,"byte_end":12066833,"line_start":1127,"line_end":1127,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12067306,"byte_end":12067311,"line_start":1146,"line_end":1146,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12067421,"byte_end":12067426,"line_start":1152,"line_end":1152,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12067548,"byte_end":12067553,"line_start":1158,"line_end":1158,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12067659,"byte_end":12067664,"line_start":1164,"line_end":1164,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068165,"byte_end":12068171,"line_start":1181,"line_end":1181,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068345,"byte_end":12068351,"line_start":1190,"line_end":1190,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068406,"byte_end":12068412,"line_start":1192,"line_end":1192,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068658,"byte_end":12068664,"line_start":1207,"line_end":1207,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069344,"byte_end":12069350,"line_start":1231,"line_end":1231,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076642,"byte_end":12076648,"line_start":1462,"line_end":1462,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12077211,"byte_end":12077217,"line_start":1484,"line_end":1484,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12077344,"byte_end":12077350,"line_start":1490,"line_end":1490,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12077424,"byte_end":12077430,"line_start":1492,"line_end":1492,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12077595,"byte_end":12077601,"line_start":1498,"line_end":1498,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12077749,"byte_end":12077755,"line_start":1504,"line_end":1504,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12078058,"byte_end":12078064,"line_start":1515,"line_end":1515,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12078255,"byte_end":12078261,"line_start":1521,"line_end":1521,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079269,"byte_end":12079278,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079303,"byte_end":12079312,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079334,"byte_end":12079343,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079457,"byte_end":12079466,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079708,"byte_end":12079717,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079915,"byte_end":12079924,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080052,"byte_end":12080061,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080235,"byte_end":12080244,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080355,"byte_end":12080366,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080826,"byte_end":12080837,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080984,"byte_end":12080995,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\deferred.rs","byte_start":12091111,"byte_end":12091119,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\deferred.rs","byte_start":12091243,"byte_end":12091251,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\epoch.rs","byte_start":12095179,"byte_end":12095184,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\epoch.rs","byte_start":12096988,"byte_end":12096999,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100879,"byte_end":12100884,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114402,"byte_end":12114407,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114577,"byte_end":12114582,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117866,"byte_end":12117878,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12120951,"byte_end":12120954,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12120964,"byte_end":12120967,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12121915,"byte_end":12121918,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12125192,"byte_end":12125195,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12125594,"byte_end":12125597,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12126023,"byte_end":12126032,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12126042,"byte_end":12126051,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12126733,"byte_end":12126739,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12131864,"byte_end":12131869,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12140594,"byte_end":12140599,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\list.rs","byte_start":12146664,"byte_end":12146669,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\list.rs","byte_start":12146805,"byte_end":12146810,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\list.rs","byte_start":12147323,"byte_end":12147327,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\list.rs","byte_start":12149910,"byte_end":12149914,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\list.rs","byte_start":12150446,"byte_end":12150450,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\queue.rs","byte_start":12160271,"byte_end":12160276,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\queue.rs","byte_start":12160313,"byte_end":12160318,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\queue.rs","byte_start":12160334,"byte_end":12160339,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\queue.rs","byte_start":12166259,"byte_end":12166264,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\lib.rs","byte_start":5510,"byte_end":5520,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12031294,"byte_end":12031314,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":103},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12032741,"byte_end":12032749,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":40451},"to":{"krate":0,"index":113}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12036523,"byte_end":12036524,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":140},"to":{"krate":0,"index":130}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039609,"byte_end":12039615,"line_start":292,"line_end":292,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039680,"byte_end":12039686,"line_start":293,"line_end":293,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12039702,"byte_end":12039708,"line_start":295,"line_end":295,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12040041,"byte_end":12040047,"line_start":310,"line_end":310,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12058570,"byte_end":12058576,"line_start":811,"line_end":811,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12058923,"byte_end":12058929,"line_start":823,"line_end":823,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":8986}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12059217,"byte_end":12059223,"line_start":831,"line_end":831,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12059570,"byte_end":12059576,"line_start":842,"line_end":842,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12059688,"byte_end":12059694,"line_start":848,"line_end":848,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12060089,"byte_end":12060095,"line_start":865,"line_end":865,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12060198,"byte_end":12060204,"line_start":871,"line_end":871,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12060324,"byte_end":12060330,"line_start":877,"line_end":877,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12060679,"byte_end":12060685,"line_start":892,"line_end":892,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12061898,"byte_end":12061903,"line_start":933,"line_end":933,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":246},"to":{"krate":0,"index":242}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12062410,"byte_end":12062415,"line_start":956,"line_end":956,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12064065,"byte_end":12064070,"line_start":1016,"line_end":1016,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065740,"byte_end":12065745,"line_start":1079,"line_end":1079,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12065935,"byte_end":12065940,"line_start":1088,"line_end":1088,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12066218,"byte_end":12066223,"line_start":1099,"line_end":1099,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12066364,"byte_end":12066369,"line_start":1105,"line_end":1105,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12066562,"byte_end":12066567,"line_start":1114,"line_end":1114,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3104}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12066733,"byte_end":12066738,"line_start":1121,"line_end":1121,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12066828,"byte_end":12066833,"line_start":1127,"line_end":1127,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12067306,"byte_end":12067311,"line_start":1146,"line_end":1146,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2479}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12067421,"byte_end":12067426,"line_start":1152,"line_end":1152,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2482}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12067548,"byte_end":12067553,"line_start":1158,"line_end":1158,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2777}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12067659,"byte_end":12067664,"line_start":1164,"line_end":1164,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2780}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068165,"byte_end":12068171,"line_start":1181,"line_end":1181,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068345,"byte_end":12068351,"line_start":1190,"line_end":1190,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2890}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068406,"byte_end":12068412,"line_start":1192,"line_end":1192,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":300},"to":{"krate":0,"index":242}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12068658,"byte_end":12068664,"line_start":1207,"line_end":1207,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12069344,"byte_end":12069350,"line_start":1231,"line_end":1231,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12076642,"byte_end":12076648,"line_start":1462,"line_end":1462,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12077211,"byte_end":12077217,"line_start":1484,"line_end":1484,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2531}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12077344,"byte_end":12077350,"line_start":1490,"line_end":1490,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2536}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12077424,"byte_end":12077430,"line_start":1492,"line_end":1492,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2578}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12077595,"byte_end":12077601,"line_start":1498,"line_end":1498,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2567}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12077749,"byte_end":12077755,"line_start":1504,"line_end":1504,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12078058,"byte_end":12078064,"line_start":1515,"line_end":1515,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":8986}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\atomic.rs","byte_start":12078255,"byte_end":12078261,"line_start":1521,"line_end":1521,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079269,"byte_end":12079278,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079303,"byte_end":12079312,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079334,"byte_end":12079343,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079457,"byte_end":12079466,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079708,"byte_end":12079717,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12079915,"byte_end":12079924,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080052,"byte_end":12080061,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2531}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080235,"byte_end":12080244,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2536}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080355,"byte_end":12080366,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080826,"byte_end":12080837,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\collector.rs","byte_start":12080984,"byte_end":12080995,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\deferred.rs","byte_start":12091111,"byte_end":12091119,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\deferred.rs","byte_start":12091243,"byte_end":12091251,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\epoch.rs","byte_start":12095179,"byte_end":12095184,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\epoch.rs","byte_start":12096988,"byte_end":12096999,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12100879,"byte_end":12100884,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114402,"byte_end":12114407,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":475},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12114577,"byte_end":12114582,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":475},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\guard.rs","byte_start":12117866,"byte_end":12117878,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12120951,"byte_end":12120954,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12120964,"byte_end":12120967,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12121915,"byte_end":12121918,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12125192,"byte_end":12125195,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12125594,"byte_end":12125597,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12126023,"byte_end":12126032,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12126042,"byte_end":12126051,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12126733,"byte_end":12126739,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12131864,"byte_end":12131869,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\internal.rs","byte_start":12140594,"byte_end":12140599,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":619},"to":{"krate":0,"index":678}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\list.rs","byte_start":12146664,"byte_end":12146669,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":843},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\list.rs","byte_start":12146805,"byte_end":12146810,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\list.rs","byte_start":12147323,"byte_end":12147327,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\list.rs","byte_start":12149910,"byte_end":12149914,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":3115}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\list.rs","byte_start":12150446,"byte_end":12150450,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":7390}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\queue.rs","byte_start":12160271,"byte_end":12160276,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":2892}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\queue.rs","byte_start":12160313,"byte_end":12160318,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":2880}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\queue.rs","byte_start":12160334,"byte_end":12160339,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\utibe\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.3\\src\\sync\\queue.rs","byte_start":12166259,"byte_end":12166264,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":3115}}]}